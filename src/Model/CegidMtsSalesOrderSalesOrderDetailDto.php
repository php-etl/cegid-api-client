<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Cegid\Api\Model;

class CegidMtsSalesOrderSalesOrderDetailDto
{
    /**
     * @var array
     */
    protected $initialized = [];

    public function isInitialized($property): bool
    {
        return array_key_exists($property, $this->initialized);
    }
    /**
     * Nature.
     *
     * @var string|null
     */
    protected $documentType;
    /**
     * Souche.
     *
     * @var string|null
     */
    protected $documentStub;
    /**
     * Numéro.
     *
     * @var int|null
     */
    protected $number;
    /**
     * Indice.
     *
     * @var int|null
     */
    protected $index;
    /**
     * Numéro de ligne.
     *
     * @var int|null
     */
    protected $lineNumber;
    /**
     * Code article.
     *
     * @var string|null
     */
    protected $productCode;
    /**
     * Identifiant article.
     *
     * @var string|null
     */
    protected $productId;
    /**
     * Libellé article.
     *
     * @var string|null
     */
    protected $productLabel;
    /**
     * Quantité commandée.
     *
     * @var float|null
     */
    protected $orderedQuantity;
    /**
     * Quantité reste à livrer.
     *
     * @var float|null
     */
    protected $remainderQuantityForDelivery;
    /**
     * Prix unitaire HT devise.
     *
     * @var float|null
     */
    protected $taxExcludedUnitPriceInCurrency;
    /**
     * Montant HT en devise.
     *
     * @var float|null
     */
    protected $taxExcludedAmountInCurrency;
    /**
     * Montant TTC en devise.
     *
     * @var float|null
     */
    protected $taxIncludedAmountInCurrency;
    /**
     * Date de livraison.
     *
     * @var \DateTime|null
     */
    protected $deliveryDate;
    /**
     * Conditions  spéciales tarification.
     *
     * @var string|null
     */
    protected $termsOfSpecialPrice;
    /**
     * Remise %.
     *
     * @var float|null
     */
    protected $rebatePercent;
    /**
     * Code famille de taxe 1.
     *
     * @var string|null
     */
    protected $taxFamily1Code;
    /**
     * Libellé famille de taxe 1.
     *
     * @var string|null
     */
    protected $taxFamily1Label;
    /**
     * Total taxe 1 en devise.
     *
     * @var float|null
     */
    protected $totalTax1InCurrency;
    /**
     * Taux de TVA.
     *
     * @var float|null
     */
    protected $salesTaxeRate;
    /**
     * Bloc-notes.
     *
     * @var string|null
     */
    protected $notePad;
    /**
     * @var CegidMtsSalesOrderUserDefinedDataDto|null
     */
    protected $productUserDefinedData;
    /**
     * @var CegidMtsSalesOrderLineAdditionalInformationDto|null
     */
    protected $additionalInformation;

    /**
     * Nature.
     */
    public function getDocumentType(): ?string
    {
        return $this->documentType;
    }

    /**
     * Nature.
     */
    public function setDocumentType(?string $documentType): self
    {
        $this->initialized['documentType'] = true;
        $this->documentType = $documentType;

        return $this;
    }

    /**
     * Souche.
     */
    public function getDocumentStub(): ?string
    {
        return $this->documentStub;
    }

    /**
     * Souche.
     */
    public function setDocumentStub(?string $documentStub): self
    {
        $this->initialized['documentStub'] = true;
        $this->documentStub = $documentStub;

        return $this;
    }

    /**
     * Numéro.
     */
    public function getNumber(): ?int
    {
        return $this->number;
    }

    /**
     * Numéro.
     */
    public function setNumber(?int $number): self
    {
        $this->initialized['number'] = true;
        $this->number = $number;

        return $this;
    }

    /**
     * Indice.
     */
    public function getIndex(): ?int
    {
        return $this->index;
    }

    /**
     * Indice.
     */
    public function setIndex(?int $index): self
    {
        $this->initialized['index'] = true;
        $this->index = $index;

        return $this;
    }

    /**
     * Numéro de ligne.
     */
    public function getLineNumber(): ?int
    {
        return $this->lineNumber;
    }

    /**
     * Numéro de ligne.
     */
    public function setLineNumber(?int $lineNumber): self
    {
        $this->initialized['lineNumber'] = true;
        $this->lineNumber = $lineNumber;

        return $this;
    }

    /**
     * Code article.
     */
    public function getProductCode(): ?string
    {
        return $this->productCode;
    }

    /**
     * Code article.
     */
    public function setProductCode(?string $productCode): self
    {
        $this->initialized['productCode'] = true;
        $this->productCode = $productCode;

        return $this;
    }

    /**
     * Identifiant article.
     */
    public function getProductId(): ?string
    {
        return $this->productId;
    }

    /**
     * Identifiant article.
     */
    public function setProductId(?string $productId): self
    {
        $this->initialized['productId'] = true;
        $this->productId = $productId;

        return $this;
    }

    /**
     * Libellé article.
     */
    public function getProductLabel(): ?string
    {
        return $this->productLabel;
    }

    /**
     * Libellé article.
     */
    public function setProductLabel(?string $productLabel): self
    {
        $this->initialized['productLabel'] = true;
        $this->productLabel = $productLabel;

        return $this;
    }

    /**
     * Quantité commandée.
     */
    public function getOrderedQuantity(): ?float
    {
        return $this->orderedQuantity;
    }

    /**
     * Quantité commandée.
     */
    public function setOrderedQuantity(?float $orderedQuantity): self
    {
        $this->initialized['orderedQuantity'] = true;
        $this->orderedQuantity = $orderedQuantity;

        return $this;
    }

    /**
     * Quantité reste à livrer.
     */
    public function getRemainderQuantityForDelivery(): ?float
    {
        return $this->remainderQuantityForDelivery;
    }

    /**
     * Quantité reste à livrer.
     */
    public function setRemainderQuantityForDelivery(?float $remainderQuantityForDelivery): self
    {
        $this->initialized['remainderQuantityForDelivery'] = true;
        $this->remainderQuantityForDelivery = $remainderQuantityForDelivery;

        return $this;
    }

    /**
     * Prix unitaire HT devise.
     */
    public function getTaxExcludedUnitPriceInCurrency(): ?float
    {
        return $this->taxExcludedUnitPriceInCurrency;
    }

    /**
     * Prix unitaire HT devise.
     */
    public function setTaxExcludedUnitPriceInCurrency(?float $taxExcludedUnitPriceInCurrency): self
    {
        $this->initialized['taxExcludedUnitPriceInCurrency'] = true;
        $this->taxExcludedUnitPriceInCurrency = $taxExcludedUnitPriceInCurrency;

        return $this;
    }

    /**
     * Montant HT en devise.
     */
    public function getTaxExcludedAmountInCurrency(): ?float
    {
        return $this->taxExcludedAmountInCurrency;
    }

    /**
     * Montant HT en devise.
     */
    public function setTaxExcludedAmountInCurrency(?float $taxExcludedAmountInCurrency): self
    {
        $this->initialized['taxExcludedAmountInCurrency'] = true;
        $this->taxExcludedAmountInCurrency = $taxExcludedAmountInCurrency;

        return $this;
    }

    /**
     * Montant TTC en devise.
     */
    public function getTaxIncludedAmountInCurrency(): ?float
    {
        return $this->taxIncludedAmountInCurrency;
    }

    /**
     * Montant TTC en devise.
     */
    public function setTaxIncludedAmountInCurrency(?float $taxIncludedAmountInCurrency): self
    {
        $this->initialized['taxIncludedAmountInCurrency'] = true;
        $this->taxIncludedAmountInCurrency = $taxIncludedAmountInCurrency;

        return $this;
    }

    /**
     * Date de livraison.
     */
    public function getDeliveryDate(): ?\DateTime
    {
        return $this->deliveryDate;
    }

    /**
     * Date de livraison.
     */
    public function setDeliveryDate(?\DateTime $deliveryDate): self
    {
        $this->initialized['deliveryDate'] = true;
        $this->deliveryDate = $deliveryDate;

        return $this;
    }

    /**
     * Conditions  spéciales tarification.
     */
    public function getTermsOfSpecialPrice(): ?string
    {
        return $this->termsOfSpecialPrice;
    }

    /**
     * Conditions  spéciales tarification.
     */
    public function setTermsOfSpecialPrice(?string $termsOfSpecialPrice): self
    {
        $this->initialized['termsOfSpecialPrice'] = true;
        $this->termsOfSpecialPrice = $termsOfSpecialPrice;

        return $this;
    }

    /**
     * Remise %.
     */
    public function getRebatePercent(): ?float
    {
        return $this->rebatePercent;
    }

    /**
     * Remise %.
     */
    public function setRebatePercent(?float $rebatePercent): self
    {
        $this->initialized['rebatePercent'] = true;
        $this->rebatePercent = $rebatePercent;

        return $this;
    }

    /**
     * Code famille de taxe 1.
     */
    public function getTaxFamily1Code(): ?string
    {
        return $this->taxFamily1Code;
    }

    /**
     * Code famille de taxe 1.
     */
    public function setTaxFamily1Code(?string $taxFamily1Code): self
    {
        $this->initialized['taxFamily1Code'] = true;
        $this->taxFamily1Code = $taxFamily1Code;

        return $this;
    }

    /**
     * Libellé famille de taxe 1.
     */
    public function getTaxFamily1Label(): ?string
    {
        return $this->taxFamily1Label;
    }

    /**
     * Libellé famille de taxe 1.
     */
    public function setTaxFamily1Label(?string $taxFamily1Label): self
    {
        $this->initialized['taxFamily1Label'] = true;
        $this->taxFamily1Label = $taxFamily1Label;

        return $this;
    }

    /**
     * Total taxe 1 en devise.
     */
    public function getTotalTax1InCurrency(): ?float
    {
        return $this->totalTax1InCurrency;
    }

    /**
     * Total taxe 1 en devise.
     */
    public function setTotalTax1InCurrency(?float $totalTax1InCurrency): self
    {
        $this->initialized['totalTax1InCurrency'] = true;
        $this->totalTax1InCurrency = $totalTax1InCurrency;

        return $this;
    }

    /**
     * Taux de TVA.
     */
    public function getSalesTaxeRate(): ?float
    {
        return $this->salesTaxeRate;
    }

    /**
     * Taux de TVA.
     */
    public function setSalesTaxeRate(?float $salesTaxeRate): self
    {
        $this->initialized['salesTaxeRate'] = true;
        $this->salesTaxeRate = $salesTaxeRate;

        return $this;
    }

    /**
     * Bloc-notes.
     */
    public function getNotePad(): ?string
    {
        return $this->notePad;
    }

    /**
     * Bloc-notes.
     */
    public function setNotePad(?string $notePad): self
    {
        $this->initialized['notePad'] = true;
        $this->notePad = $notePad;

        return $this;
    }

    public function getProductUserDefinedData(): ?CegidMtsSalesOrderUserDefinedDataDto
    {
        return $this->productUserDefinedData;
    }

    public function setProductUserDefinedData(?CegidMtsSalesOrderUserDefinedDataDto $productUserDefinedData): self
    {
        $this->initialized['productUserDefinedData'] = true;
        $this->productUserDefinedData = $productUserDefinedData;

        return $this;
    }

    public function getAdditionalInformation(): ?CegidMtsSalesOrderLineAdditionalInformationDto
    {
        return $this->additionalInformation;
    }

    public function setAdditionalInformation(?CegidMtsSalesOrderLineAdditionalInformationDto $additionalInformation): self
    {
        $this->initialized['additionalInformation'] = true;
        $this->additionalInformation = $additionalInformation;

        return $this;
    }
}
