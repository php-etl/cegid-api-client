<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Cegid\Api\Model;

class MicrosoftODataEdmIEdmModel
{
    /**
     * @var array
     */
    protected $initialized = [];

    public function isInitialized($property): bool
    {
        return array_key_exists($property, $this->initialized);
    }
    /**
     * @var list<MicrosoftODataEdmIEdmSchemaElement>|null
     */
    protected $schemaElements;
    /**
     * @var list<MicrosoftODataEdmAnnotationsIEdmVocabularyAnnotation>|null
     */
    protected $vocabularyAnnotations;
    /**
     * @var list<MicrosoftODataEdmIEdmModel>|null
     */
    protected $referencedModels;
    /**
     * @var list<string>|null
     */
    protected $declaredNamespaces;
    /**
     * @var MicrosoftODataEdmAnnotationsIEdmDirectValueAnnotationsManager|null
     */
    protected $directValueAnnotationsManager;
    /**
     * @var MicrosoftODataEdmIEdmEntityContainer|null
     */
    protected $entityContainer;

    /**
     * @return list<MicrosoftODataEdmIEdmSchemaElement>|null
     */
    public function getSchemaElements(): ?array
    {
        return $this->schemaElements;
    }

    /**
     * @param list<MicrosoftODataEdmIEdmSchemaElement>|null $schemaElements
     */
    public function setSchemaElements(?array $schemaElements): self
    {
        $this->initialized['schemaElements'] = true;
        $this->schemaElements = $schemaElements;

        return $this;
    }

    /**
     * @return list<MicrosoftODataEdmAnnotationsIEdmVocabularyAnnotation>|null
     */
    public function getVocabularyAnnotations(): ?array
    {
        return $this->vocabularyAnnotations;
    }

    /**
     * @param list<MicrosoftODataEdmAnnotationsIEdmVocabularyAnnotation>|null $vocabularyAnnotations
     */
    public function setVocabularyAnnotations(?array $vocabularyAnnotations): self
    {
        $this->initialized['vocabularyAnnotations'] = true;
        $this->vocabularyAnnotations = $vocabularyAnnotations;

        return $this;
    }

    /**
     * @return list<MicrosoftODataEdmIEdmModel>|null
     */
    public function getReferencedModels(): ?array
    {
        return $this->referencedModels;
    }

    /**
     * @param list<MicrosoftODataEdmIEdmModel>|null $referencedModels
     */
    public function setReferencedModels(?array $referencedModels): self
    {
        $this->initialized['referencedModels'] = true;
        $this->referencedModels = $referencedModels;

        return $this;
    }

    /**
     * @return list<string>|null
     */
    public function getDeclaredNamespaces(): ?array
    {
        return $this->declaredNamespaces;
    }

    /**
     * @param list<string>|null $declaredNamespaces
     */
    public function setDeclaredNamespaces(?array $declaredNamespaces): self
    {
        $this->initialized['declaredNamespaces'] = true;
        $this->declaredNamespaces = $declaredNamespaces;

        return $this;
    }

    public function getDirectValueAnnotationsManager(): ?MicrosoftODataEdmAnnotationsIEdmDirectValueAnnotationsManager
    {
        return $this->directValueAnnotationsManager;
    }

    public function setDirectValueAnnotationsManager(?MicrosoftODataEdmAnnotationsIEdmDirectValueAnnotationsManager $directValueAnnotationsManager): self
    {
        $this->initialized['directValueAnnotationsManager'] = true;
        $this->directValueAnnotationsManager = $directValueAnnotationsManager;

        return $this;
    }

    public function getEntityContainer(): ?MicrosoftODataEdmIEdmEntityContainer
    {
        return $this->entityContainer;
    }

    public function setEntityContainer(?MicrosoftODataEdmIEdmEntityContainer $entityContainer): self
    {
        $this->initialized['entityContainer'] = true;
        $this->entityContainer = $entityContainer;

        return $this;
    }
}
