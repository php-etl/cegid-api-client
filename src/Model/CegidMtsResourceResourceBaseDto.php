<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Cegid\Api\Model;

class CegidMtsResourceResourceBaseDto
{
    /**
     * @var array
     */
    protected $initialized = [];

    public function isInitialized($property): bool
    {
        return array_key_exists($property, $this->initialized);
    }
    /**
     * Type de la ressource.
     *
     * @var string|null
     */
    protected $resourceType;
    /**
     * Code ressource.
     *
     * @var string|null
     */
    protected $resource;
    /**
     * Code auxiliaire.
     *
     * @var string|null
     */
    protected $auxiliaryAccount;
    /**
     * Code salarié.
     *
     * @var string|null
     */
    protected $employee;
    /**
     * Nom de la ressource.
     *
     * @var string|null
     */
    protected $lastName;
    /**
     * Prénom de la ressource.
     *
     * @var string|null
     */
    protected $firstName;
    /**
     * Adresse 1.
     *
     * @var string|null
     */
    protected $address1;
    /**
     * Adresse 2.
     *
     * @var string|null
     */
    protected $address2;
    /**
     * Adresse 3.
     *
     * @var string|null
     */
    protected $address3;
    /**
     * Code postal.
     *
     * @var string|null
     */
    protected $postalCode;
    /**
     * Ville.
     *
     * @var string|null
     */
    protected $city;
    /**
     * Pays.
     *
     * @var string|null
     */
    protected $country;
    /**
     * Région.
     *
     * @var string|null
     */
    protected $region;
    /**
     * Téléphone.
     *
     * @var string|null
     */
    protected $phoneNumber;
    /**
     * Téléphone 2.
     *
     * @var string|null
     */
    protected $phoneNumber2;
    /**
     * Immatriculation.
     *
     * @var string|null
     */
    protected $registration;
    /**
     * Saisie activité.
     *
     * @var bool|null
     */
    protected $canActivityEntry;
    /**
     * Date de début de disponibilité.
     *
     * @var \DateTime|null
     */
    protected $startDateAvailability;
    /**
     * Date de fin de disponibilité.
     *
     * @var \DateTime|null
     */
    protected $endDateAvailability;
    /**
     * Coût unitaire.
     *
     * @var float|null
     */
    protected $unitCost;
    /**
     * Unité.
     *
     * @var string|null
     */
    protected $timeUnit;
    /**
     * Taux charge patronale.
     *
     * @var float|null
     */
    protected $chargeEmployersRate;
    /**
     * Taux frais généraux 1.
     *
     * @var float|null
     */
    protected $generalExpensesRate1;
    /**
     * Taux frais généraux 2.
     *
     * @var float|null
     */
    protected $generalExpensesRate2;
    /**
     * Coefficient métier.
     *
     * @var float|null
     */
    protected $tradeCoefficient;
    /**
     * Calcul automatique PR.
     *
     * @var bool|null
     */
    protected $isCostPriceCalculatedAutomatically;
    /**
     * Calcul automatique PV.
     *
     * @var bool|null
     */
    protected $isSellingPriceCalculatedAutomatically;
    /**
     * Famille tarifaire.
     *
     * @var string|null
     */
    protected $pricesListFamily;
    /**
     * Taux revient 1.
     *
     * @var float|null
     */
    protected $costPrice1;
    /**
     * PV HT 1.
     *
     * @var float|null
     */
    protected $sellingPriceTaxExclude1;
    /**
     * PV TTC 1 chargé.
     *
     * @var float|null
     */
    protected $sellingPriceTaxInclude1;
    /**
     * PV HT 1 calculé.
     *
     * @var float|null
     */
    protected $sellingPriceExcludedTaxCalculated1;
    /**
     * Date début prix 1.
     *
     * @var \DateTime|null
     */
    protected $dateStartPrice1;
    /**
     * Taux revient 2.
     *
     * @var float|null
     */
    protected $costPrice2;
    /**
     * PV HT 2.
     *
     * @var float|null
     */
    protected $sellingPriceTaxExclude2;
    /**
     * PV TTC 2.
     *
     * @var float|null
     */
    protected $sellingPriceTaxInclude2;
    /**
     * PV HT 2 calculé.
     *
     * @var float|null
     */
    protected $sellingPriceExcludedTaxCalculated2;
    /**
     * Date début prix 2.
     *
     * @var \DateTime|null
     */
    protected $dateStartPrice2;
    /**
     * Coût unitaire 2.
     *
     * @var float|null
     */
    protected $unitCost2;
    /**
     * Taux revient 3.
     *
     * @var float|null
     */
    protected $costPrice3;
    /**
     * PV HT 3.
     *
     * @var float|null
     */
    protected $sellingPriceTaxExclude3;
    /**
     * PV TTC 3.
     *
     * @var float|null
     */
    protected $sellingPriceTaxInclude3;
    /**
     * PV HT 3 calculé.
     *
     * @var float|null
     */
    protected $sellingPriceExcludedTaxCalculated3;
    /**
     * Date début prix 3.
     *
     * @var \DateTime|null
     */
    protected $dateStartPrice3;
    /**
     * Coût unitaire 3.
     *
     * @var float|null
     */
    protected $unitCost3;
    /**
     * Taux revient 4.
     *
     * @var float|null
     */
    protected $costPrice4;
    /**
     * PV HT 4.
     *
     * @var float|null
     */
    protected $sellingPriceTaxExclude4;
    /**
     * PV TTC 4.
     *
     * @var float|null
     */
    protected $sellingPriceTaxInclude4;
    /**
     * PV HT 4 calculé.
     *
     * @var float|null
     */
    protected $sellingPriceExcludedTaxCalculated4;
    /**
     * Date début prix 4.
     *
     * @var \DateTime|null
     */
    protected $dateStartPrice4;
    /**
     * Coût unitaire 4.
     *
     * @var float|null
     */
    protected $unitCost4;
    /**
     * Coef. PR / PV.
     *
     * @var float|null
     */
    protected $coefficientRateSales;
    /**
     * Utilisateur associé.
     *
     * @var string|null
     */
    protected $associatedUser;
    /**
     * Fermé.
     *
     * @var bool|null
     */
    protected $isClosed;
    /**
     * Fonction.
     *
     * @var string|null
     */
    protected $currentFunction;
    /**
     * Date début fonction 1.
     *
     * @var \DateTime|null
     */
    protected $startDateCurrentFunction;
    /**
     * Fonction 2.
     *
     * @var string|null
     */
    protected $previousFunction1;
    /**
     * Date début fonction 2.
     *
     * @var \DateTime|null
     */
    protected $startDatePreviousFunction1;
    /**
     * Fonction 3.
     *
     * @var string|null
     */
    protected $previousFunction2;
    /**
     * Date début fonction 3.
     *
     * @var \DateTime|null
     */
    protected $startDatePreviousFunction2;
    /**
     * Fonction 4.
     *
     * @var string|null
     */
    protected $previousFunction3;
    /**
     * Date début fonction 4.
     *
     * @var \DateTime|null
     */
    protected $startDatePreviousFunction3;
    /**
     * Créateur.
     *
     * @var string|null
     */
    protected $createdBy;
    /**
     * Créé par.
     *
     * @var string|null
     */
    protected $creationMode;
    /**
     * Modifié par.
     *
     * @var string|null
     */
    protected $modifiedBy;
    /**
     * Date de création.
     *
     * @var \DateTime|null
     */
    protected $creationDate;
    /**
     * Date de modification.
     *
     * @var \DateTime|null
     */
    protected $modificationDate;
    /**
     * Valeur libre 1.
     *
     * @var float|null
     */
    protected $userFieldNumeric1;
    /**
     * Valeur libre 2.
     *
     * @var float|null
     */
    protected $userFieldNumeric2;
    /**
     * Valeur libre 3.
     *
     * @var float|null
     */
    protected $userFieldNumeric3;
    /**
     * Date libre 1.
     *
     * @var \DateTime|null
     */
    protected $userFieldDate1;
    /**
     * Date libre 2.
     *
     * @var \DateTime|null
     */
    protected $userFieldDate2;
    /**
     * Date libre 3.
     *
     * @var \DateTime|null
     */
    protected $userFieldDate3;
    /**
     * Table libre 1.
     *
     * @var string|null
     */
    protected $userFieldResource1;
    /**
     * Table libre 2.
     *
     * @var string|null
     */
    protected $userFieldResource2;
    /**
     * Table libre 3.
     *
     * @var string|null
     */
    protected $userFieldResource3;
    /**
     * Table libre 4.
     *
     * @var string|null
     */
    protected $userFieldResource4;
    /**
     * Table libre 5.
     *
     * @var string|null
     */
    protected $userFieldResource5;
    /**
     * Table libre 6.
     *
     * @var string|null
     */
    protected $userFieldResource6;
    /**
     * Table libre 7.
     *
     * @var string|null
     */
    protected $userFieldResource7;
    /**
     * Table libre 8.
     *
     * @var string|null
     */
    protected $userFieldResource8;
    /**
     * Table libre 9.
     *
     * @var string|null
     */
    protected $userFieldResource9;
    /**
     * Table libre 10.
     *
     * @var string|null
     */
    protected $userFieldResourceA;
    /**
     * Texte libre 1.
     *
     * @var string|null
     */
    protected $userFieldText1;
    /**
     * Texte libre 2.
     *
     * @var string|null
     */
    protected $userFieldText2;
    /**
     * Texte libre 3.
     *
     * @var string|null
     */
    protected $userFieldText3;
    /**
     * Décision libre 1.
     *
     * @var bool|null
     */
    protected $userFieldBoolean1;
    /**
     * Décision libre 2.
     *
     * @var bool|null
     */
    protected $userFieldBoolean2;
    /**
     * Décision libre 3.
     *
     * @var bool|null
     */
    protected $userFieldBoolean3;
    /**
     * Calendrier.
     *
     * @var string|null
     */
    protected $calendar;
    /**
     * Prestation par défaut.
     *
     * @var string|null
     */
    protected $defaultItem;
    /**
     * Transfert activité / paie.
     *
     * @var bool|null
     */
    protected $isTransferActivityPay;
    /**
     * Calendrier spécifique.
     *
     * @var bool|null
     */
    protected $hasPersonalCalendar;
    /**
     * E-mail.
     *
     * @var string|null
     */
    protected $email;
    /**
     * Département.
     *
     * @var string|null
     */
    protected $department;
    /**
     * Etablissement.
     *
     * @var string|null
     */
    protected $businessCenter;
    /**
     * Bloc-notes.
     *
     * @var string|null
     */
    protected $notepad;
    /**
     * Code producteur MES.
     *
     * @var string|null
     */
    protected $producerCode;
    /**
     * Presence maxi / jour (HHCC).
     *
     * @var float|null
     */
    protected $presenceMaximumDay;
    /**
     * Ressource générique.
     *
     * @var bool|null
     */
    protected $isGenericResource;
    /**
     * Ressource mère.
     *
     * @var string|null
     */
    protected $parentResource;
    /**
     * Taux de simulation.
     *
     * @var float|null
     */
    protected $simulationRate;
    /**
     * Section analyse PDR.
     *
     * @var string|null
     */
    protected $analysisSection;
    /**
     * Rubrique analyse.
     *
     * @var string|null
     */
    protected $analysisHeader;
    /**
     * Ressource humaine.
     *
     * @var bool|null
     */
    protected $isHuman;
    /**
     * Dépôt.
     *
     * @var string|null
     */
    protected $warehouse;
    /**
     * Date sortie définitive.
     *
     * @var \DateTime|null
     */
    protected $retirementDate;
    /**
     * Ressource mensualisée.
     *
     * @var bool|null
     */
    protected $isMonthlyPaid;
    /**
     * Equipe.
     *
     * @var string|null
     */
    protected $team;
    /**
     * Ressource SCM.
     *
     * @var bool|null
     */
    protected $isScmResource;
    /**
     * Groupe.
     *
     * @var string|null
     */
    protected $group;
    /**
     * Chaine.
     *
     * @var string|null
     */
    protected $actionSequence;
    /**
     * Phase.
     *
     * @var string|null
     */
    protected $phase;
    /**
     * Gestion groupe.
     *
     * @var string|null
     */
    protected $groupManagement;
    /**
     * Effectif.
     *
     * @var int|null
     */
    protected $numberEmployees;
    /**
     * Ordre d'affichage.
     *
     * @var int|null
     */
    protected $displayingOrder;
    /**
     * Ordre pour Calcul.
     *
     * @var int|null
     */
    protected $calculationOrder;
    /**
     * Ressource fermée pour le PDC.
     *
     * @var bool|null
     */
    protected $isClosedForWorkload;
    /**
     * Capacité moyenne jour PDC.
     *
     * @var float|null
     */
    protected $dayAverageCapacity;
    /**
     * % maximum par Of PDC.
     *
     * @var float|null
     */
    protected $maximumPercent;
    /**
     * Fonction principale 1.
     *
     * @var bool|null
     */
    protected $isMainFunction1;
    /**
     * Fonction principale 2.
     *
     * @var bool|null
     */
    protected $isMainFunction2;
    /**
     * Fonction principale 3.
     *
     * @var bool|null
     */
    protected $isMainFunction3;
    /**
     * Fonction principale 4.
     *
     * @var bool|null
     */
    protected $isMainFunction4;
    /**
     * Date fin fonction 3.
     *
     * @var \DateTime|null
     */
    protected $endDateFunction3;
    /**
     * Date fin fonction 4.
     *
     * @var \DateTime|null
     */
    protected $endDateFunction4;
    /**
     * Coefficient correctif fonction 1.
     *
     * @var float|null
     */
    protected $percentageSkill;
    /**
     * Coefficient correctif fonction 2.
     *
     * @var float|null
     */
    protected $percentageSkill1;
    /**
     * Coefficient correctif fonction 3.
     *
     * @var float|null
     */
    protected $percentageSkill2;
    /**
     * Coefficient correctif fonction 4.
     *
     * @var float|null
     */
    protected $percentageSkill3;
    /**
     * Secteur géographique.
     *
     * @var string|null
     */
    protected $geographicSector;
    /**
     * Capacité standard.
     *
     * @var int|null
     */
    protected $standardCapacity;
    /**
     * Capacité maximum.
     *
     * @var int|null
     */
    protected $maximumCapacity;
    /**
     * Etat instantané.
     *
     * @var string|null
     */
    protected $availabilityState;
    /**
     * Planification en masse.
     *
     * @var bool|null
     */
    protected $isMassSchedulable;
    /**
     * Gestion de l'affectation.
     *
     * @var bool|null
     */
    protected $isAssignable;
    /**
     * Site géographique.
     *
     * @var string|null
     */
    protected $geographicLocation;
    /**
     * Surbooking autorisé.
     *
     * @var bool|null
     */
    protected $isOverbookingAllowed;
    /**
     * Type de phase.
     *
     * @var string|null
     */
    protected $phaseType;
    /**
     * Atelier.
     *
     * @var string|null
     */
    protected $workShop;
    /**
     * Type de travail.
     *
     * @var string|null
     */
    protected $jobType;
    /**
     * Téléphone 3.
     *
     * @var string|null
     */
    protected $phoneNumber3;
    /**
     * E-mail 2.
     *
     * @var string|null
     */
    protected $email2;
    /**
     * E-mail 3.
     *
     * @var string|null
     */
    protected $email3;
    /**
     * Agence.
     *
     * @var string|null
     */
    protected $agency;
    /**
     * Responsable hiérarchique.
     *
     * @var string|null
     */
    protected $manager;
    /**
     * Catégorie.
     *
     * @var string|null
     */
    protected $category;

    /**
     * Type de la ressource.
     */
    public function getResourceType(): ?string
    {
        return $this->resourceType;
    }

    /**
     * Type de la ressource.
     */
    public function setResourceType(?string $resourceType): self
    {
        $this->initialized['resourceType'] = true;
        $this->resourceType = $resourceType;

        return $this;
    }

    /**
     * Code ressource.
     */
    public function getResource(): ?string
    {
        return $this->resource;
    }

    /**
     * Code ressource.
     */
    public function setResource(?string $resource): self
    {
        $this->initialized['resource'] = true;
        $this->resource = $resource;

        return $this;
    }

    /**
     * Code auxiliaire.
     */
    public function getAuxiliaryAccount(): ?string
    {
        return $this->auxiliaryAccount;
    }

    /**
     * Code auxiliaire.
     */
    public function setAuxiliaryAccount(?string $auxiliaryAccount): self
    {
        $this->initialized['auxiliaryAccount'] = true;
        $this->auxiliaryAccount = $auxiliaryAccount;

        return $this;
    }

    /**
     * Code salarié.
     */
    public function getEmployee(): ?string
    {
        return $this->employee;
    }

    /**
     * Code salarié.
     */
    public function setEmployee(?string $employee): self
    {
        $this->initialized['employee'] = true;
        $this->employee = $employee;

        return $this;
    }

    /**
     * Nom de la ressource.
     */
    public function getLastName(): ?string
    {
        return $this->lastName;
    }

    /**
     * Nom de la ressource.
     */
    public function setLastName(?string $lastName): self
    {
        $this->initialized['lastName'] = true;
        $this->lastName = $lastName;

        return $this;
    }

    /**
     * Prénom de la ressource.
     */
    public function getFirstName(): ?string
    {
        return $this->firstName;
    }

    /**
     * Prénom de la ressource.
     */
    public function setFirstName(?string $firstName): self
    {
        $this->initialized['firstName'] = true;
        $this->firstName = $firstName;

        return $this;
    }

    /**
     * Adresse 1.
     */
    public function getAddress1(): ?string
    {
        return $this->address1;
    }

    /**
     * Adresse 1.
     */
    public function setAddress1(?string $address1): self
    {
        $this->initialized['address1'] = true;
        $this->address1 = $address1;

        return $this;
    }

    /**
     * Adresse 2.
     */
    public function getAddress2(): ?string
    {
        return $this->address2;
    }

    /**
     * Adresse 2.
     */
    public function setAddress2(?string $address2): self
    {
        $this->initialized['address2'] = true;
        $this->address2 = $address2;

        return $this;
    }

    /**
     * Adresse 3.
     */
    public function getAddress3(): ?string
    {
        return $this->address3;
    }

    /**
     * Adresse 3.
     */
    public function setAddress3(?string $address3): self
    {
        $this->initialized['address3'] = true;
        $this->address3 = $address3;

        return $this;
    }

    /**
     * Code postal.
     */
    public function getPostalCode(): ?string
    {
        return $this->postalCode;
    }

    /**
     * Code postal.
     */
    public function setPostalCode(?string $postalCode): self
    {
        $this->initialized['postalCode'] = true;
        $this->postalCode = $postalCode;

        return $this;
    }

    /**
     * Ville.
     */
    public function getCity(): ?string
    {
        return $this->city;
    }

    /**
     * Ville.
     */
    public function setCity(?string $city): self
    {
        $this->initialized['city'] = true;
        $this->city = $city;

        return $this;
    }

    /**
     * Pays.
     */
    public function getCountry(): ?string
    {
        return $this->country;
    }

    /**
     * Pays.
     */
    public function setCountry(?string $country): self
    {
        $this->initialized['country'] = true;
        $this->country = $country;

        return $this;
    }

    /**
     * Région.
     */
    public function getRegion(): ?string
    {
        return $this->region;
    }

    /**
     * Région.
     */
    public function setRegion(?string $region): self
    {
        $this->initialized['region'] = true;
        $this->region = $region;

        return $this;
    }

    /**
     * Téléphone.
     */
    public function getPhoneNumber(): ?string
    {
        return $this->phoneNumber;
    }

    /**
     * Téléphone.
     */
    public function setPhoneNumber(?string $phoneNumber): self
    {
        $this->initialized['phoneNumber'] = true;
        $this->phoneNumber = $phoneNumber;

        return $this;
    }

    /**
     * Téléphone 2.
     */
    public function getPhoneNumber2(): ?string
    {
        return $this->phoneNumber2;
    }

    /**
     * Téléphone 2.
     */
    public function setPhoneNumber2(?string $phoneNumber2): self
    {
        $this->initialized['phoneNumber2'] = true;
        $this->phoneNumber2 = $phoneNumber2;

        return $this;
    }

    /**
     * Immatriculation.
     */
    public function getRegistration(): ?string
    {
        return $this->registration;
    }

    /**
     * Immatriculation.
     */
    public function setRegistration(?string $registration): self
    {
        $this->initialized['registration'] = true;
        $this->registration = $registration;

        return $this;
    }

    /**
     * Saisie activité.
     */
    public function getCanActivityEntry(): ?bool
    {
        return $this->canActivityEntry;
    }

    /**
     * Saisie activité.
     */
    public function setCanActivityEntry(?bool $canActivityEntry): self
    {
        $this->initialized['canActivityEntry'] = true;
        $this->canActivityEntry = $canActivityEntry;

        return $this;
    }

    /**
     * Date de début de disponibilité.
     */
    public function getStartDateAvailability(): ?\DateTime
    {
        return $this->startDateAvailability;
    }

    /**
     * Date de début de disponibilité.
     */
    public function setStartDateAvailability(?\DateTime $startDateAvailability): self
    {
        $this->initialized['startDateAvailability'] = true;
        $this->startDateAvailability = $startDateAvailability;

        return $this;
    }

    /**
     * Date de fin de disponibilité.
     */
    public function getEndDateAvailability(): ?\DateTime
    {
        return $this->endDateAvailability;
    }

    /**
     * Date de fin de disponibilité.
     */
    public function setEndDateAvailability(?\DateTime $endDateAvailability): self
    {
        $this->initialized['endDateAvailability'] = true;
        $this->endDateAvailability = $endDateAvailability;

        return $this;
    }

    /**
     * Coût unitaire.
     */
    public function getUnitCost(): ?float
    {
        return $this->unitCost;
    }

    /**
     * Coût unitaire.
     */
    public function setUnitCost(?float $unitCost): self
    {
        $this->initialized['unitCost'] = true;
        $this->unitCost = $unitCost;

        return $this;
    }

    /**
     * Unité.
     */
    public function getTimeUnit(): ?string
    {
        return $this->timeUnit;
    }

    /**
     * Unité.
     */
    public function setTimeUnit(?string $timeUnit): self
    {
        $this->initialized['timeUnit'] = true;
        $this->timeUnit = $timeUnit;

        return $this;
    }

    /**
     * Taux charge patronale.
     */
    public function getChargeEmployersRate(): ?float
    {
        return $this->chargeEmployersRate;
    }

    /**
     * Taux charge patronale.
     */
    public function setChargeEmployersRate(?float $chargeEmployersRate): self
    {
        $this->initialized['chargeEmployersRate'] = true;
        $this->chargeEmployersRate = $chargeEmployersRate;

        return $this;
    }

    /**
     * Taux frais généraux 1.
     */
    public function getGeneralExpensesRate1(): ?float
    {
        return $this->generalExpensesRate1;
    }

    /**
     * Taux frais généraux 1.
     */
    public function setGeneralExpensesRate1(?float $generalExpensesRate1): self
    {
        $this->initialized['generalExpensesRate1'] = true;
        $this->generalExpensesRate1 = $generalExpensesRate1;

        return $this;
    }

    /**
     * Taux frais généraux 2.
     */
    public function getGeneralExpensesRate2(): ?float
    {
        return $this->generalExpensesRate2;
    }

    /**
     * Taux frais généraux 2.
     */
    public function setGeneralExpensesRate2(?float $generalExpensesRate2): self
    {
        $this->initialized['generalExpensesRate2'] = true;
        $this->generalExpensesRate2 = $generalExpensesRate2;

        return $this;
    }

    /**
     * Coefficient métier.
     */
    public function getTradeCoefficient(): ?float
    {
        return $this->tradeCoefficient;
    }

    /**
     * Coefficient métier.
     */
    public function setTradeCoefficient(?float $tradeCoefficient): self
    {
        $this->initialized['tradeCoefficient'] = true;
        $this->tradeCoefficient = $tradeCoefficient;

        return $this;
    }

    /**
     * Calcul automatique PR.
     */
    public function getIsCostPriceCalculatedAutomatically(): ?bool
    {
        return $this->isCostPriceCalculatedAutomatically;
    }

    /**
     * Calcul automatique PR.
     */
    public function setIsCostPriceCalculatedAutomatically(?bool $isCostPriceCalculatedAutomatically): self
    {
        $this->initialized['isCostPriceCalculatedAutomatically'] = true;
        $this->isCostPriceCalculatedAutomatically = $isCostPriceCalculatedAutomatically;

        return $this;
    }

    /**
     * Calcul automatique PV.
     */
    public function getIsSellingPriceCalculatedAutomatically(): ?bool
    {
        return $this->isSellingPriceCalculatedAutomatically;
    }

    /**
     * Calcul automatique PV.
     */
    public function setIsSellingPriceCalculatedAutomatically(?bool $isSellingPriceCalculatedAutomatically): self
    {
        $this->initialized['isSellingPriceCalculatedAutomatically'] = true;
        $this->isSellingPriceCalculatedAutomatically = $isSellingPriceCalculatedAutomatically;

        return $this;
    }

    /**
     * Famille tarifaire.
     */
    public function getPricesListFamily(): ?string
    {
        return $this->pricesListFamily;
    }

    /**
     * Famille tarifaire.
     */
    public function setPricesListFamily(?string $pricesListFamily): self
    {
        $this->initialized['pricesListFamily'] = true;
        $this->pricesListFamily = $pricesListFamily;

        return $this;
    }

    /**
     * Taux revient 1.
     */
    public function getCostPrice1(): ?float
    {
        return $this->costPrice1;
    }

    /**
     * Taux revient 1.
     */
    public function setCostPrice1(?float $costPrice1): self
    {
        $this->initialized['costPrice1'] = true;
        $this->costPrice1 = $costPrice1;

        return $this;
    }

    /**
     * PV HT 1.
     */
    public function getSellingPriceTaxExclude1(): ?float
    {
        return $this->sellingPriceTaxExclude1;
    }

    /**
     * PV HT 1.
     */
    public function setSellingPriceTaxExclude1(?float $sellingPriceTaxExclude1): self
    {
        $this->initialized['sellingPriceTaxExclude1'] = true;
        $this->sellingPriceTaxExclude1 = $sellingPriceTaxExclude1;

        return $this;
    }

    /**
     * PV TTC 1 chargé.
     */
    public function getSellingPriceTaxInclude1(): ?float
    {
        return $this->sellingPriceTaxInclude1;
    }

    /**
     * PV TTC 1 chargé.
     */
    public function setSellingPriceTaxInclude1(?float $sellingPriceTaxInclude1): self
    {
        $this->initialized['sellingPriceTaxInclude1'] = true;
        $this->sellingPriceTaxInclude1 = $sellingPriceTaxInclude1;

        return $this;
    }

    /**
     * PV HT 1 calculé.
     */
    public function getSellingPriceExcludedTaxCalculated1(): ?float
    {
        return $this->sellingPriceExcludedTaxCalculated1;
    }

    /**
     * PV HT 1 calculé.
     */
    public function setSellingPriceExcludedTaxCalculated1(?float $sellingPriceExcludedTaxCalculated1): self
    {
        $this->initialized['sellingPriceExcludedTaxCalculated1'] = true;
        $this->sellingPriceExcludedTaxCalculated1 = $sellingPriceExcludedTaxCalculated1;

        return $this;
    }

    /**
     * Date début prix 1.
     */
    public function getDateStartPrice1(): ?\DateTime
    {
        return $this->dateStartPrice1;
    }

    /**
     * Date début prix 1.
     */
    public function setDateStartPrice1(?\DateTime $dateStartPrice1): self
    {
        $this->initialized['dateStartPrice1'] = true;
        $this->dateStartPrice1 = $dateStartPrice1;

        return $this;
    }

    /**
     * Taux revient 2.
     */
    public function getCostPrice2(): ?float
    {
        return $this->costPrice2;
    }

    /**
     * Taux revient 2.
     */
    public function setCostPrice2(?float $costPrice2): self
    {
        $this->initialized['costPrice2'] = true;
        $this->costPrice2 = $costPrice2;

        return $this;
    }

    /**
     * PV HT 2.
     */
    public function getSellingPriceTaxExclude2(): ?float
    {
        return $this->sellingPriceTaxExclude2;
    }

    /**
     * PV HT 2.
     */
    public function setSellingPriceTaxExclude2(?float $sellingPriceTaxExclude2): self
    {
        $this->initialized['sellingPriceTaxExclude2'] = true;
        $this->sellingPriceTaxExclude2 = $sellingPriceTaxExclude2;

        return $this;
    }

    /**
     * PV TTC 2.
     */
    public function getSellingPriceTaxInclude2(): ?float
    {
        return $this->sellingPriceTaxInclude2;
    }

    /**
     * PV TTC 2.
     */
    public function setSellingPriceTaxInclude2(?float $sellingPriceTaxInclude2): self
    {
        $this->initialized['sellingPriceTaxInclude2'] = true;
        $this->sellingPriceTaxInclude2 = $sellingPriceTaxInclude2;

        return $this;
    }

    /**
     * PV HT 2 calculé.
     */
    public function getSellingPriceExcludedTaxCalculated2(): ?float
    {
        return $this->sellingPriceExcludedTaxCalculated2;
    }

    /**
     * PV HT 2 calculé.
     */
    public function setSellingPriceExcludedTaxCalculated2(?float $sellingPriceExcludedTaxCalculated2): self
    {
        $this->initialized['sellingPriceExcludedTaxCalculated2'] = true;
        $this->sellingPriceExcludedTaxCalculated2 = $sellingPriceExcludedTaxCalculated2;

        return $this;
    }

    /**
     * Date début prix 2.
     */
    public function getDateStartPrice2(): ?\DateTime
    {
        return $this->dateStartPrice2;
    }

    /**
     * Date début prix 2.
     */
    public function setDateStartPrice2(?\DateTime $dateStartPrice2): self
    {
        $this->initialized['dateStartPrice2'] = true;
        $this->dateStartPrice2 = $dateStartPrice2;

        return $this;
    }

    /**
     * Coût unitaire 2.
     */
    public function getUnitCost2(): ?float
    {
        return $this->unitCost2;
    }

    /**
     * Coût unitaire 2.
     */
    public function setUnitCost2(?float $unitCost2): self
    {
        $this->initialized['unitCost2'] = true;
        $this->unitCost2 = $unitCost2;

        return $this;
    }

    /**
     * Taux revient 3.
     */
    public function getCostPrice3(): ?float
    {
        return $this->costPrice3;
    }

    /**
     * Taux revient 3.
     */
    public function setCostPrice3(?float $costPrice3): self
    {
        $this->initialized['costPrice3'] = true;
        $this->costPrice3 = $costPrice3;

        return $this;
    }

    /**
     * PV HT 3.
     */
    public function getSellingPriceTaxExclude3(): ?float
    {
        return $this->sellingPriceTaxExclude3;
    }

    /**
     * PV HT 3.
     */
    public function setSellingPriceTaxExclude3(?float $sellingPriceTaxExclude3): self
    {
        $this->initialized['sellingPriceTaxExclude3'] = true;
        $this->sellingPriceTaxExclude3 = $sellingPriceTaxExclude3;

        return $this;
    }

    /**
     * PV TTC 3.
     */
    public function getSellingPriceTaxInclude3(): ?float
    {
        return $this->sellingPriceTaxInclude3;
    }

    /**
     * PV TTC 3.
     */
    public function setSellingPriceTaxInclude3(?float $sellingPriceTaxInclude3): self
    {
        $this->initialized['sellingPriceTaxInclude3'] = true;
        $this->sellingPriceTaxInclude3 = $sellingPriceTaxInclude3;

        return $this;
    }

    /**
     * PV HT 3 calculé.
     */
    public function getSellingPriceExcludedTaxCalculated3(): ?float
    {
        return $this->sellingPriceExcludedTaxCalculated3;
    }

    /**
     * PV HT 3 calculé.
     */
    public function setSellingPriceExcludedTaxCalculated3(?float $sellingPriceExcludedTaxCalculated3): self
    {
        $this->initialized['sellingPriceExcludedTaxCalculated3'] = true;
        $this->sellingPriceExcludedTaxCalculated3 = $sellingPriceExcludedTaxCalculated3;

        return $this;
    }

    /**
     * Date début prix 3.
     */
    public function getDateStartPrice3(): ?\DateTime
    {
        return $this->dateStartPrice3;
    }

    /**
     * Date début prix 3.
     */
    public function setDateStartPrice3(?\DateTime $dateStartPrice3): self
    {
        $this->initialized['dateStartPrice3'] = true;
        $this->dateStartPrice3 = $dateStartPrice3;

        return $this;
    }

    /**
     * Coût unitaire 3.
     */
    public function getUnitCost3(): ?float
    {
        return $this->unitCost3;
    }

    /**
     * Coût unitaire 3.
     */
    public function setUnitCost3(?float $unitCost3): self
    {
        $this->initialized['unitCost3'] = true;
        $this->unitCost3 = $unitCost3;

        return $this;
    }

    /**
     * Taux revient 4.
     */
    public function getCostPrice4(): ?float
    {
        return $this->costPrice4;
    }

    /**
     * Taux revient 4.
     */
    public function setCostPrice4(?float $costPrice4): self
    {
        $this->initialized['costPrice4'] = true;
        $this->costPrice4 = $costPrice4;

        return $this;
    }

    /**
     * PV HT 4.
     */
    public function getSellingPriceTaxExclude4(): ?float
    {
        return $this->sellingPriceTaxExclude4;
    }

    /**
     * PV HT 4.
     */
    public function setSellingPriceTaxExclude4(?float $sellingPriceTaxExclude4): self
    {
        $this->initialized['sellingPriceTaxExclude4'] = true;
        $this->sellingPriceTaxExclude4 = $sellingPriceTaxExclude4;

        return $this;
    }

    /**
     * PV TTC 4.
     */
    public function getSellingPriceTaxInclude4(): ?float
    {
        return $this->sellingPriceTaxInclude4;
    }

    /**
     * PV TTC 4.
     */
    public function setSellingPriceTaxInclude4(?float $sellingPriceTaxInclude4): self
    {
        $this->initialized['sellingPriceTaxInclude4'] = true;
        $this->sellingPriceTaxInclude4 = $sellingPriceTaxInclude4;

        return $this;
    }

    /**
     * PV HT 4 calculé.
     */
    public function getSellingPriceExcludedTaxCalculated4(): ?float
    {
        return $this->sellingPriceExcludedTaxCalculated4;
    }

    /**
     * PV HT 4 calculé.
     */
    public function setSellingPriceExcludedTaxCalculated4(?float $sellingPriceExcludedTaxCalculated4): self
    {
        $this->initialized['sellingPriceExcludedTaxCalculated4'] = true;
        $this->sellingPriceExcludedTaxCalculated4 = $sellingPriceExcludedTaxCalculated4;

        return $this;
    }

    /**
     * Date début prix 4.
     */
    public function getDateStartPrice4(): ?\DateTime
    {
        return $this->dateStartPrice4;
    }

    /**
     * Date début prix 4.
     */
    public function setDateStartPrice4(?\DateTime $dateStartPrice4): self
    {
        $this->initialized['dateStartPrice4'] = true;
        $this->dateStartPrice4 = $dateStartPrice4;

        return $this;
    }

    /**
     * Coût unitaire 4.
     */
    public function getUnitCost4(): ?float
    {
        return $this->unitCost4;
    }

    /**
     * Coût unitaire 4.
     */
    public function setUnitCost4(?float $unitCost4): self
    {
        $this->initialized['unitCost4'] = true;
        $this->unitCost4 = $unitCost4;

        return $this;
    }

    /**
     * Coef. PR / PV.
     */
    public function getCoefficientRateSales(): ?float
    {
        return $this->coefficientRateSales;
    }

    /**
     * Coef. PR / PV.
     */
    public function setCoefficientRateSales(?float $coefficientRateSales): self
    {
        $this->initialized['coefficientRateSales'] = true;
        $this->coefficientRateSales = $coefficientRateSales;

        return $this;
    }

    /**
     * Utilisateur associé.
     */
    public function getAssociatedUser(): ?string
    {
        return $this->associatedUser;
    }

    /**
     * Utilisateur associé.
     */
    public function setAssociatedUser(?string $associatedUser): self
    {
        $this->initialized['associatedUser'] = true;
        $this->associatedUser = $associatedUser;

        return $this;
    }

    /**
     * Fermé.
     */
    public function getIsClosed(): ?bool
    {
        return $this->isClosed;
    }

    /**
     * Fermé.
     */
    public function setIsClosed(?bool $isClosed): self
    {
        $this->initialized['isClosed'] = true;
        $this->isClosed = $isClosed;

        return $this;
    }

    /**
     * Fonction.
     */
    public function getCurrentFunction(): ?string
    {
        return $this->currentFunction;
    }

    /**
     * Fonction.
     */
    public function setCurrentFunction(?string $currentFunction): self
    {
        $this->initialized['currentFunction'] = true;
        $this->currentFunction = $currentFunction;

        return $this;
    }

    /**
     * Date début fonction 1.
     */
    public function getStartDateCurrentFunction(): ?\DateTime
    {
        return $this->startDateCurrentFunction;
    }

    /**
     * Date début fonction 1.
     */
    public function setStartDateCurrentFunction(?\DateTime $startDateCurrentFunction): self
    {
        $this->initialized['startDateCurrentFunction'] = true;
        $this->startDateCurrentFunction = $startDateCurrentFunction;

        return $this;
    }

    /**
     * Fonction 2.
     */
    public function getPreviousFunction1(): ?string
    {
        return $this->previousFunction1;
    }

    /**
     * Fonction 2.
     */
    public function setPreviousFunction1(?string $previousFunction1): self
    {
        $this->initialized['previousFunction1'] = true;
        $this->previousFunction1 = $previousFunction1;

        return $this;
    }

    /**
     * Date début fonction 2.
     */
    public function getStartDatePreviousFunction1(): ?\DateTime
    {
        return $this->startDatePreviousFunction1;
    }

    /**
     * Date début fonction 2.
     */
    public function setStartDatePreviousFunction1(?\DateTime $startDatePreviousFunction1): self
    {
        $this->initialized['startDatePreviousFunction1'] = true;
        $this->startDatePreviousFunction1 = $startDatePreviousFunction1;

        return $this;
    }

    /**
     * Fonction 3.
     */
    public function getPreviousFunction2(): ?string
    {
        return $this->previousFunction2;
    }

    /**
     * Fonction 3.
     */
    public function setPreviousFunction2(?string $previousFunction2): self
    {
        $this->initialized['previousFunction2'] = true;
        $this->previousFunction2 = $previousFunction2;

        return $this;
    }

    /**
     * Date début fonction 3.
     */
    public function getStartDatePreviousFunction2(): ?\DateTime
    {
        return $this->startDatePreviousFunction2;
    }

    /**
     * Date début fonction 3.
     */
    public function setStartDatePreviousFunction2(?\DateTime $startDatePreviousFunction2): self
    {
        $this->initialized['startDatePreviousFunction2'] = true;
        $this->startDatePreviousFunction2 = $startDatePreviousFunction2;

        return $this;
    }

    /**
     * Fonction 4.
     */
    public function getPreviousFunction3(): ?string
    {
        return $this->previousFunction3;
    }

    /**
     * Fonction 4.
     */
    public function setPreviousFunction3(?string $previousFunction3): self
    {
        $this->initialized['previousFunction3'] = true;
        $this->previousFunction3 = $previousFunction3;

        return $this;
    }

    /**
     * Date début fonction 4.
     */
    public function getStartDatePreviousFunction3(): ?\DateTime
    {
        return $this->startDatePreviousFunction3;
    }

    /**
     * Date début fonction 4.
     */
    public function setStartDatePreviousFunction3(?\DateTime $startDatePreviousFunction3): self
    {
        $this->initialized['startDatePreviousFunction3'] = true;
        $this->startDatePreviousFunction3 = $startDatePreviousFunction3;

        return $this;
    }

    /**
     * Créateur.
     */
    public function getCreatedBy(): ?string
    {
        return $this->createdBy;
    }

    /**
     * Créateur.
     */
    public function setCreatedBy(?string $createdBy): self
    {
        $this->initialized['createdBy'] = true;
        $this->createdBy = $createdBy;

        return $this;
    }

    /**
     * Créé par.
     */
    public function getCreationMode(): ?string
    {
        return $this->creationMode;
    }

    /**
     * Créé par.
     */
    public function setCreationMode(?string $creationMode): self
    {
        $this->initialized['creationMode'] = true;
        $this->creationMode = $creationMode;

        return $this;
    }

    /**
     * Modifié par.
     */
    public function getModifiedBy(): ?string
    {
        return $this->modifiedBy;
    }

    /**
     * Modifié par.
     */
    public function setModifiedBy(?string $modifiedBy): self
    {
        $this->initialized['modifiedBy'] = true;
        $this->modifiedBy = $modifiedBy;

        return $this;
    }

    /**
     * Date de création.
     */
    public function getCreationDate(): ?\DateTime
    {
        return $this->creationDate;
    }

    /**
     * Date de création.
     */
    public function setCreationDate(?\DateTime $creationDate): self
    {
        $this->initialized['creationDate'] = true;
        $this->creationDate = $creationDate;

        return $this;
    }

    /**
     * Date de modification.
     */
    public function getModificationDate(): ?\DateTime
    {
        return $this->modificationDate;
    }

    /**
     * Date de modification.
     */
    public function setModificationDate(?\DateTime $modificationDate): self
    {
        $this->initialized['modificationDate'] = true;
        $this->modificationDate = $modificationDate;

        return $this;
    }

    /**
     * Valeur libre 1.
     */
    public function getUserFieldNumeric1(): ?float
    {
        return $this->userFieldNumeric1;
    }

    /**
     * Valeur libre 1.
     */
    public function setUserFieldNumeric1(?float $userFieldNumeric1): self
    {
        $this->initialized['userFieldNumeric1'] = true;
        $this->userFieldNumeric1 = $userFieldNumeric1;

        return $this;
    }

    /**
     * Valeur libre 2.
     */
    public function getUserFieldNumeric2(): ?float
    {
        return $this->userFieldNumeric2;
    }

    /**
     * Valeur libre 2.
     */
    public function setUserFieldNumeric2(?float $userFieldNumeric2): self
    {
        $this->initialized['userFieldNumeric2'] = true;
        $this->userFieldNumeric2 = $userFieldNumeric2;

        return $this;
    }

    /**
     * Valeur libre 3.
     */
    public function getUserFieldNumeric3(): ?float
    {
        return $this->userFieldNumeric3;
    }

    /**
     * Valeur libre 3.
     */
    public function setUserFieldNumeric3(?float $userFieldNumeric3): self
    {
        $this->initialized['userFieldNumeric3'] = true;
        $this->userFieldNumeric3 = $userFieldNumeric3;

        return $this;
    }

    /**
     * Date libre 1.
     */
    public function getUserFieldDate1(): ?\DateTime
    {
        return $this->userFieldDate1;
    }

    /**
     * Date libre 1.
     */
    public function setUserFieldDate1(?\DateTime $userFieldDate1): self
    {
        $this->initialized['userFieldDate1'] = true;
        $this->userFieldDate1 = $userFieldDate1;

        return $this;
    }

    /**
     * Date libre 2.
     */
    public function getUserFieldDate2(): ?\DateTime
    {
        return $this->userFieldDate2;
    }

    /**
     * Date libre 2.
     */
    public function setUserFieldDate2(?\DateTime $userFieldDate2): self
    {
        $this->initialized['userFieldDate2'] = true;
        $this->userFieldDate2 = $userFieldDate2;

        return $this;
    }

    /**
     * Date libre 3.
     */
    public function getUserFieldDate3(): ?\DateTime
    {
        return $this->userFieldDate3;
    }

    /**
     * Date libre 3.
     */
    public function setUserFieldDate3(?\DateTime $userFieldDate3): self
    {
        $this->initialized['userFieldDate3'] = true;
        $this->userFieldDate3 = $userFieldDate3;

        return $this;
    }

    /**
     * Table libre 1.
     */
    public function getUserFieldResource1(): ?string
    {
        return $this->userFieldResource1;
    }

    /**
     * Table libre 1.
     */
    public function setUserFieldResource1(?string $userFieldResource1): self
    {
        $this->initialized['userFieldResource1'] = true;
        $this->userFieldResource1 = $userFieldResource1;

        return $this;
    }

    /**
     * Table libre 2.
     */
    public function getUserFieldResource2(): ?string
    {
        return $this->userFieldResource2;
    }

    /**
     * Table libre 2.
     */
    public function setUserFieldResource2(?string $userFieldResource2): self
    {
        $this->initialized['userFieldResource2'] = true;
        $this->userFieldResource2 = $userFieldResource2;

        return $this;
    }

    /**
     * Table libre 3.
     */
    public function getUserFieldResource3(): ?string
    {
        return $this->userFieldResource3;
    }

    /**
     * Table libre 3.
     */
    public function setUserFieldResource3(?string $userFieldResource3): self
    {
        $this->initialized['userFieldResource3'] = true;
        $this->userFieldResource3 = $userFieldResource3;

        return $this;
    }

    /**
     * Table libre 4.
     */
    public function getUserFieldResource4(): ?string
    {
        return $this->userFieldResource4;
    }

    /**
     * Table libre 4.
     */
    public function setUserFieldResource4(?string $userFieldResource4): self
    {
        $this->initialized['userFieldResource4'] = true;
        $this->userFieldResource4 = $userFieldResource4;

        return $this;
    }

    /**
     * Table libre 5.
     */
    public function getUserFieldResource5(): ?string
    {
        return $this->userFieldResource5;
    }

    /**
     * Table libre 5.
     */
    public function setUserFieldResource5(?string $userFieldResource5): self
    {
        $this->initialized['userFieldResource5'] = true;
        $this->userFieldResource5 = $userFieldResource5;

        return $this;
    }

    /**
     * Table libre 6.
     */
    public function getUserFieldResource6(): ?string
    {
        return $this->userFieldResource6;
    }

    /**
     * Table libre 6.
     */
    public function setUserFieldResource6(?string $userFieldResource6): self
    {
        $this->initialized['userFieldResource6'] = true;
        $this->userFieldResource6 = $userFieldResource6;

        return $this;
    }

    /**
     * Table libre 7.
     */
    public function getUserFieldResource7(): ?string
    {
        return $this->userFieldResource7;
    }

    /**
     * Table libre 7.
     */
    public function setUserFieldResource7(?string $userFieldResource7): self
    {
        $this->initialized['userFieldResource7'] = true;
        $this->userFieldResource7 = $userFieldResource7;

        return $this;
    }

    /**
     * Table libre 8.
     */
    public function getUserFieldResource8(): ?string
    {
        return $this->userFieldResource8;
    }

    /**
     * Table libre 8.
     */
    public function setUserFieldResource8(?string $userFieldResource8): self
    {
        $this->initialized['userFieldResource8'] = true;
        $this->userFieldResource8 = $userFieldResource8;

        return $this;
    }

    /**
     * Table libre 9.
     */
    public function getUserFieldResource9(): ?string
    {
        return $this->userFieldResource9;
    }

    /**
     * Table libre 9.
     */
    public function setUserFieldResource9(?string $userFieldResource9): self
    {
        $this->initialized['userFieldResource9'] = true;
        $this->userFieldResource9 = $userFieldResource9;

        return $this;
    }

    /**
     * Table libre 10.
     */
    public function getUserFieldResourceA(): ?string
    {
        return $this->userFieldResourceA;
    }

    /**
     * Table libre 10.
     */
    public function setUserFieldResourceA(?string $userFieldResourceA): self
    {
        $this->initialized['userFieldResourceA'] = true;
        $this->userFieldResourceA = $userFieldResourceA;

        return $this;
    }

    /**
     * Texte libre 1.
     */
    public function getUserFieldText1(): ?string
    {
        return $this->userFieldText1;
    }

    /**
     * Texte libre 1.
     */
    public function setUserFieldText1(?string $userFieldText1): self
    {
        $this->initialized['userFieldText1'] = true;
        $this->userFieldText1 = $userFieldText1;

        return $this;
    }

    /**
     * Texte libre 2.
     */
    public function getUserFieldText2(): ?string
    {
        return $this->userFieldText2;
    }

    /**
     * Texte libre 2.
     */
    public function setUserFieldText2(?string $userFieldText2): self
    {
        $this->initialized['userFieldText2'] = true;
        $this->userFieldText2 = $userFieldText2;

        return $this;
    }

    /**
     * Texte libre 3.
     */
    public function getUserFieldText3(): ?string
    {
        return $this->userFieldText3;
    }

    /**
     * Texte libre 3.
     */
    public function setUserFieldText3(?string $userFieldText3): self
    {
        $this->initialized['userFieldText3'] = true;
        $this->userFieldText3 = $userFieldText3;

        return $this;
    }

    /**
     * Décision libre 1.
     */
    public function getUserFieldBoolean1(): ?bool
    {
        return $this->userFieldBoolean1;
    }

    /**
     * Décision libre 1.
     */
    public function setUserFieldBoolean1(?bool $userFieldBoolean1): self
    {
        $this->initialized['userFieldBoolean1'] = true;
        $this->userFieldBoolean1 = $userFieldBoolean1;

        return $this;
    }

    /**
     * Décision libre 2.
     */
    public function getUserFieldBoolean2(): ?bool
    {
        return $this->userFieldBoolean2;
    }

    /**
     * Décision libre 2.
     */
    public function setUserFieldBoolean2(?bool $userFieldBoolean2): self
    {
        $this->initialized['userFieldBoolean2'] = true;
        $this->userFieldBoolean2 = $userFieldBoolean2;

        return $this;
    }

    /**
     * Décision libre 3.
     */
    public function getUserFieldBoolean3(): ?bool
    {
        return $this->userFieldBoolean3;
    }

    /**
     * Décision libre 3.
     */
    public function setUserFieldBoolean3(?bool $userFieldBoolean3): self
    {
        $this->initialized['userFieldBoolean3'] = true;
        $this->userFieldBoolean3 = $userFieldBoolean3;

        return $this;
    }

    /**
     * Calendrier.
     */
    public function getCalendar(): ?string
    {
        return $this->calendar;
    }

    /**
     * Calendrier.
     */
    public function setCalendar(?string $calendar): self
    {
        $this->initialized['calendar'] = true;
        $this->calendar = $calendar;

        return $this;
    }

    /**
     * Prestation par défaut.
     */
    public function getDefaultItem(): ?string
    {
        return $this->defaultItem;
    }

    /**
     * Prestation par défaut.
     */
    public function setDefaultItem(?string $defaultItem): self
    {
        $this->initialized['defaultItem'] = true;
        $this->defaultItem = $defaultItem;

        return $this;
    }

    /**
     * Transfert activité / paie.
     */
    public function getIsTransferActivityPay(): ?bool
    {
        return $this->isTransferActivityPay;
    }

    /**
     * Transfert activité / paie.
     */
    public function setIsTransferActivityPay(?bool $isTransferActivityPay): self
    {
        $this->initialized['isTransferActivityPay'] = true;
        $this->isTransferActivityPay = $isTransferActivityPay;

        return $this;
    }

    /**
     * Calendrier spécifique.
     */
    public function getHasPersonalCalendar(): ?bool
    {
        return $this->hasPersonalCalendar;
    }

    /**
     * Calendrier spécifique.
     */
    public function setHasPersonalCalendar(?bool $hasPersonalCalendar): self
    {
        $this->initialized['hasPersonalCalendar'] = true;
        $this->hasPersonalCalendar = $hasPersonalCalendar;

        return $this;
    }

    /**
     * E-mail.
     */
    public function getEmail(): ?string
    {
        return $this->email;
    }

    /**
     * E-mail.
     */
    public function setEmail(?string $email): self
    {
        $this->initialized['email'] = true;
        $this->email = $email;

        return $this;
    }

    /**
     * Département.
     */
    public function getDepartment(): ?string
    {
        return $this->department;
    }

    /**
     * Département.
     */
    public function setDepartment(?string $department): self
    {
        $this->initialized['department'] = true;
        $this->department = $department;

        return $this;
    }

    /**
     * Etablissement.
     */
    public function getBusinessCenter(): ?string
    {
        return $this->businessCenter;
    }

    /**
     * Etablissement.
     */
    public function setBusinessCenter(?string $businessCenter): self
    {
        $this->initialized['businessCenter'] = true;
        $this->businessCenter = $businessCenter;

        return $this;
    }

    /**
     * Bloc-notes.
     */
    public function getNotepad(): ?string
    {
        return $this->notepad;
    }

    /**
     * Bloc-notes.
     */
    public function setNotepad(?string $notepad): self
    {
        $this->initialized['notepad'] = true;
        $this->notepad = $notepad;

        return $this;
    }

    /**
     * Code producteur MES.
     */
    public function getProducerCode(): ?string
    {
        return $this->producerCode;
    }

    /**
     * Code producteur MES.
     */
    public function setProducerCode(?string $producerCode): self
    {
        $this->initialized['producerCode'] = true;
        $this->producerCode = $producerCode;

        return $this;
    }

    /**
     * Presence maxi / jour (HHCC).
     */
    public function getPresenceMaximumDay(): ?float
    {
        return $this->presenceMaximumDay;
    }

    /**
     * Presence maxi / jour (HHCC).
     */
    public function setPresenceMaximumDay(?float $presenceMaximumDay): self
    {
        $this->initialized['presenceMaximumDay'] = true;
        $this->presenceMaximumDay = $presenceMaximumDay;

        return $this;
    }

    /**
     * Ressource générique.
     */
    public function getIsGenericResource(): ?bool
    {
        return $this->isGenericResource;
    }

    /**
     * Ressource générique.
     */
    public function setIsGenericResource(?bool $isGenericResource): self
    {
        $this->initialized['isGenericResource'] = true;
        $this->isGenericResource = $isGenericResource;

        return $this;
    }

    /**
     * Ressource mère.
     */
    public function getParentResource(): ?string
    {
        return $this->parentResource;
    }

    /**
     * Ressource mère.
     */
    public function setParentResource(?string $parentResource): self
    {
        $this->initialized['parentResource'] = true;
        $this->parentResource = $parentResource;

        return $this;
    }

    /**
     * Taux de simulation.
     */
    public function getSimulationRate(): ?float
    {
        return $this->simulationRate;
    }

    /**
     * Taux de simulation.
     */
    public function setSimulationRate(?float $simulationRate): self
    {
        $this->initialized['simulationRate'] = true;
        $this->simulationRate = $simulationRate;

        return $this;
    }

    /**
     * Section analyse PDR.
     */
    public function getAnalysisSection(): ?string
    {
        return $this->analysisSection;
    }

    /**
     * Section analyse PDR.
     */
    public function setAnalysisSection(?string $analysisSection): self
    {
        $this->initialized['analysisSection'] = true;
        $this->analysisSection = $analysisSection;

        return $this;
    }

    /**
     * Rubrique analyse.
     */
    public function getAnalysisHeader(): ?string
    {
        return $this->analysisHeader;
    }

    /**
     * Rubrique analyse.
     */
    public function setAnalysisHeader(?string $analysisHeader): self
    {
        $this->initialized['analysisHeader'] = true;
        $this->analysisHeader = $analysisHeader;

        return $this;
    }

    /**
     * Ressource humaine.
     */
    public function getIsHuman(): ?bool
    {
        return $this->isHuman;
    }

    /**
     * Ressource humaine.
     */
    public function setIsHuman(?bool $isHuman): self
    {
        $this->initialized['isHuman'] = true;
        $this->isHuman = $isHuman;

        return $this;
    }

    /**
     * Dépôt.
     */
    public function getWarehouse(): ?string
    {
        return $this->warehouse;
    }

    /**
     * Dépôt.
     */
    public function setWarehouse(?string $warehouse): self
    {
        $this->initialized['warehouse'] = true;
        $this->warehouse = $warehouse;

        return $this;
    }

    /**
     * Date sortie définitive.
     */
    public function getRetirementDate(): ?\DateTime
    {
        return $this->retirementDate;
    }

    /**
     * Date sortie définitive.
     */
    public function setRetirementDate(?\DateTime $retirementDate): self
    {
        $this->initialized['retirementDate'] = true;
        $this->retirementDate = $retirementDate;

        return $this;
    }

    /**
     * Ressource mensualisée.
     */
    public function getIsMonthlyPaid(): ?bool
    {
        return $this->isMonthlyPaid;
    }

    /**
     * Ressource mensualisée.
     */
    public function setIsMonthlyPaid(?bool $isMonthlyPaid): self
    {
        $this->initialized['isMonthlyPaid'] = true;
        $this->isMonthlyPaid = $isMonthlyPaid;

        return $this;
    }

    /**
     * Equipe.
     */
    public function getTeam(): ?string
    {
        return $this->team;
    }

    /**
     * Equipe.
     */
    public function setTeam(?string $team): self
    {
        $this->initialized['team'] = true;
        $this->team = $team;

        return $this;
    }

    /**
     * Ressource SCM.
     */
    public function getIsScmResource(): ?bool
    {
        return $this->isScmResource;
    }

    /**
     * Ressource SCM.
     */
    public function setIsScmResource(?bool $isScmResource): self
    {
        $this->initialized['isScmResource'] = true;
        $this->isScmResource = $isScmResource;

        return $this;
    }

    /**
     * Groupe.
     */
    public function getGroup(): ?string
    {
        return $this->group;
    }

    /**
     * Groupe.
     */
    public function setGroup(?string $group): self
    {
        $this->initialized['group'] = true;
        $this->group = $group;

        return $this;
    }

    /**
     * Chaine.
     */
    public function getActionSequence(): ?string
    {
        return $this->actionSequence;
    }

    /**
     * Chaine.
     */
    public function setActionSequence(?string $actionSequence): self
    {
        $this->initialized['actionSequence'] = true;
        $this->actionSequence = $actionSequence;

        return $this;
    }

    /**
     * Phase.
     */
    public function getPhase(): ?string
    {
        return $this->phase;
    }

    /**
     * Phase.
     */
    public function setPhase(?string $phase): self
    {
        $this->initialized['phase'] = true;
        $this->phase = $phase;

        return $this;
    }

    /**
     * Gestion groupe.
     */
    public function getGroupManagement(): ?string
    {
        return $this->groupManagement;
    }

    /**
     * Gestion groupe.
     */
    public function setGroupManagement(?string $groupManagement): self
    {
        $this->initialized['groupManagement'] = true;
        $this->groupManagement = $groupManagement;

        return $this;
    }

    /**
     * Effectif.
     */
    public function getNumberEmployees(): ?int
    {
        return $this->numberEmployees;
    }

    /**
     * Effectif.
     */
    public function setNumberEmployees(?int $numberEmployees): self
    {
        $this->initialized['numberEmployees'] = true;
        $this->numberEmployees = $numberEmployees;

        return $this;
    }

    /**
     * Ordre d'affichage.
     */
    public function getDisplayingOrder(): ?int
    {
        return $this->displayingOrder;
    }

    /**
     * Ordre d'affichage.
     */
    public function setDisplayingOrder(?int $displayingOrder): self
    {
        $this->initialized['displayingOrder'] = true;
        $this->displayingOrder = $displayingOrder;

        return $this;
    }

    /**
     * Ordre pour Calcul.
     */
    public function getCalculationOrder(): ?int
    {
        return $this->calculationOrder;
    }

    /**
     * Ordre pour Calcul.
     */
    public function setCalculationOrder(?int $calculationOrder): self
    {
        $this->initialized['calculationOrder'] = true;
        $this->calculationOrder = $calculationOrder;

        return $this;
    }

    /**
     * Ressource fermée pour le PDC.
     */
    public function getIsClosedForWorkload(): ?bool
    {
        return $this->isClosedForWorkload;
    }

    /**
     * Ressource fermée pour le PDC.
     */
    public function setIsClosedForWorkload(?bool $isClosedForWorkload): self
    {
        $this->initialized['isClosedForWorkload'] = true;
        $this->isClosedForWorkload = $isClosedForWorkload;

        return $this;
    }

    /**
     * Capacité moyenne jour PDC.
     */
    public function getDayAverageCapacity(): ?float
    {
        return $this->dayAverageCapacity;
    }

    /**
     * Capacité moyenne jour PDC.
     */
    public function setDayAverageCapacity(?float $dayAverageCapacity): self
    {
        $this->initialized['dayAverageCapacity'] = true;
        $this->dayAverageCapacity = $dayAverageCapacity;

        return $this;
    }

    /**
     * % maximum par Of PDC.
     */
    public function getMaximumPercent(): ?float
    {
        return $this->maximumPercent;
    }

    /**
     * % maximum par Of PDC.
     */
    public function setMaximumPercent(?float $maximumPercent): self
    {
        $this->initialized['maximumPercent'] = true;
        $this->maximumPercent = $maximumPercent;

        return $this;
    }

    /**
     * Fonction principale 1.
     */
    public function getIsMainFunction1(): ?bool
    {
        return $this->isMainFunction1;
    }

    /**
     * Fonction principale 1.
     */
    public function setIsMainFunction1(?bool $isMainFunction1): self
    {
        $this->initialized['isMainFunction1'] = true;
        $this->isMainFunction1 = $isMainFunction1;

        return $this;
    }

    /**
     * Fonction principale 2.
     */
    public function getIsMainFunction2(): ?bool
    {
        return $this->isMainFunction2;
    }

    /**
     * Fonction principale 2.
     */
    public function setIsMainFunction2(?bool $isMainFunction2): self
    {
        $this->initialized['isMainFunction2'] = true;
        $this->isMainFunction2 = $isMainFunction2;

        return $this;
    }

    /**
     * Fonction principale 3.
     */
    public function getIsMainFunction3(): ?bool
    {
        return $this->isMainFunction3;
    }

    /**
     * Fonction principale 3.
     */
    public function setIsMainFunction3(?bool $isMainFunction3): self
    {
        $this->initialized['isMainFunction3'] = true;
        $this->isMainFunction3 = $isMainFunction3;

        return $this;
    }

    /**
     * Fonction principale 4.
     */
    public function getIsMainFunction4(): ?bool
    {
        return $this->isMainFunction4;
    }

    /**
     * Fonction principale 4.
     */
    public function setIsMainFunction4(?bool $isMainFunction4): self
    {
        $this->initialized['isMainFunction4'] = true;
        $this->isMainFunction4 = $isMainFunction4;

        return $this;
    }

    /**
     * Date fin fonction 3.
     */
    public function getEndDateFunction3(): ?\DateTime
    {
        return $this->endDateFunction3;
    }

    /**
     * Date fin fonction 3.
     */
    public function setEndDateFunction3(?\DateTime $endDateFunction3): self
    {
        $this->initialized['endDateFunction3'] = true;
        $this->endDateFunction3 = $endDateFunction3;

        return $this;
    }

    /**
     * Date fin fonction 4.
     */
    public function getEndDateFunction4(): ?\DateTime
    {
        return $this->endDateFunction4;
    }

    /**
     * Date fin fonction 4.
     */
    public function setEndDateFunction4(?\DateTime $endDateFunction4): self
    {
        $this->initialized['endDateFunction4'] = true;
        $this->endDateFunction4 = $endDateFunction4;

        return $this;
    }

    /**
     * Coefficient correctif fonction 1.
     */
    public function getPercentageSkill(): ?float
    {
        return $this->percentageSkill;
    }

    /**
     * Coefficient correctif fonction 1.
     */
    public function setPercentageSkill(?float $percentageSkill): self
    {
        $this->initialized['percentageSkill'] = true;
        $this->percentageSkill = $percentageSkill;

        return $this;
    }

    /**
     * Coefficient correctif fonction 2.
     */
    public function getPercentageSkill1(): ?float
    {
        return $this->percentageSkill1;
    }

    /**
     * Coefficient correctif fonction 2.
     */
    public function setPercentageSkill1(?float $percentageSkill1): self
    {
        $this->initialized['percentageSkill1'] = true;
        $this->percentageSkill1 = $percentageSkill1;

        return $this;
    }

    /**
     * Coefficient correctif fonction 3.
     */
    public function getPercentageSkill2(): ?float
    {
        return $this->percentageSkill2;
    }

    /**
     * Coefficient correctif fonction 3.
     */
    public function setPercentageSkill2(?float $percentageSkill2): self
    {
        $this->initialized['percentageSkill2'] = true;
        $this->percentageSkill2 = $percentageSkill2;

        return $this;
    }

    /**
     * Coefficient correctif fonction 4.
     */
    public function getPercentageSkill3(): ?float
    {
        return $this->percentageSkill3;
    }

    /**
     * Coefficient correctif fonction 4.
     */
    public function setPercentageSkill3(?float $percentageSkill3): self
    {
        $this->initialized['percentageSkill3'] = true;
        $this->percentageSkill3 = $percentageSkill3;

        return $this;
    }

    /**
     * Secteur géographique.
     */
    public function getGeographicSector(): ?string
    {
        return $this->geographicSector;
    }

    /**
     * Secteur géographique.
     */
    public function setGeographicSector(?string $geographicSector): self
    {
        $this->initialized['geographicSector'] = true;
        $this->geographicSector = $geographicSector;

        return $this;
    }

    /**
     * Capacité standard.
     */
    public function getStandardCapacity(): ?int
    {
        return $this->standardCapacity;
    }

    /**
     * Capacité standard.
     */
    public function setStandardCapacity(?int $standardCapacity): self
    {
        $this->initialized['standardCapacity'] = true;
        $this->standardCapacity = $standardCapacity;

        return $this;
    }

    /**
     * Capacité maximum.
     */
    public function getMaximumCapacity(): ?int
    {
        return $this->maximumCapacity;
    }

    /**
     * Capacité maximum.
     */
    public function setMaximumCapacity(?int $maximumCapacity): self
    {
        $this->initialized['maximumCapacity'] = true;
        $this->maximumCapacity = $maximumCapacity;

        return $this;
    }

    /**
     * Etat instantané.
     */
    public function getAvailabilityState(): ?string
    {
        return $this->availabilityState;
    }

    /**
     * Etat instantané.
     */
    public function setAvailabilityState(?string $availabilityState): self
    {
        $this->initialized['availabilityState'] = true;
        $this->availabilityState = $availabilityState;

        return $this;
    }

    /**
     * Planification en masse.
     */
    public function getIsMassSchedulable(): ?bool
    {
        return $this->isMassSchedulable;
    }

    /**
     * Planification en masse.
     */
    public function setIsMassSchedulable(?bool $isMassSchedulable): self
    {
        $this->initialized['isMassSchedulable'] = true;
        $this->isMassSchedulable = $isMassSchedulable;

        return $this;
    }

    /**
     * Gestion de l'affectation.
     */
    public function getIsAssignable(): ?bool
    {
        return $this->isAssignable;
    }

    /**
     * Gestion de l'affectation.
     */
    public function setIsAssignable(?bool $isAssignable): self
    {
        $this->initialized['isAssignable'] = true;
        $this->isAssignable = $isAssignable;

        return $this;
    }

    /**
     * Site géographique.
     */
    public function getGeographicLocation(): ?string
    {
        return $this->geographicLocation;
    }

    /**
     * Site géographique.
     */
    public function setGeographicLocation(?string $geographicLocation): self
    {
        $this->initialized['geographicLocation'] = true;
        $this->geographicLocation = $geographicLocation;

        return $this;
    }

    /**
     * Surbooking autorisé.
     */
    public function getIsOverbookingAllowed(): ?bool
    {
        return $this->isOverbookingAllowed;
    }

    /**
     * Surbooking autorisé.
     */
    public function setIsOverbookingAllowed(?bool $isOverbookingAllowed): self
    {
        $this->initialized['isOverbookingAllowed'] = true;
        $this->isOverbookingAllowed = $isOverbookingAllowed;

        return $this;
    }

    /**
     * Type de phase.
     */
    public function getPhaseType(): ?string
    {
        return $this->phaseType;
    }

    /**
     * Type de phase.
     */
    public function setPhaseType(?string $phaseType): self
    {
        $this->initialized['phaseType'] = true;
        $this->phaseType = $phaseType;

        return $this;
    }

    /**
     * Atelier.
     */
    public function getWorkShop(): ?string
    {
        return $this->workShop;
    }

    /**
     * Atelier.
     */
    public function setWorkShop(?string $workShop): self
    {
        $this->initialized['workShop'] = true;
        $this->workShop = $workShop;

        return $this;
    }

    /**
     * Type de travail.
     */
    public function getJobType(): ?string
    {
        return $this->jobType;
    }

    /**
     * Type de travail.
     */
    public function setJobType(?string $jobType): self
    {
        $this->initialized['jobType'] = true;
        $this->jobType = $jobType;

        return $this;
    }

    /**
     * Téléphone 3.
     */
    public function getPhoneNumber3(): ?string
    {
        return $this->phoneNumber3;
    }

    /**
     * Téléphone 3.
     */
    public function setPhoneNumber3(?string $phoneNumber3): self
    {
        $this->initialized['phoneNumber3'] = true;
        $this->phoneNumber3 = $phoneNumber3;

        return $this;
    }

    /**
     * E-mail 2.
     */
    public function getEmail2(): ?string
    {
        return $this->email2;
    }

    /**
     * E-mail 2.
     */
    public function setEmail2(?string $email2): self
    {
        $this->initialized['email2'] = true;
        $this->email2 = $email2;

        return $this;
    }

    /**
     * E-mail 3.
     */
    public function getEmail3(): ?string
    {
        return $this->email3;
    }

    /**
     * E-mail 3.
     */
    public function setEmail3(?string $email3): self
    {
        $this->initialized['email3'] = true;
        $this->email3 = $email3;

        return $this;
    }

    /**
     * Agence.
     */
    public function getAgency(): ?string
    {
        return $this->agency;
    }

    /**
     * Agence.
     */
    public function setAgency(?string $agency): self
    {
        $this->initialized['agency'] = true;
        $this->agency = $agency;

        return $this;
    }

    /**
     * Responsable hiérarchique.
     */
    public function getManager(): ?string
    {
        return $this->manager;
    }

    /**
     * Responsable hiérarchique.
     */
    public function setManager(?string $manager): self
    {
        $this->initialized['manager'] = true;
        $this->manager = $manager;

        return $this;
    }

    /**
     * Catégorie.
     */
    public function getCategory(): ?string
    {
        return $this->category;
    }

    /**
     * Catégorie.
     */
    public function setCategory(?string $category): self
    {
        $this->initialized['category'] = true;
        $this->category = $category;

        return $this;
    }
}
