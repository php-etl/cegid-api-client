<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Cegid\Api\Model;

class CegidMtsThirdPartyEntitiesV1ThirdPartyDtoG
{
    /**
     * @var array
     */
    protected $initialized = [];

    public function isInitialized($property): bool
    {
        return array_key_exists($property, $this->initialized);
    }
    /**
     * Code EAN.
     *
     * @var string|null
     */
    protected $eANCode;
    /**
     * Zone commerciale.
     *
     * @var string|null
     */
    protected $businessArea;
    /**
     * Franco de port.
     *
     * @var float|null
     */
    protected $carriageFree;
    /**
     * Code tiers.
     *
     * @var string|null
     */
    protected $code;
    /**
     * Raison sociale.
     *
     * @var string|null
     */
    protected $label;
    /**
     * Adresse 1.
     *
     * @var string|null
     */
    protected $address1;
    /**
     * Adresse 2.
     *
     * @var string|null
     */
    protected $address2;
    /**
     * Adresse 3.
     *
     * @var string|null
     */
    protected $address3;
    /**
     * Code postal.
     *
     * @var string|null
     */
    protected $zipCode;
    /**
     * Ville.
     *
     * @var string|null
     */
    protected $city;
    /**
     * Région.
     *
     * @var string|null
     */
    protected $region;
    /**
     * Pays.
     *
     * @var string|null
     */
    protected $country;
    /**
     * Libellé abrégé.
     *
     * @var string|null
     */
    protected $shortLabel;
    /**
     * Commentaire.
     *
     * @var string|null
     */
    protected $comment;
    /**
     * Nationalité.
     *
     * @var string|null
     */
    protected $nationality;
    /**
     * Langue.
     *
     * @var string|null
     */
    protected $language;
    /**
     * Devise.
     *
     * @var string|null
     */
    protected $currency;
    /**
     * Code NIF.
     *
     * @var string|null
     */
    protected $taxID;
    /**
     * SIREN / SIRET.
     *
     * @var string|null
     */
    protected $cRNCode;
    /**
     * Fax.
     *
     * @var string|null
     */
    protected $fax;
    /**
     * Téléphone n°1.
     *
     * @var string|null
     */
    protected $phone1;
    /**
     * Téléphone n°2.
     *
     * @var string|null
     */
    protected $phone2;
    /**
     * Téléphone n°3.
     *
     * @var string|null
     */
    protected $phone3;
    /**
     * Site Web.
     *
     * @var string|null
     */
    protected $website;
    /**
     * Adresse messagerie.
     *
     * @var string|null
     */
    protected $email;
    /**
     * Particulier.
     *
     * @var bool|null
     */
    protected $individual;
    /**
     * Sexe.
     *
     * @var string|null
     */
    protected $gender;
    /**
     * Prénom.
     *
     * @var string|null
     */
    protected $firstName;
    /**
     * Jour de naissance.
     *
     * @var int|null
     */
    protected $dayOfBirth;
    /**
     * Mois de naissance.
     *
     * @var int|null
     */
    protected $monthOfBirth;
    /**
     * Année de naissance.
     *
     * @var int|null
     */
    protected $yearOfBirth;
    /**
     * Groupe, maison mère.
     *
     * @var string|null
     */
    protected $corporateGroup;
    /**
     * Enseigne.
     *
     * @var string|null
     */
    protected $brand;
    /**
     * Conditions de règlement.
     *
     * @var string|null
     */
    protected $paymentTerms;
    /**
     * Incoterms.
     *
     * @var string|null
     */
    protected $incotermTable;
    /**
     * Mode d'expéditions.
     *
     * @var string|null
     */
    protected $shippingMethodTable;
    /**
     * Lieu de mise à disposition des marchandises.
     *
     * @var string|null
     */
    protected $availabilitySiteIncoterm;
    /**
     * Secteur géographique.
     *
     * @var string|null
     */
    protected $geographicSector;
    /**
     * Transporteur.
     *
     * @var string|null
     */
    protected $carrier;
    /**
     * Etablissement.
     *
     * @var string|null
     */
    protected $businessCenter;
    /**
     * Dépôt.
     *
     * @var string|null
     */
    protected $warehouse;
    /**
     * Commercial.
     *
     * @var string|null
     */
    protected $salesRepresentative;
    /**
     * Mode de relance des règlements.
     *
     * @var string|null
     */
    protected $paymentReminderMode;
    /**
     * Date de la dernière modification.
     *
     * @var \DateTime|null
     */
    protected $modificationDate;
    /**
     * Représentant n°2.
     *
     * @var string|null
     */
    protected $salesRepresentative2;
    /**
     * Représentant n°3.
     *
     * @var string|null
     */
    protected $salesRepresentative3;
    /**
     * Nature comptable.
     *
     * @var mixed|null
     */
    protected $subsidiaryType;
    /**
     * Compte auxiliaire.
     *
     * @var mixed|null
     */
    protected $subsidiary;
    /**
     * Compte général collectif.
     *
     * @var mixed|null
     */
    protected $controlAccount;
    /**
     * Division territoriale.
     *
     * @var mixed|null
     */
    protected $territorialDivision;
    /**
     * Tiers multi-devises.
     *
     * @var mixed|null
     */
    protected $multiCurrency;
    /**
     * Code NAF.
     *
     * @var mixed|null
     */
    protected $nAICSCode;
    /**
     * Tiers facturé.
     *
     * @var mixed|null
     */
    protected $invoicedThirdParty;
    /**
     * Tiers payeur / payé.
     *
     * @var mixed|null
     */
    protected $thirdPartyPayer;
    /**
     * Fréquence relevé facture.
     *
     * @var mixed|null
     */
    protected $invoiceStatementFrequency;
    /**
     * Jour relevé facture.
     *
     * @var mixed|null
     */
    protected $invoiceStatementDay;
    /**
     * Dernier code lettrage.
     *
     * @var mixed|null
     */
    protected $lastMatchingCode;
    /**
     * Abréviation postale / civilité.
     *
     * @var mixed|null
     */
    protected $shortLegalForm;
    /**
     * Forme juridique.
     *
     * @var mixed|null
     */
    protected $legalForm;
    /**
     * Profil de gestion.
     *
     * @var mixed|null
     */
    protected $managementProfile;
    /**
     * Exigibilité de la TVA (Fourniss.).
     *
     * @var mixed|null
     */
    protected $salesTaxClaimability;
    /**
     * Total débit N-1.
     *
     * @var mixed|null
     */
    protected $totalDebitNM1;
    /**
     * Total crédit N-1.
     *
     * @var mixed|null
     */
    protected $totalCreditNM1;
    /**
     * Total débit N.
     *
     * @var mixed|null
     */
    protected $totalDebitN;
    /**
     * Total crédit N.
     *
     * @var mixed|null
     */
    protected $totalCreditN;
    /**
     * Total débit N+1.
     *
     * @var mixed|null
     */
    protected $totalDebitNP1;
    /**
     * Total crédit N+1.
     *
     * @var mixed|null
     */
    protected $totalCreditNP1;
    /**
     * Total débit A Nouveaux.
     *
     * @var mixed|null
     */
    protected $totalDebitOpeningBalances;
    /**
     * Total crédit A Nouveaux.
     *
     * @var mixed|null
     */
    protected $totalCreditOpeningBalances;
    /**
     * A nouveau provisoire N+1.
     *
     * @var mixed|null
     */
    protected $debitProvisionalOpeningBalanceNP1;
    /**
     * A nouveau provisoire N+1.
     *
     * @var mixed|null
     */
    protected $creditProvisionalOpeningBalanceNP1;
    /**
     * Date du dernier relevé.
     *
     * @var mixed|null
     */
    protected $lastStatementDate;
    /**
     * Score de relance.
     *
     * @var mixed|null
     */
    protected $reminderScore;
    /**
     * Exporté par.
     *
     * @var mixed|null
     */
    protected $exportedBy;
    /**
     * Score client.
     *
     * @var mixed|null
     */
    protected $customerScore;
    /**
     * Date de la dernière pièce.
     *
     * @var mixed|null
     */
    protected $lastDocumentDate;
    /**
     * Numéro de la dernière pièce.
     *
     * @var mixed|null
     */
    protected $lastDocumentNumber;
    /**
     * Total HT de la dernière pièce.
     *
     * @var mixed|null
     */
    protected $lastDocumentTotalTaxEx;
    /**
     * Crédit demandé.
     *
     * @var mixed|null
     */
    protected $creditRequested;
    /**
     * Crédit accordé.
     *
     * @var mixed|null
     */
    protected $creditGranted;
    /**
     * N° dossier assurance crédit.
     *
     * @var mixed|null
     */
    protected $creditInsuranceFolderNumber;
    /**
     * Date de début assurance crédit.
     *
     * @var mixed|null
     */
    protected $creditInsuranceStartDate;
    /**
     * Date de fin assurance crédit.
     *
     * @var mixed|null
     */
    protected $creditInsuranceEndDate;
    /**
     * Plafond de crédit autorisé.
     *
     * @var mixed|null
     */
    protected $creditLimit;
    /**
     * Date de début plafond autorisé.
     *
     * @var mixed|null
     */
    protected $creditLimitStartDate;
    /**
     * Date de fin plafond autorisé.
     *
     * @var mixed|null
     */
    protected $creditLimitEndDate;
    /**
     * Rembourse avoir.
     *
     * @var mixed|null
     */
    protected $creditReimbursement;
    /**
     * Tiers payeur.
     *
     * @var mixed|null
     */
    protected $isPayer;
    /**
     * Code tiers d'une application amont.
     *
     * @var mixed|null
     */
    protected $importCode;
    /**
     * Apporteur d'affaires.
     *
     * @var mixed|null
     */
    protected $contractProvider;
    /**
     * % Commission apporteur.
     *
     * @var mixed|null
     */
    protected $percentCommissionProvider;
    /**
     * Secteur activité.
     *
     * @var mixed|null
     */
    protected $activitySector;
    /**
     * Code tarif.
     *
     * @var mixed|null
     */
    protected $priceListCode;
    /**
     * % remise.
     *
     * @var mixed|null
     */
    protected $rebate;
    /**
     * % escompte.
     *
     * @var mixed|null
     */
    protected $percentDiscount;
    /**
     * Jour de paiement n°1.
     *
     * @var mixed|null
     */
    protected $paymentDay1;
    /**
     * Jour de paiement n°2.
     *
     * @var mixed|null
     */
    protected $paymentDay2;
    /**
     * Facturation HT.
     *
     * @var mixed|null
     */
    protected $invoicingTaxEx;
    /**
     * Régime TVA.
     *
     * @var mixed|null
     */
    protected $salesTaxSystem;
    /**
     * Soumis à TPF.
     *
     * @var mixed|null
     */
    protected $subjectedToPFT;
    /**
     * Lettrable (O/N).
     *
     * @var mixed|null
     */
    protected $matchable;
    /**
     * Total débit.
     *
     * @var mixed|null
     */
    protected $totalDebit;
    /**
     * Total crédit.
     *
     * @var mixed|null
     */
    protected $totalCredit;
    /**
     * Date ouverture.
     *
     * @var mixed|null
     */
    protected $openingDate;
    /**
     * Date fermeture.
     *
     * @var mixed|null
     */
    protected $closingDate;
    /**
     * Fermé (O/N).
     *
     * @var mixed|null
     */
    protected $closed;
    /**
     * Date du dernier mouvement.
     *
     * @var mixed|null
     */
    protected $lastMvtDate;
    /**
     * Débit du dernier mouvement.
     *
     * @var mixed|null
     */
    protected $lastMvtDebit;
    /**
     * Crédit du dernier mouvement.
     *
     * @var mixed|null
     */
    protected $lastMvtCredit;
    /**
     * N° pièce du dernier mouvement.
     *
     * @var mixed|null
     */
    protected $lastMvtDocumentNumber;
    /**
     * N° ligne du dernier mouvement.
     *
     * @var mixed|null
     */
    protected $lastMvtDocumentLineNumber;
    /**
     * Confidentiel.
     *
     * @var mixed|null
     */
    protected $confidential;
    /**
     * Solde progressif.
     *
     * @var mixed|null
     */
    protected $progressiveBalance;
    /**
     * Totaux mensuels.
     *
     * @var mixed|null
     */
    protected $monthlyTotals;
    /**
     * Coût horaire.
     *
     * @var mixed|null
     */
    protected $hourlyCost;
    /**
     * Mode relance traite.
     *
     * @var mixed|null
     */
    protected $draftReminderMode;
    /**
     * Relevé facture.
     *
     * @var mixed|null
     */
    protected $invoiceStatement;
    /**
     * Famille comptable.
     *
     * @var mixed|null
     */
    protected $accountingFamily;
    /**
     * Debrayage de l'automatisme TP.
     *
     * @var mixed|null
     */
    protected $decouplingOfTPMechanism;
    /**
     * Mois de clôture de l'entreprise.
     *
     * @var mixed|null
     */
    protected $companyClosingMonth;
    /**
     * Pièces en Euro.
     *
     * @var mixed|null
     */
    protected $documentsInEuros;
    /**
     * Mot de passe Internet.
     *
     * @var mixed|null
     */
    protected $internetPassword;
    /**
     * Prescripteur.
     *
     * @var mixed|null
     */
    protected $prescriber;
    /**
     * Publipostage.
     *
     * @var mixed|null
     */
    protected $mailing;
    /**
     * Origine.
     *
     * @var mixed|null
     */
    protected $origin;
    /**
     * Libellé phonétique.
     *
     * @var mixed|null
     */
    protected $phoneticDescription;
    /**
     * Client depuis.
     *
     * @var mixed|null
     */
    protected $customerSince;
    /**
     * Etat du risque.
     *
     * @var mixed|null
     */
    protected $riskStatus;
    /**
     * Domaine d'activité.
     *
     * @var mixed|null
     */
    protected $businessLine;
    /**
     * Date d'intégration.
     *
     * @var mixed|null
     */
    protected $integrationDate;
    /**
     * Téléphone formaté.
     *
     * @var mixed|null
     */
    protected $formattedPhone;
    /**
     * eMailing.
     *
     * @var mixed|null
     */
    protected $emailing;
    /**
     * Délai moyen de livraison.
     *
     * @var mixed|null
     */
    protected $averageDeliveryTime;
    /**
     * Localisation taxe.
     *
     * @var mixed|null
     */
    protected $taxLocation;
    /**
     * Invisible.
     *
     * @var mixed|null
     */
    protected $invisible;
    /**
     * Créateur.
     *
     * @var mixed|null
     */
    protected $createdBy;
    /**
     * Utilisateur.
     *
     * @var mixed|null
     */
    protected $modifiedBy;
    /**
     * Date de création.
     *
     * @var mixed|null
     */
    protected $creationDate;
    /**
     * @var mixed|null
     */
    protected $additionalThirdPartySubsidiary;
    /**
     * Code tiers.
     *
     * @var mixed|null
     */
    protected $thirdParty;
    /**
     * Ressource 1.
     *
     * @var mixed|null
     */
    protected $ressource1;
    /**
     * Ressource 2.
     *
     * @var mixed|null
     */
    protected $ressource2;
    /**
     * Ressource 3.
     *
     * @var mixed|null
     */
    protected $ressource3;
    /**
     * Conditions spéciales commission.
     *
     * @var mixed|null
     */
    protected $specialCommissionConditions;
    /**
     * Taux représentant n°1.
     *
     * @var mixed|null
     */
    protected $salesRepRate1;
    /**
     * Taux représentant n°2.
     *
     * @var mixed|null
     */
    protected $salesRepRate2;
    /**
     * Taux représentant n°3.
     *
     * @var mixed|null
     */
    protected $salesRepRate3;
    /**
     * Tarifs spéciaux.
     *
     * @var mixed|null
     */
    protected $specialPriceLists;
    /**
     * Tiers livré.
     *
     * @var mixed|null
     */
    protected $deliveredThirdParty;
    /**
     * Accélérateur de saisie.
     *
     * @var mixed|null
     */
    protected $dataEntryAccelerator;
    /**
     * Profession.
     *
     * @var mixed|null
     */
    protected $profession;
    /**
     * Type de fournisseur.
     *
     * @var mixed|null
     */
    protected $providerType;
    /**
     * Participe au palmarès transporteur.
     *
     * @var mixed|null
     */
    protected $takesPartInCarrierRankings;
    /**
     * Frais de timbre.
     *
     * @var mixed|null
     */
    protected $stampExpenses;
    /**
     * Surtaxe.
     *
     * @var mixed|null
     */
    protected $surtax;
    /**
     * Masque d'impression bon transp.
     *
     * @var mixed|null
     */
    protected $printingTemplateCarriageVoucher;
    /**
     * Gestion EDI Transport.
     *
     * @var mixed|null
     */
    protected $eDITransportationManagement;
    /**
     * Format Fichier txt.
     *
     * @var mixed|null
     */
    protected $txtFileFormat;
    /**
     * Code client expéditeur.
     *
     * @var mixed|null
     */
    protected $customerCodeSender;
    /**
     * Qualifiant u. poids transport.
     *
     * @var mixed|null
     */
    protected $weightUnitQualif;
    /**
     * Modèle d'état des étiquettes colis.
     *
     * @var mixed|null
     */
    protected $packagingLabelsReportTemplate;
    /**
     * Edition automatique des étiquettes.
     *
     * @var mixed|null
     */
    protected $automaticReportPackagingLabels;
    /**
     * Edition automatique ordre transport.
     *
     * @var mixed|null
     */
    protected $automaticReportTransportationOrder;
    /**
     * Format Edi ou Privé.
     *
     * @var mixed|null
     */
    protected $typeFormat;
    /**
     * Nom du fichier pivot.
     *
     * @var mixed|null
     */
    protected $eDIFilePath;
    /**
     * Génération automatique Edi.
     *
     * @var mixed|null
     */
    protected $automaticEDIGeneration;
    /**
     * Souche de l'ordre de transport.
     *
     * @var mixed|null
     */
    protected $transportationOrderStub;
    /**
     * Prestation de transport habituelle.
     *
     * @var mixed|null
     */
    protected $usualTransportationService;
    /**
     * Qualifiant linéaire.
     *
     * @var mixed|null
     */
    protected $linearQualif;
    /**
     * Qualifiant volume.
     *
     * @var mixed|null
     */
    protected $volumeQualif;
    /**
     * Motif de fermeture.
     *
     * @var mixed|null
     */
    protected $closingReason;
    /**
     * code DUNS.
     *
     * @var mixed|null
     */
    protected $dUNSCode;
    /**
     * Doublon Tiers / Annuaire.
     *
     * @var mixed|null
     */
    protected $duplicate;
    /**
     * Fournisseur géré en sous-traitance.
     *
     * @var mixed|null
     */
    protected $subcontracted;
    /**
     * Code générique EDI.
     *
     * @var mixed|null
     */
    protected $genericEDICode;
    /**
     * Code service compta.
     *
     * @var mixed|null
     */
    protected $accountingServiceCode;
    /**
     * Entité pour l'adresse de livraison.
     *
     * @var mixed|null
     */
    protected $deliveryAdressEntity;
    /**
     * Dépôt du tiers livré.
     *
     * @var mixed|null
     */
    protected $deliveredThirdPartyWarehouse;
    /**
     * Retirer des enquêtes qualités.
     *
     * @var mixed|null
     */
    protected $excludeFromQualitySurvey;
    /**
     * Retirer du programme fidélité.
     *
     * @var mixed|null
     */
    protected $excludeFromLoyalty;
    /**
     * Formule de calcul du n° de colis.
     *
     * @var mixed|null
     */
    protected $packagingNumberFormula;
    /**
     * Frais.
     *
     * @var mixed|null
     */
    protected $freightCode;

    /**
     * Code EAN.
     */
    public function getEANCode(): ?string
    {
        return $this->eANCode;
    }

    /**
     * Code EAN.
     */
    public function setEANCode(?string $eANCode): self
    {
        $this->initialized['eANCode'] = true;
        $this->eANCode = $eANCode;

        return $this;
    }

    /**
     * Zone commerciale.
     */
    public function getBusinessArea(): ?string
    {
        return $this->businessArea;
    }

    /**
     * Zone commerciale.
     */
    public function setBusinessArea(?string $businessArea): self
    {
        $this->initialized['businessArea'] = true;
        $this->businessArea = $businessArea;

        return $this;
    }

    /**
     * Franco de port.
     */
    public function getCarriageFree(): ?float
    {
        return $this->carriageFree;
    }

    /**
     * Franco de port.
     */
    public function setCarriageFree(?float $carriageFree): self
    {
        $this->initialized['carriageFree'] = true;
        $this->carriageFree = $carriageFree;

        return $this;
    }

    /**
     * Code tiers.
     */
    public function getCode(): ?string
    {
        return $this->code;
    }

    /**
     * Code tiers.
     */
    public function setCode(?string $code): self
    {
        $this->initialized['code'] = true;
        $this->code = $code;

        return $this;
    }

    /**
     * Raison sociale.
     */
    public function getLabel(): ?string
    {
        return $this->label;
    }

    /**
     * Raison sociale.
     */
    public function setLabel(?string $label): self
    {
        $this->initialized['label'] = true;
        $this->label = $label;

        return $this;
    }

    /**
     * Adresse 1.
     */
    public function getAddress1(): ?string
    {
        return $this->address1;
    }

    /**
     * Adresse 1.
     */
    public function setAddress1(?string $address1): self
    {
        $this->initialized['address1'] = true;
        $this->address1 = $address1;

        return $this;
    }

    /**
     * Adresse 2.
     */
    public function getAddress2(): ?string
    {
        return $this->address2;
    }

    /**
     * Adresse 2.
     */
    public function setAddress2(?string $address2): self
    {
        $this->initialized['address2'] = true;
        $this->address2 = $address2;

        return $this;
    }

    /**
     * Adresse 3.
     */
    public function getAddress3(): ?string
    {
        return $this->address3;
    }

    /**
     * Adresse 3.
     */
    public function setAddress3(?string $address3): self
    {
        $this->initialized['address3'] = true;
        $this->address3 = $address3;

        return $this;
    }

    /**
     * Code postal.
     */
    public function getZipCode(): ?string
    {
        return $this->zipCode;
    }

    /**
     * Code postal.
     */
    public function setZipCode(?string $zipCode): self
    {
        $this->initialized['zipCode'] = true;
        $this->zipCode = $zipCode;

        return $this;
    }

    /**
     * Ville.
     */
    public function getCity(): ?string
    {
        return $this->city;
    }

    /**
     * Ville.
     */
    public function setCity(?string $city): self
    {
        $this->initialized['city'] = true;
        $this->city = $city;

        return $this;
    }

    /**
     * Région.
     */
    public function getRegion(): ?string
    {
        return $this->region;
    }

    /**
     * Région.
     */
    public function setRegion(?string $region): self
    {
        $this->initialized['region'] = true;
        $this->region = $region;

        return $this;
    }

    /**
     * Pays.
     */
    public function getCountry(): ?string
    {
        return $this->country;
    }

    /**
     * Pays.
     */
    public function setCountry(?string $country): self
    {
        $this->initialized['country'] = true;
        $this->country = $country;

        return $this;
    }

    /**
     * Libellé abrégé.
     */
    public function getShortLabel(): ?string
    {
        return $this->shortLabel;
    }

    /**
     * Libellé abrégé.
     */
    public function setShortLabel(?string $shortLabel): self
    {
        $this->initialized['shortLabel'] = true;
        $this->shortLabel = $shortLabel;

        return $this;
    }

    /**
     * Commentaire.
     */
    public function getComment(): ?string
    {
        return $this->comment;
    }

    /**
     * Commentaire.
     */
    public function setComment(?string $comment): self
    {
        $this->initialized['comment'] = true;
        $this->comment = $comment;

        return $this;
    }

    /**
     * Nationalité.
     */
    public function getNationality(): ?string
    {
        return $this->nationality;
    }

    /**
     * Nationalité.
     */
    public function setNationality(?string $nationality): self
    {
        $this->initialized['nationality'] = true;
        $this->nationality = $nationality;

        return $this;
    }

    /**
     * Langue.
     */
    public function getLanguage(): ?string
    {
        return $this->language;
    }

    /**
     * Langue.
     */
    public function setLanguage(?string $language): self
    {
        $this->initialized['language'] = true;
        $this->language = $language;

        return $this;
    }

    /**
     * Devise.
     */
    public function getCurrency(): ?string
    {
        return $this->currency;
    }

    /**
     * Devise.
     */
    public function setCurrency(?string $currency): self
    {
        $this->initialized['currency'] = true;
        $this->currency = $currency;

        return $this;
    }

    /**
     * Code NIF.
     */
    public function getTaxID(): ?string
    {
        return $this->taxID;
    }

    /**
     * Code NIF.
     */
    public function setTaxID(?string $taxID): self
    {
        $this->initialized['taxID'] = true;
        $this->taxID = $taxID;

        return $this;
    }

    /**
     * SIREN / SIRET.
     */
    public function getCRNCode(): ?string
    {
        return $this->cRNCode;
    }

    /**
     * SIREN / SIRET.
     */
    public function setCRNCode(?string $cRNCode): self
    {
        $this->initialized['cRNCode'] = true;
        $this->cRNCode = $cRNCode;

        return $this;
    }

    /**
     * Fax.
     */
    public function getFax(): ?string
    {
        return $this->fax;
    }

    /**
     * Fax.
     */
    public function setFax(?string $fax): self
    {
        $this->initialized['fax'] = true;
        $this->fax = $fax;

        return $this;
    }

    /**
     * Téléphone n°1.
     */
    public function getPhone1(): ?string
    {
        return $this->phone1;
    }

    /**
     * Téléphone n°1.
     */
    public function setPhone1(?string $phone1): self
    {
        $this->initialized['phone1'] = true;
        $this->phone1 = $phone1;

        return $this;
    }

    /**
     * Téléphone n°2.
     */
    public function getPhone2(): ?string
    {
        return $this->phone2;
    }

    /**
     * Téléphone n°2.
     */
    public function setPhone2(?string $phone2): self
    {
        $this->initialized['phone2'] = true;
        $this->phone2 = $phone2;

        return $this;
    }

    /**
     * Téléphone n°3.
     */
    public function getPhone3(): ?string
    {
        return $this->phone3;
    }

    /**
     * Téléphone n°3.
     */
    public function setPhone3(?string $phone3): self
    {
        $this->initialized['phone3'] = true;
        $this->phone3 = $phone3;

        return $this;
    }

    /**
     * Site Web.
     */
    public function getWebsite(): ?string
    {
        return $this->website;
    }

    /**
     * Site Web.
     */
    public function setWebsite(?string $website): self
    {
        $this->initialized['website'] = true;
        $this->website = $website;

        return $this;
    }

    /**
     * Adresse messagerie.
     */
    public function getEmail(): ?string
    {
        return $this->email;
    }

    /**
     * Adresse messagerie.
     */
    public function setEmail(?string $email): self
    {
        $this->initialized['email'] = true;
        $this->email = $email;

        return $this;
    }

    /**
     * Particulier.
     */
    public function getIndividual(): ?bool
    {
        return $this->individual;
    }

    /**
     * Particulier.
     */
    public function setIndividual(?bool $individual): self
    {
        $this->initialized['individual'] = true;
        $this->individual = $individual;

        return $this;
    }

    /**
     * Sexe.
     */
    public function getGender(): ?string
    {
        return $this->gender;
    }

    /**
     * Sexe.
     */
    public function setGender(?string $gender): self
    {
        $this->initialized['gender'] = true;
        $this->gender = $gender;

        return $this;
    }

    /**
     * Prénom.
     */
    public function getFirstName(): ?string
    {
        return $this->firstName;
    }

    /**
     * Prénom.
     */
    public function setFirstName(?string $firstName): self
    {
        $this->initialized['firstName'] = true;
        $this->firstName = $firstName;

        return $this;
    }

    /**
     * Jour de naissance.
     */
    public function getDayOfBirth(): ?int
    {
        return $this->dayOfBirth;
    }

    /**
     * Jour de naissance.
     */
    public function setDayOfBirth(?int $dayOfBirth): self
    {
        $this->initialized['dayOfBirth'] = true;
        $this->dayOfBirth = $dayOfBirth;

        return $this;
    }

    /**
     * Mois de naissance.
     */
    public function getMonthOfBirth(): ?int
    {
        return $this->monthOfBirth;
    }

    /**
     * Mois de naissance.
     */
    public function setMonthOfBirth(?int $monthOfBirth): self
    {
        $this->initialized['monthOfBirth'] = true;
        $this->monthOfBirth = $monthOfBirth;

        return $this;
    }

    /**
     * Année de naissance.
     */
    public function getYearOfBirth(): ?int
    {
        return $this->yearOfBirth;
    }

    /**
     * Année de naissance.
     */
    public function setYearOfBirth(?int $yearOfBirth): self
    {
        $this->initialized['yearOfBirth'] = true;
        $this->yearOfBirth = $yearOfBirth;

        return $this;
    }

    /**
     * Groupe, maison mère.
     */
    public function getCorporateGroup(): ?string
    {
        return $this->corporateGroup;
    }

    /**
     * Groupe, maison mère.
     */
    public function setCorporateGroup(?string $corporateGroup): self
    {
        $this->initialized['corporateGroup'] = true;
        $this->corporateGroup = $corporateGroup;

        return $this;
    }

    /**
     * Enseigne.
     */
    public function getBrand(): ?string
    {
        return $this->brand;
    }

    /**
     * Enseigne.
     */
    public function setBrand(?string $brand): self
    {
        $this->initialized['brand'] = true;
        $this->brand = $brand;

        return $this;
    }

    /**
     * Conditions de règlement.
     */
    public function getPaymentTerms(): ?string
    {
        return $this->paymentTerms;
    }

    /**
     * Conditions de règlement.
     */
    public function setPaymentTerms(?string $paymentTerms): self
    {
        $this->initialized['paymentTerms'] = true;
        $this->paymentTerms = $paymentTerms;

        return $this;
    }

    /**
     * Incoterms.
     */
    public function getIncotermTable(): ?string
    {
        return $this->incotermTable;
    }

    /**
     * Incoterms.
     */
    public function setIncotermTable(?string $incotermTable): self
    {
        $this->initialized['incotermTable'] = true;
        $this->incotermTable = $incotermTable;

        return $this;
    }

    /**
     * Mode d'expéditions.
     */
    public function getShippingMethodTable(): ?string
    {
        return $this->shippingMethodTable;
    }

    /**
     * Mode d'expéditions.
     */
    public function setShippingMethodTable(?string $shippingMethodTable): self
    {
        $this->initialized['shippingMethodTable'] = true;
        $this->shippingMethodTable = $shippingMethodTable;

        return $this;
    }

    /**
     * Lieu de mise à disposition des marchandises.
     */
    public function getAvailabilitySiteIncoterm(): ?string
    {
        return $this->availabilitySiteIncoterm;
    }

    /**
     * Lieu de mise à disposition des marchandises.
     */
    public function setAvailabilitySiteIncoterm(?string $availabilitySiteIncoterm): self
    {
        $this->initialized['availabilitySiteIncoterm'] = true;
        $this->availabilitySiteIncoterm = $availabilitySiteIncoterm;

        return $this;
    }

    /**
     * Secteur géographique.
     */
    public function getGeographicSector(): ?string
    {
        return $this->geographicSector;
    }

    /**
     * Secteur géographique.
     */
    public function setGeographicSector(?string $geographicSector): self
    {
        $this->initialized['geographicSector'] = true;
        $this->geographicSector = $geographicSector;

        return $this;
    }

    /**
     * Transporteur.
     */
    public function getCarrier(): ?string
    {
        return $this->carrier;
    }

    /**
     * Transporteur.
     */
    public function setCarrier(?string $carrier): self
    {
        $this->initialized['carrier'] = true;
        $this->carrier = $carrier;

        return $this;
    }

    /**
     * Etablissement.
     */
    public function getBusinessCenter(): ?string
    {
        return $this->businessCenter;
    }

    /**
     * Etablissement.
     */
    public function setBusinessCenter(?string $businessCenter): self
    {
        $this->initialized['businessCenter'] = true;
        $this->businessCenter = $businessCenter;

        return $this;
    }

    /**
     * Dépôt.
     */
    public function getWarehouse(): ?string
    {
        return $this->warehouse;
    }

    /**
     * Dépôt.
     */
    public function setWarehouse(?string $warehouse): self
    {
        $this->initialized['warehouse'] = true;
        $this->warehouse = $warehouse;

        return $this;
    }

    /**
     * Commercial.
     */
    public function getSalesRepresentative(): ?string
    {
        return $this->salesRepresentative;
    }

    /**
     * Commercial.
     */
    public function setSalesRepresentative(?string $salesRepresentative): self
    {
        $this->initialized['salesRepresentative'] = true;
        $this->salesRepresentative = $salesRepresentative;

        return $this;
    }

    /**
     * Mode de relance des règlements.
     */
    public function getPaymentReminderMode(): ?string
    {
        return $this->paymentReminderMode;
    }

    /**
     * Mode de relance des règlements.
     */
    public function setPaymentReminderMode(?string $paymentReminderMode): self
    {
        $this->initialized['paymentReminderMode'] = true;
        $this->paymentReminderMode = $paymentReminderMode;

        return $this;
    }

    /**
     * Date de la dernière modification.
     */
    public function getModificationDate(): ?\DateTime
    {
        return $this->modificationDate;
    }

    /**
     * Date de la dernière modification.
     */
    public function setModificationDate(?\DateTime $modificationDate): self
    {
        $this->initialized['modificationDate'] = true;
        $this->modificationDate = $modificationDate;

        return $this;
    }

    /**
     * Représentant n°2.
     */
    public function getSalesRepresentative2(): ?string
    {
        return $this->salesRepresentative2;
    }

    /**
     * Représentant n°2.
     */
    public function setSalesRepresentative2(?string $salesRepresentative2): self
    {
        $this->initialized['salesRepresentative2'] = true;
        $this->salesRepresentative2 = $salesRepresentative2;

        return $this;
    }

    /**
     * Représentant n°3.
     */
    public function getSalesRepresentative3(): ?string
    {
        return $this->salesRepresentative3;
    }

    /**
     * Représentant n°3.
     */
    public function setSalesRepresentative3(?string $salesRepresentative3): self
    {
        $this->initialized['salesRepresentative3'] = true;
        $this->salesRepresentative3 = $salesRepresentative3;

        return $this;
    }

    /**
     * Nature comptable.
     */
    public function getSubsidiaryType()
    {
        return $this->subsidiaryType;
    }

    /**
     * Nature comptable.
     */
    public function setSubsidiaryType($subsidiaryType): self
    {
        $this->initialized['subsidiaryType'] = true;
        $this->subsidiaryType = $subsidiaryType;

        return $this;
    }

    /**
     * Compte auxiliaire.
     */
    public function getSubsidiary()
    {
        return $this->subsidiary;
    }

    /**
     * Compte auxiliaire.
     */
    public function setSubsidiary($subsidiary): self
    {
        $this->initialized['subsidiary'] = true;
        $this->subsidiary = $subsidiary;

        return $this;
    }

    /**
     * Compte général collectif.
     */
    public function getControlAccount()
    {
        return $this->controlAccount;
    }

    /**
     * Compte général collectif.
     */
    public function setControlAccount($controlAccount): self
    {
        $this->initialized['controlAccount'] = true;
        $this->controlAccount = $controlAccount;

        return $this;
    }

    /**
     * Division territoriale.
     */
    public function getTerritorialDivision()
    {
        return $this->territorialDivision;
    }

    /**
     * Division territoriale.
     */
    public function setTerritorialDivision($territorialDivision): self
    {
        $this->initialized['territorialDivision'] = true;
        $this->territorialDivision = $territorialDivision;

        return $this;
    }

    /**
     * Tiers multi-devises.
     */
    public function getMultiCurrency()
    {
        return $this->multiCurrency;
    }

    /**
     * Tiers multi-devises.
     */
    public function setMultiCurrency($multiCurrency): self
    {
        $this->initialized['multiCurrency'] = true;
        $this->multiCurrency = $multiCurrency;

        return $this;
    }

    /**
     * Code NAF.
     */
    public function getNAICSCode()
    {
        return $this->nAICSCode;
    }

    /**
     * Code NAF.
     */
    public function setNAICSCode($nAICSCode): self
    {
        $this->initialized['nAICSCode'] = true;
        $this->nAICSCode = $nAICSCode;

        return $this;
    }

    /**
     * Tiers facturé.
     */
    public function getInvoicedThirdParty()
    {
        return $this->invoicedThirdParty;
    }

    /**
     * Tiers facturé.
     */
    public function setInvoicedThirdParty($invoicedThirdParty): self
    {
        $this->initialized['invoicedThirdParty'] = true;
        $this->invoicedThirdParty = $invoicedThirdParty;

        return $this;
    }

    /**
     * Tiers payeur / payé.
     */
    public function getThirdPartyPayer()
    {
        return $this->thirdPartyPayer;
    }

    /**
     * Tiers payeur / payé.
     */
    public function setThirdPartyPayer($thirdPartyPayer): self
    {
        $this->initialized['thirdPartyPayer'] = true;
        $this->thirdPartyPayer = $thirdPartyPayer;

        return $this;
    }

    /**
     * Fréquence relevé facture.
     */
    public function getInvoiceStatementFrequency()
    {
        return $this->invoiceStatementFrequency;
    }

    /**
     * Fréquence relevé facture.
     */
    public function setInvoiceStatementFrequency($invoiceStatementFrequency): self
    {
        $this->initialized['invoiceStatementFrequency'] = true;
        $this->invoiceStatementFrequency = $invoiceStatementFrequency;

        return $this;
    }

    /**
     * Jour relevé facture.
     */
    public function getInvoiceStatementDay()
    {
        return $this->invoiceStatementDay;
    }

    /**
     * Jour relevé facture.
     */
    public function setInvoiceStatementDay($invoiceStatementDay): self
    {
        $this->initialized['invoiceStatementDay'] = true;
        $this->invoiceStatementDay = $invoiceStatementDay;

        return $this;
    }

    /**
     * Dernier code lettrage.
     */
    public function getLastMatchingCode()
    {
        return $this->lastMatchingCode;
    }

    /**
     * Dernier code lettrage.
     */
    public function setLastMatchingCode($lastMatchingCode): self
    {
        $this->initialized['lastMatchingCode'] = true;
        $this->lastMatchingCode = $lastMatchingCode;

        return $this;
    }

    /**
     * Abréviation postale / civilité.
     */
    public function getShortLegalForm()
    {
        return $this->shortLegalForm;
    }

    /**
     * Abréviation postale / civilité.
     */
    public function setShortLegalForm($shortLegalForm): self
    {
        $this->initialized['shortLegalForm'] = true;
        $this->shortLegalForm = $shortLegalForm;

        return $this;
    }

    /**
     * Forme juridique.
     */
    public function getLegalForm()
    {
        return $this->legalForm;
    }

    /**
     * Forme juridique.
     */
    public function setLegalForm($legalForm): self
    {
        $this->initialized['legalForm'] = true;
        $this->legalForm = $legalForm;

        return $this;
    }

    /**
     * Profil de gestion.
     */
    public function getManagementProfile()
    {
        return $this->managementProfile;
    }

    /**
     * Profil de gestion.
     */
    public function setManagementProfile($managementProfile): self
    {
        $this->initialized['managementProfile'] = true;
        $this->managementProfile = $managementProfile;

        return $this;
    }

    /**
     * Exigibilité de la TVA (Fourniss.).
     */
    public function getSalesTaxClaimability()
    {
        return $this->salesTaxClaimability;
    }

    /**
     * Exigibilité de la TVA (Fourniss.).
     */
    public function setSalesTaxClaimability($salesTaxClaimability): self
    {
        $this->initialized['salesTaxClaimability'] = true;
        $this->salesTaxClaimability = $salesTaxClaimability;

        return $this;
    }

    /**
     * Total débit N-1.
     */
    public function getTotalDebitNM1()
    {
        return $this->totalDebitNM1;
    }

    /**
     * Total débit N-1.
     */
    public function setTotalDebitNM1($totalDebitNM1): self
    {
        $this->initialized['totalDebitNM1'] = true;
        $this->totalDebitNM1 = $totalDebitNM1;

        return $this;
    }

    /**
     * Total crédit N-1.
     */
    public function getTotalCreditNM1()
    {
        return $this->totalCreditNM1;
    }

    /**
     * Total crédit N-1.
     */
    public function setTotalCreditNM1($totalCreditNM1): self
    {
        $this->initialized['totalCreditNM1'] = true;
        $this->totalCreditNM1 = $totalCreditNM1;

        return $this;
    }

    /**
     * Total débit N.
     */
    public function getTotalDebitN()
    {
        return $this->totalDebitN;
    }

    /**
     * Total débit N.
     */
    public function setTotalDebitN($totalDebitN): self
    {
        $this->initialized['totalDebitN'] = true;
        $this->totalDebitN = $totalDebitN;

        return $this;
    }

    /**
     * Total crédit N.
     */
    public function getTotalCreditN()
    {
        return $this->totalCreditN;
    }

    /**
     * Total crédit N.
     */
    public function setTotalCreditN($totalCreditN): self
    {
        $this->initialized['totalCreditN'] = true;
        $this->totalCreditN = $totalCreditN;

        return $this;
    }

    /**
     * Total débit N+1.
     */
    public function getTotalDebitNP1()
    {
        return $this->totalDebitNP1;
    }

    /**
     * Total débit N+1.
     */
    public function setTotalDebitNP1($totalDebitNP1): self
    {
        $this->initialized['totalDebitNP1'] = true;
        $this->totalDebitNP1 = $totalDebitNP1;

        return $this;
    }

    /**
     * Total crédit N+1.
     */
    public function getTotalCreditNP1()
    {
        return $this->totalCreditNP1;
    }

    /**
     * Total crédit N+1.
     */
    public function setTotalCreditNP1($totalCreditNP1): self
    {
        $this->initialized['totalCreditNP1'] = true;
        $this->totalCreditNP1 = $totalCreditNP1;

        return $this;
    }

    /**
     * Total débit A Nouveaux.
     */
    public function getTotalDebitOpeningBalances()
    {
        return $this->totalDebitOpeningBalances;
    }

    /**
     * Total débit A Nouveaux.
     */
    public function setTotalDebitOpeningBalances($totalDebitOpeningBalances): self
    {
        $this->initialized['totalDebitOpeningBalances'] = true;
        $this->totalDebitOpeningBalances = $totalDebitOpeningBalances;

        return $this;
    }

    /**
     * Total crédit A Nouveaux.
     */
    public function getTotalCreditOpeningBalances()
    {
        return $this->totalCreditOpeningBalances;
    }

    /**
     * Total crédit A Nouveaux.
     */
    public function setTotalCreditOpeningBalances($totalCreditOpeningBalances): self
    {
        $this->initialized['totalCreditOpeningBalances'] = true;
        $this->totalCreditOpeningBalances = $totalCreditOpeningBalances;

        return $this;
    }

    /**
     * A nouveau provisoire N+1.
     */
    public function getDebitProvisionalOpeningBalanceNP1()
    {
        return $this->debitProvisionalOpeningBalanceNP1;
    }

    /**
     * A nouveau provisoire N+1.
     */
    public function setDebitProvisionalOpeningBalanceNP1($debitProvisionalOpeningBalanceNP1): self
    {
        $this->initialized['debitProvisionalOpeningBalanceNP1'] = true;
        $this->debitProvisionalOpeningBalanceNP1 = $debitProvisionalOpeningBalanceNP1;

        return $this;
    }

    /**
     * A nouveau provisoire N+1.
     */
    public function getCreditProvisionalOpeningBalanceNP1()
    {
        return $this->creditProvisionalOpeningBalanceNP1;
    }

    /**
     * A nouveau provisoire N+1.
     */
    public function setCreditProvisionalOpeningBalanceNP1($creditProvisionalOpeningBalanceNP1): self
    {
        $this->initialized['creditProvisionalOpeningBalanceNP1'] = true;
        $this->creditProvisionalOpeningBalanceNP1 = $creditProvisionalOpeningBalanceNP1;

        return $this;
    }

    /**
     * Date du dernier relevé.
     */
    public function getLastStatementDate()
    {
        return $this->lastStatementDate;
    }

    /**
     * Date du dernier relevé.
     */
    public function setLastStatementDate($lastStatementDate): self
    {
        $this->initialized['lastStatementDate'] = true;
        $this->lastStatementDate = $lastStatementDate;

        return $this;
    }

    /**
     * Score de relance.
     */
    public function getReminderScore()
    {
        return $this->reminderScore;
    }

    /**
     * Score de relance.
     */
    public function setReminderScore($reminderScore): self
    {
        $this->initialized['reminderScore'] = true;
        $this->reminderScore = $reminderScore;

        return $this;
    }

    /**
     * Exporté par.
     */
    public function getExportedBy()
    {
        return $this->exportedBy;
    }

    /**
     * Exporté par.
     */
    public function setExportedBy($exportedBy): self
    {
        $this->initialized['exportedBy'] = true;
        $this->exportedBy = $exportedBy;

        return $this;
    }

    /**
     * Score client.
     */
    public function getCustomerScore()
    {
        return $this->customerScore;
    }

    /**
     * Score client.
     */
    public function setCustomerScore($customerScore): self
    {
        $this->initialized['customerScore'] = true;
        $this->customerScore = $customerScore;

        return $this;
    }

    /**
     * Date de la dernière pièce.
     */
    public function getLastDocumentDate()
    {
        return $this->lastDocumentDate;
    }

    /**
     * Date de la dernière pièce.
     */
    public function setLastDocumentDate($lastDocumentDate): self
    {
        $this->initialized['lastDocumentDate'] = true;
        $this->lastDocumentDate = $lastDocumentDate;

        return $this;
    }

    /**
     * Numéro de la dernière pièce.
     */
    public function getLastDocumentNumber()
    {
        return $this->lastDocumentNumber;
    }

    /**
     * Numéro de la dernière pièce.
     */
    public function setLastDocumentNumber($lastDocumentNumber): self
    {
        $this->initialized['lastDocumentNumber'] = true;
        $this->lastDocumentNumber = $lastDocumentNumber;

        return $this;
    }

    /**
     * Total HT de la dernière pièce.
     */
    public function getLastDocumentTotalTaxEx()
    {
        return $this->lastDocumentTotalTaxEx;
    }

    /**
     * Total HT de la dernière pièce.
     */
    public function setLastDocumentTotalTaxEx($lastDocumentTotalTaxEx): self
    {
        $this->initialized['lastDocumentTotalTaxEx'] = true;
        $this->lastDocumentTotalTaxEx = $lastDocumentTotalTaxEx;

        return $this;
    }

    /**
     * Crédit demandé.
     */
    public function getCreditRequested()
    {
        return $this->creditRequested;
    }

    /**
     * Crédit demandé.
     */
    public function setCreditRequested($creditRequested): self
    {
        $this->initialized['creditRequested'] = true;
        $this->creditRequested = $creditRequested;

        return $this;
    }

    /**
     * Crédit accordé.
     */
    public function getCreditGranted()
    {
        return $this->creditGranted;
    }

    /**
     * Crédit accordé.
     */
    public function setCreditGranted($creditGranted): self
    {
        $this->initialized['creditGranted'] = true;
        $this->creditGranted = $creditGranted;

        return $this;
    }

    /**
     * N° dossier assurance crédit.
     */
    public function getCreditInsuranceFolderNumber()
    {
        return $this->creditInsuranceFolderNumber;
    }

    /**
     * N° dossier assurance crédit.
     */
    public function setCreditInsuranceFolderNumber($creditInsuranceFolderNumber): self
    {
        $this->initialized['creditInsuranceFolderNumber'] = true;
        $this->creditInsuranceFolderNumber = $creditInsuranceFolderNumber;

        return $this;
    }

    /**
     * Date de début assurance crédit.
     */
    public function getCreditInsuranceStartDate()
    {
        return $this->creditInsuranceStartDate;
    }

    /**
     * Date de début assurance crédit.
     */
    public function setCreditInsuranceStartDate($creditInsuranceStartDate): self
    {
        $this->initialized['creditInsuranceStartDate'] = true;
        $this->creditInsuranceStartDate = $creditInsuranceStartDate;

        return $this;
    }

    /**
     * Date de fin assurance crédit.
     */
    public function getCreditInsuranceEndDate()
    {
        return $this->creditInsuranceEndDate;
    }

    /**
     * Date de fin assurance crédit.
     */
    public function setCreditInsuranceEndDate($creditInsuranceEndDate): self
    {
        $this->initialized['creditInsuranceEndDate'] = true;
        $this->creditInsuranceEndDate = $creditInsuranceEndDate;

        return $this;
    }

    /**
     * Plafond de crédit autorisé.
     */
    public function getCreditLimit()
    {
        return $this->creditLimit;
    }

    /**
     * Plafond de crédit autorisé.
     */
    public function setCreditLimit($creditLimit): self
    {
        $this->initialized['creditLimit'] = true;
        $this->creditLimit = $creditLimit;

        return $this;
    }

    /**
     * Date de début plafond autorisé.
     */
    public function getCreditLimitStartDate()
    {
        return $this->creditLimitStartDate;
    }

    /**
     * Date de début plafond autorisé.
     */
    public function setCreditLimitStartDate($creditLimitStartDate): self
    {
        $this->initialized['creditLimitStartDate'] = true;
        $this->creditLimitStartDate = $creditLimitStartDate;

        return $this;
    }

    /**
     * Date de fin plafond autorisé.
     */
    public function getCreditLimitEndDate()
    {
        return $this->creditLimitEndDate;
    }

    /**
     * Date de fin plafond autorisé.
     */
    public function setCreditLimitEndDate($creditLimitEndDate): self
    {
        $this->initialized['creditLimitEndDate'] = true;
        $this->creditLimitEndDate = $creditLimitEndDate;

        return $this;
    }

    /**
     * Rembourse avoir.
     */
    public function getCreditReimbursement()
    {
        return $this->creditReimbursement;
    }

    /**
     * Rembourse avoir.
     */
    public function setCreditReimbursement($creditReimbursement): self
    {
        $this->initialized['creditReimbursement'] = true;
        $this->creditReimbursement = $creditReimbursement;

        return $this;
    }

    /**
     * Tiers payeur.
     */
    public function getIsPayer()
    {
        return $this->isPayer;
    }

    /**
     * Tiers payeur.
     */
    public function setIsPayer($isPayer): self
    {
        $this->initialized['isPayer'] = true;
        $this->isPayer = $isPayer;

        return $this;
    }

    /**
     * Code tiers d'une application amont.
     */
    public function getImportCode()
    {
        return $this->importCode;
    }

    /**
     * Code tiers d'une application amont.
     */
    public function setImportCode($importCode): self
    {
        $this->initialized['importCode'] = true;
        $this->importCode = $importCode;

        return $this;
    }

    /**
     * Apporteur d'affaires.
     */
    public function getContractProvider()
    {
        return $this->contractProvider;
    }

    /**
     * Apporteur d'affaires.
     */
    public function setContractProvider($contractProvider): self
    {
        $this->initialized['contractProvider'] = true;
        $this->contractProvider = $contractProvider;

        return $this;
    }

    /**
     * % Commission apporteur.
     */
    public function getPercentCommissionProvider()
    {
        return $this->percentCommissionProvider;
    }

    /**
     * % Commission apporteur.
     */
    public function setPercentCommissionProvider($percentCommissionProvider): self
    {
        $this->initialized['percentCommissionProvider'] = true;
        $this->percentCommissionProvider = $percentCommissionProvider;

        return $this;
    }

    /**
     * Secteur activité.
     */
    public function getActivitySector()
    {
        return $this->activitySector;
    }

    /**
     * Secteur activité.
     */
    public function setActivitySector($activitySector): self
    {
        $this->initialized['activitySector'] = true;
        $this->activitySector = $activitySector;

        return $this;
    }

    /**
     * Code tarif.
     */
    public function getPriceListCode()
    {
        return $this->priceListCode;
    }

    /**
     * Code tarif.
     */
    public function setPriceListCode($priceListCode): self
    {
        $this->initialized['priceListCode'] = true;
        $this->priceListCode = $priceListCode;

        return $this;
    }

    /**
     * % remise.
     */
    public function getRebate()
    {
        return $this->rebate;
    }

    /**
     * % remise.
     */
    public function setRebate($rebate): self
    {
        $this->initialized['rebate'] = true;
        $this->rebate = $rebate;

        return $this;
    }

    /**
     * % escompte.
     */
    public function getPercentDiscount()
    {
        return $this->percentDiscount;
    }

    /**
     * % escompte.
     */
    public function setPercentDiscount($percentDiscount): self
    {
        $this->initialized['percentDiscount'] = true;
        $this->percentDiscount = $percentDiscount;

        return $this;
    }

    /**
     * Jour de paiement n°1.
     */
    public function getPaymentDay1()
    {
        return $this->paymentDay1;
    }

    /**
     * Jour de paiement n°1.
     */
    public function setPaymentDay1($paymentDay1): self
    {
        $this->initialized['paymentDay1'] = true;
        $this->paymentDay1 = $paymentDay1;

        return $this;
    }

    /**
     * Jour de paiement n°2.
     */
    public function getPaymentDay2()
    {
        return $this->paymentDay2;
    }

    /**
     * Jour de paiement n°2.
     */
    public function setPaymentDay2($paymentDay2): self
    {
        $this->initialized['paymentDay2'] = true;
        $this->paymentDay2 = $paymentDay2;

        return $this;
    }

    /**
     * Facturation HT.
     */
    public function getInvoicingTaxEx()
    {
        return $this->invoicingTaxEx;
    }

    /**
     * Facturation HT.
     */
    public function setInvoicingTaxEx($invoicingTaxEx): self
    {
        $this->initialized['invoicingTaxEx'] = true;
        $this->invoicingTaxEx = $invoicingTaxEx;

        return $this;
    }

    /**
     * Régime TVA.
     */
    public function getSalesTaxSystem()
    {
        return $this->salesTaxSystem;
    }

    /**
     * Régime TVA.
     */
    public function setSalesTaxSystem($salesTaxSystem): self
    {
        $this->initialized['salesTaxSystem'] = true;
        $this->salesTaxSystem = $salesTaxSystem;

        return $this;
    }

    /**
     * Soumis à TPF.
     */
    public function getSubjectedToPFT()
    {
        return $this->subjectedToPFT;
    }

    /**
     * Soumis à TPF.
     */
    public function setSubjectedToPFT($subjectedToPFT): self
    {
        $this->initialized['subjectedToPFT'] = true;
        $this->subjectedToPFT = $subjectedToPFT;

        return $this;
    }

    /**
     * Lettrable (O/N).
     */
    public function getMatchable()
    {
        return $this->matchable;
    }

    /**
     * Lettrable (O/N).
     */
    public function setMatchable($matchable): self
    {
        $this->initialized['matchable'] = true;
        $this->matchable = $matchable;

        return $this;
    }

    /**
     * Total débit.
     */
    public function getTotalDebit()
    {
        return $this->totalDebit;
    }

    /**
     * Total débit.
     */
    public function setTotalDebit($totalDebit): self
    {
        $this->initialized['totalDebit'] = true;
        $this->totalDebit = $totalDebit;

        return $this;
    }

    /**
     * Total crédit.
     */
    public function getTotalCredit()
    {
        return $this->totalCredit;
    }

    /**
     * Total crédit.
     */
    public function setTotalCredit($totalCredit): self
    {
        $this->initialized['totalCredit'] = true;
        $this->totalCredit = $totalCredit;

        return $this;
    }

    /**
     * Date ouverture.
     */
    public function getOpeningDate()
    {
        return $this->openingDate;
    }

    /**
     * Date ouverture.
     */
    public function setOpeningDate($openingDate): self
    {
        $this->initialized['openingDate'] = true;
        $this->openingDate = $openingDate;

        return $this;
    }

    /**
     * Date fermeture.
     */
    public function getClosingDate()
    {
        return $this->closingDate;
    }

    /**
     * Date fermeture.
     */
    public function setClosingDate($closingDate): self
    {
        $this->initialized['closingDate'] = true;
        $this->closingDate = $closingDate;

        return $this;
    }

    /**
     * Fermé (O/N).
     */
    public function getClosed()
    {
        return $this->closed;
    }

    /**
     * Fermé (O/N).
     */
    public function setClosed($closed): self
    {
        $this->initialized['closed'] = true;
        $this->closed = $closed;

        return $this;
    }

    /**
     * Date du dernier mouvement.
     */
    public function getLastMvtDate()
    {
        return $this->lastMvtDate;
    }

    /**
     * Date du dernier mouvement.
     */
    public function setLastMvtDate($lastMvtDate): self
    {
        $this->initialized['lastMvtDate'] = true;
        $this->lastMvtDate = $lastMvtDate;

        return $this;
    }

    /**
     * Débit du dernier mouvement.
     */
    public function getLastMvtDebit()
    {
        return $this->lastMvtDebit;
    }

    /**
     * Débit du dernier mouvement.
     */
    public function setLastMvtDebit($lastMvtDebit): self
    {
        $this->initialized['lastMvtDebit'] = true;
        $this->lastMvtDebit = $lastMvtDebit;

        return $this;
    }

    /**
     * Crédit du dernier mouvement.
     */
    public function getLastMvtCredit()
    {
        return $this->lastMvtCredit;
    }

    /**
     * Crédit du dernier mouvement.
     */
    public function setLastMvtCredit($lastMvtCredit): self
    {
        $this->initialized['lastMvtCredit'] = true;
        $this->lastMvtCredit = $lastMvtCredit;

        return $this;
    }

    /**
     * N° pièce du dernier mouvement.
     */
    public function getLastMvtDocumentNumber()
    {
        return $this->lastMvtDocumentNumber;
    }

    /**
     * N° pièce du dernier mouvement.
     */
    public function setLastMvtDocumentNumber($lastMvtDocumentNumber): self
    {
        $this->initialized['lastMvtDocumentNumber'] = true;
        $this->lastMvtDocumentNumber = $lastMvtDocumentNumber;

        return $this;
    }

    /**
     * N° ligne du dernier mouvement.
     */
    public function getLastMvtDocumentLineNumber()
    {
        return $this->lastMvtDocumentLineNumber;
    }

    /**
     * N° ligne du dernier mouvement.
     */
    public function setLastMvtDocumentLineNumber($lastMvtDocumentLineNumber): self
    {
        $this->initialized['lastMvtDocumentLineNumber'] = true;
        $this->lastMvtDocumentLineNumber = $lastMvtDocumentLineNumber;

        return $this;
    }

    /**
     * Confidentiel.
     */
    public function getConfidential()
    {
        return $this->confidential;
    }

    /**
     * Confidentiel.
     */
    public function setConfidential($confidential): self
    {
        $this->initialized['confidential'] = true;
        $this->confidential = $confidential;

        return $this;
    }

    /**
     * Solde progressif.
     */
    public function getProgressiveBalance()
    {
        return $this->progressiveBalance;
    }

    /**
     * Solde progressif.
     */
    public function setProgressiveBalance($progressiveBalance): self
    {
        $this->initialized['progressiveBalance'] = true;
        $this->progressiveBalance = $progressiveBalance;

        return $this;
    }

    /**
     * Totaux mensuels.
     */
    public function getMonthlyTotals()
    {
        return $this->monthlyTotals;
    }

    /**
     * Totaux mensuels.
     */
    public function setMonthlyTotals($monthlyTotals): self
    {
        $this->initialized['monthlyTotals'] = true;
        $this->monthlyTotals = $monthlyTotals;

        return $this;
    }

    /**
     * Coût horaire.
     */
    public function getHourlyCost()
    {
        return $this->hourlyCost;
    }

    /**
     * Coût horaire.
     */
    public function setHourlyCost($hourlyCost): self
    {
        $this->initialized['hourlyCost'] = true;
        $this->hourlyCost = $hourlyCost;

        return $this;
    }

    /**
     * Mode relance traite.
     */
    public function getDraftReminderMode()
    {
        return $this->draftReminderMode;
    }

    /**
     * Mode relance traite.
     */
    public function setDraftReminderMode($draftReminderMode): self
    {
        $this->initialized['draftReminderMode'] = true;
        $this->draftReminderMode = $draftReminderMode;

        return $this;
    }

    /**
     * Relevé facture.
     */
    public function getInvoiceStatement()
    {
        return $this->invoiceStatement;
    }

    /**
     * Relevé facture.
     */
    public function setInvoiceStatement($invoiceStatement): self
    {
        $this->initialized['invoiceStatement'] = true;
        $this->invoiceStatement = $invoiceStatement;

        return $this;
    }

    /**
     * Famille comptable.
     */
    public function getAccountingFamily()
    {
        return $this->accountingFamily;
    }

    /**
     * Famille comptable.
     */
    public function setAccountingFamily($accountingFamily): self
    {
        $this->initialized['accountingFamily'] = true;
        $this->accountingFamily = $accountingFamily;

        return $this;
    }

    /**
     * Debrayage de l'automatisme TP.
     */
    public function getDecouplingOfTPMechanism()
    {
        return $this->decouplingOfTPMechanism;
    }

    /**
     * Debrayage de l'automatisme TP.
     */
    public function setDecouplingOfTPMechanism($decouplingOfTPMechanism): self
    {
        $this->initialized['decouplingOfTPMechanism'] = true;
        $this->decouplingOfTPMechanism = $decouplingOfTPMechanism;

        return $this;
    }

    /**
     * Mois de clôture de l'entreprise.
     */
    public function getCompanyClosingMonth()
    {
        return $this->companyClosingMonth;
    }

    /**
     * Mois de clôture de l'entreprise.
     */
    public function setCompanyClosingMonth($companyClosingMonth): self
    {
        $this->initialized['companyClosingMonth'] = true;
        $this->companyClosingMonth = $companyClosingMonth;

        return $this;
    }

    /**
     * Pièces en Euro.
     */
    public function getDocumentsInEuros()
    {
        return $this->documentsInEuros;
    }

    /**
     * Pièces en Euro.
     */
    public function setDocumentsInEuros($documentsInEuros): self
    {
        $this->initialized['documentsInEuros'] = true;
        $this->documentsInEuros = $documentsInEuros;

        return $this;
    }

    /**
     * Mot de passe Internet.
     */
    public function getInternetPassword()
    {
        return $this->internetPassword;
    }

    /**
     * Mot de passe Internet.
     */
    public function setInternetPassword($internetPassword): self
    {
        $this->initialized['internetPassword'] = true;
        $this->internetPassword = $internetPassword;

        return $this;
    }

    /**
     * Prescripteur.
     */
    public function getPrescriber()
    {
        return $this->prescriber;
    }

    /**
     * Prescripteur.
     */
    public function setPrescriber($prescriber): self
    {
        $this->initialized['prescriber'] = true;
        $this->prescriber = $prescriber;

        return $this;
    }

    /**
     * Publipostage.
     */
    public function getMailing()
    {
        return $this->mailing;
    }

    /**
     * Publipostage.
     */
    public function setMailing($mailing): self
    {
        $this->initialized['mailing'] = true;
        $this->mailing = $mailing;

        return $this;
    }

    /**
     * Origine.
     */
    public function getOrigin()
    {
        return $this->origin;
    }

    /**
     * Origine.
     */
    public function setOrigin($origin): self
    {
        $this->initialized['origin'] = true;
        $this->origin = $origin;

        return $this;
    }

    /**
     * Libellé phonétique.
     */
    public function getPhoneticDescription()
    {
        return $this->phoneticDescription;
    }

    /**
     * Libellé phonétique.
     */
    public function setPhoneticDescription($phoneticDescription): self
    {
        $this->initialized['phoneticDescription'] = true;
        $this->phoneticDescription = $phoneticDescription;

        return $this;
    }

    /**
     * Client depuis.
     */
    public function getCustomerSince()
    {
        return $this->customerSince;
    }

    /**
     * Client depuis.
     */
    public function setCustomerSince($customerSince): self
    {
        $this->initialized['customerSince'] = true;
        $this->customerSince = $customerSince;

        return $this;
    }

    /**
     * Etat du risque.
     */
    public function getRiskStatus()
    {
        return $this->riskStatus;
    }

    /**
     * Etat du risque.
     */
    public function setRiskStatus($riskStatus): self
    {
        $this->initialized['riskStatus'] = true;
        $this->riskStatus = $riskStatus;

        return $this;
    }

    /**
     * Domaine d'activité.
     */
    public function getBusinessLine()
    {
        return $this->businessLine;
    }

    /**
     * Domaine d'activité.
     */
    public function setBusinessLine($businessLine): self
    {
        $this->initialized['businessLine'] = true;
        $this->businessLine = $businessLine;

        return $this;
    }

    /**
     * Date d'intégration.
     */
    public function getIntegrationDate()
    {
        return $this->integrationDate;
    }

    /**
     * Date d'intégration.
     */
    public function setIntegrationDate($integrationDate): self
    {
        $this->initialized['integrationDate'] = true;
        $this->integrationDate = $integrationDate;

        return $this;
    }

    /**
     * Téléphone formaté.
     */
    public function getFormattedPhone()
    {
        return $this->formattedPhone;
    }

    /**
     * Téléphone formaté.
     */
    public function setFormattedPhone($formattedPhone): self
    {
        $this->initialized['formattedPhone'] = true;
        $this->formattedPhone = $formattedPhone;

        return $this;
    }

    /**
     * eMailing.
     */
    public function getEmailing()
    {
        return $this->emailing;
    }

    /**
     * eMailing.
     */
    public function setEmailing($emailing): self
    {
        $this->initialized['emailing'] = true;
        $this->emailing = $emailing;

        return $this;
    }

    /**
     * Délai moyen de livraison.
     */
    public function getAverageDeliveryTime()
    {
        return $this->averageDeliveryTime;
    }

    /**
     * Délai moyen de livraison.
     */
    public function setAverageDeliveryTime($averageDeliveryTime): self
    {
        $this->initialized['averageDeliveryTime'] = true;
        $this->averageDeliveryTime = $averageDeliveryTime;

        return $this;
    }

    /**
     * Localisation taxe.
     */
    public function getTaxLocation()
    {
        return $this->taxLocation;
    }

    /**
     * Localisation taxe.
     */
    public function setTaxLocation($taxLocation): self
    {
        $this->initialized['taxLocation'] = true;
        $this->taxLocation = $taxLocation;

        return $this;
    }

    /**
     * Invisible.
     */
    public function getInvisible()
    {
        return $this->invisible;
    }

    /**
     * Invisible.
     */
    public function setInvisible($invisible): self
    {
        $this->initialized['invisible'] = true;
        $this->invisible = $invisible;

        return $this;
    }

    /**
     * Créateur.
     */
    public function getCreatedBy()
    {
        return $this->createdBy;
    }

    /**
     * Créateur.
     */
    public function setCreatedBy($createdBy): self
    {
        $this->initialized['createdBy'] = true;
        $this->createdBy = $createdBy;

        return $this;
    }

    /**
     * Utilisateur.
     */
    public function getModifiedBy()
    {
        return $this->modifiedBy;
    }

    /**
     * Utilisateur.
     */
    public function setModifiedBy($modifiedBy): self
    {
        $this->initialized['modifiedBy'] = true;
        $this->modifiedBy = $modifiedBy;

        return $this;
    }

    /**
     * Date de création.
     */
    public function getCreationDate()
    {
        return $this->creationDate;
    }

    /**
     * Date de création.
     */
    public function setCreationDate($creationDate): self
    {
        $this->initialized['creationDate'] = true;
        $this->creationDate = $creationDate;

        return $this;
    }

    public function getAdditionalThirdPartySubsidiary()
    {
        return $this->additionalThirdPartySubsidiary;
    }

    public function setAdditionalThirdPartySubsidiary($additionalThirdPartySubsidiary): self
    {
        $this->initialized['additionalThirdPartySubsidiary'] = true;
        $this->additionalThirdPartySubsidiary = $additionalThirdPartySubsidiary;

        return $this;
    }

    /**
     * Code tiers.
     */
    public function getThirdParty()
    {
        return $this->thirdParty;
    }

    /**
     * Code tiers.
     */
    public function setThirdParty($thirdParty): self
    {
        $this->initialized['thirdParty'] = true;
        $this->thirdParty = $thirdParty;

        return $this;
    }

    /**
     * Ressource 1.
     */
    public function getRessource1()
    {
        return $this->ressource1;
    }

    /**
     * Ressource 1.
     */
    public function setRessource1($ressource1): self
    {
        $this->initialized['ressource1'] = true;
        $this->ressource1 = $ressource1;

        return $this;
    }

    /**
     * Ressource 2.
     */
    public function getRessource2()
    {
        return $this->ressource2;
    }

    /**
     * Ressource 2.
     */
    public function setRessource2($ressource2): self
    {
        $this->initialized['ressource2'] = true;
        $this->ressource2 = $ressource2;

        return $this;
    }

    /**
     * Ressource 3.
     */
    public function getRessource3()
    {
        return $this->ressource3;
    }

    /**
     * Ressource 3.
     */
    public function setRessource3($ressource3): self
    {
        $this->initialized['ressource3'] = true;
        $this->ressource3 = $ressource3;

        return $this;
    }

    /**
     * Conditions spéciales commission.
     */
    public function getSpecialCommissionConditions()
    {
        return $this->specialCommissionConditions;
    }

    /**
     * Conditions spéciales commission.
     */
    public function setSpecialCommissionConditions($specialCommissionConditions): self
    {
        $this->initialized['specialCommissionConditions'] = true;
        $this->specialCommissionConditions = $specialCommissionConditions;

        return $this;
    }

    /**
     * Taux représentant n°1.
     */
    public function getSalesRepRate1()
    {
        return $this->salesRepRate1;
    }

    /**
     * Taux représentant n°1.
     */
    public function setSalesRepRate1($salesRepRate1): self
    {
        $this->initialized['salesRepRate1'] = true;
        $this->salesRepRate1 = $salesRepRate1;

        return $this;
    }

    /**
     * Taux représentant n°2.
     */
    public function getSalesRepRate2()
    {
        return $this->salesRepRate2;
    }

    /**
     * Taux représentant n°2.
     */
    public function setSalesRepRate2($salesRepRate2): self
    {
        $this->initialized['salesRepRate2'] = true;
        $this->salesRepRate2 = $salesRepRate2;

        return $this;
    }

    /**
     * Taux représentant n°3.
     */
    public function getSalesRepRate3()
    {
        return $this->salesRepRate3;
    }

    /**
     * Taux représentant n°3.
     */
    public function setSalesRepRate3($salesRepRate3): self
    {
        $this->initialized['salesRepRate3'] = true;
        $this->salesRepRate3 = $salesRepRate3;

        return $this;
    }

    /**
     * Tarifs spéciaux.
     */
    public function getSpecialPriceLists()
    {
        return $this->specialPriceLists;
    }

    /**
     * Tarifs spéciaux.
     */
    public function setSpecialPriceLists($specialPriceLists): self
    {
        $this->initialized['specialPriceLists'] = true;
        $this->specialPriceLists = $specialPriceLists;

        return $this;
    }

    /**
     * Tiers livré.
     */
    public function getDeliveredThirdParty()
    {
        return $this->deliveredThirdParty;
    }

    /**
     * Tiers livré.
     */
    public function setDeliveredThirdParty($deliveredThirdParty): self
    {
        $this->initialized['deliveredThirdParty'] = true;
        $this->deliveredThirdParty = $deliveredThirdParty;

        return $this;
    }

    /**
     * Accélérateur de saisie.
     */
    public function getDataEntryAccelerator()
    {
        return $this->dataEntryAccelerator;
    }

    /**
     * Accélérateur de saisie.
     */
    public function setDataEntryAccelerator($dataEntryAccelerator): self
    {
        $this->initialized['dataEntryAccelerator'] = true;
        $this->dataEntryAccelerator = $dataEntryAccelerator;

        return $this;
    }

    /**
     * Profession.
     */
    public function getProfession()
    {
        return $this->profession;
    }

    /**
     * Profession.
     */
    public function setProfession($profession): self
    {
        $this->initialized['profession'] = true;
        $this->profession = $profession;

        return $this;
    }

    /**
     * Type de fournisseur.
     */
    public function getProviderType()
    {
        return $this->providerType;
    }

    /**
     * Type de fournisseur.
     */
    public function setProviderType($providerType): self
    {
        $this->initialized['providerType'] = true;
        $this->providerType = $providerType;

        return $this;
    }

    /**
     * Participe au palmarès transporteur.
     */
    public function getTakesPartInCarrierRankings()
    {
        return $this->takesPartInCarrierRankings;
    }

    /**
     * Participe au palmarès transporteur.
     */
    public function setTakesPartInCarrierRankings($takesPartInCarrierRankings): self
    {
        $this->initialized['takesPartInCarrierRankings'] = true;
        $this->takesPartInCarrierRankings = $takesPartInCarrierRankings;

        return $this;
    }

    /**
     * Frais de timbre.
     */
    public function getStampExpenses()
    {
        return $this->stampExpenses;
    }

    /**
     * Frais de timbre.
     */
    public function setStampExpenses($stampExpenses): self
    {
        $this->initialized['stampExpenses'] = true;
        $this->stampExpenses = $stampExpenses;

        return $this;
    }

    /**
     * Surtaxe.
     */
    public function getSurtax()
    {
        return $this->surtax;
    }

    /**
     * Surtaxe.
     */
    public function setSurtax($surtax): self
    {
        $this->initialized['surtax'] = true;
        $this->surtax = $surtax;

        return $this;
    }

    /**
     * Masque d'impression bon transp.
     */
    public function getPrintingTemplateCarriageVoucher()
    {
        return $this->printingTemplateCarriageVoucher;
    }

    /**
     * Masque d'impression bon transp.
     */
    public function setPrintingTemplateCarriageVoucher($printingTemplateCarriageVoucher): self
    {
        $this->initialized['printingTemplateCarriageVoucher'] = true;
        $this->printingTemplateCarriageVoucher = $printingTemplateCarriageVoucher;

        return $this;
    }

    /**
     * Gestion EDI Transport.
     */
    public function getEDITransportationManagement()
    {
        return $this->eDITransportationManagement;
    }

    /**
     * Gestion EDI Transport.
     */
    public function setEDITransportationManagement($eDITransportationManagement): self
    {
        $this->initialized['eDITransportationManagement'] = true;
        $this->eDITransportationManagement = $eDITransportationManagement;

        return $this;
    }

    /**
     * Format Fichier txt.
     */
    public function getTxtFileFormat()
    {
        return $this->txtFileFormat;
    }

    /**
     * Format Fichier txt.
     */
    public function setTxtFileFormat($txtFileFormat): self
    {
        $this->initialized['txtFileFormat'] = true;
        $this->txtFileFormat = $txtFileFormat;

        return $this;
    }

    /**
     * Code client expéditeur.
     */
    public function getCustomerCodeSender()
    {
        return $this->customerCodeSender;
    }

    /**
     * Code client expéditeur.
     */
    public function setCustomerCodeSender($customerCodeSender): self
    {
        $this->initialized['customerCodeSender'] = true;
        $this->customerCodeSender = $customerCodeSender;

        return $this;
    }

    /**
     * Qualifiant u. poids transport.
     */
    public function getWeightUnitQualif()
    {
        return $this->weightUnitQualif;
    }

    /**
     * Qualifiant u. poids transport.
     */
    public function setWeightUnitQualif($weightUnitQualif): self
    {
        $this->initialized['weightUnitQualif'] = true;
        $this->weightUnitQualif = $weightUnitQualif;

        return $this;
    }

    /**
     * Modèle d'état des étiquettes colis.
     */
    public function getPackagingLabelsReportTemplate()
    {
        return $this->packagingLabelsReportTemplate;
    }

    /**
     * Modèle d'état des étiquettes colis.
     */
    public function setPackagingLabelsReportTemplate($packagingLabelsReportTemplate): self
    {
        $this->initialized['packagingLabelsReportTemplate'] = true;
        $this->packagingLabelsReportTemplate = $packagingLabelsReportTemplate;

        return $this;
    }

    /**
     * Edition automatique des étiquettes.
     */
    public function getAutomaticReportPackagingLabels()
    {
        return $this->automaticReportPackagingLabels;
    }

    /**
     * Edition automatique des étiquettes.
     */
    public function setAutomaticReportPackagingLabels($automaticReportPackagingLabels): self
    {
        $this->initialized['automaticReportPackagingLabels'] = true;
        $this->automaticReportPackagingLabels = $automaticReportPackagingLabels;

        return $this;
    }

    /**
     * Edition automatique ordre transport.
     */
    public function getAutomaticReportTransportationOrder()
    {
        return $this->automaticReportTransportationOrder;
    }

    /**
     * Edition automatique ordre transport.
     */
    public function setAutomaticReportTransportationOrder($automaticReportTransportationOrder): self
    {
        $this->initialized['automaticReportTransportationOrder'] = true;
        $this->automaticReportTransportationOrder = $automaticReportTransportationOrder;

        return $this;
    }

    /**
     * Format Edi ou Privé.
     */
    public function getTypeFormat()
    {
        return $this->typeFormat;
    }

    /**
     * Format Edi ou Privé.
     */
    public function setTypeFormat($typeFormat): self
    {
        $this->initialized['typeFormat'] = true;
        $this->typeFormat = $typeFormat;

        return $this;
    }

    /**
     * Nom du fichier pivot.
     */
    public function getEDIFilePath()
    {
        return $this->eDIFilePath;
    }

    /**
     * Nom du fichier pivot.
     */
    public function setEDIFilePath($eDIFilePath): self
    {
        $this->initialized['eDIFilePath'] = true;
        $this->eDIFilePath = $eDIFilePath;

        return $this;
    }

    /**
     * Génération automatique Edi.
     */
    public function getAutomaticEDIGeneration()
    {
        return $this->automaticEDIGeneration;
    }

    /**
     * Génération automatique Edi.
     */
    public function setAutomaticEDIGeneration($automaticEDIGeneration): self
    {
        $this->initialized['automaticEDIGeneration'] = true;
        $this->automaticEDIGeneration = $automaticEDIGeneration;

        return $this;
    }

    /**
     * Souche de l'ordre de transport.
     */
    public function getTransportationOrderStub()
    {
        return $this->transportationOrderStub;
    }

    /**
     * Souche de l'ordre de transport.
     */
    public function setTransportationOrderStub($transportationOrderStub): self
    {
        $this->initialized['transportationOrderStub'] = true;
        $this->transportationOrderStub = $transportationOrderStub;

        return $this;
    }

    /**
     * Prestation de transport habituelle.
     */
    public function getUsualTransportationService()
    {
        return $this->usualTransportationService;
    }

    /**
     * Prestation de transport habituelle.
     */
    public function setUsualTransportationService($usualTransportationService): self
    {
        $this->initialized['usualTransportationService'] = true;
        $this->usualTransportationService = $usualTransportationService;

        return $this;
    }

    /**
     * Qualifiant linéaire.
     */
    public function getLinearQualif()
    {
        return $this->linearQualif;
    }

    /**
     * Qualifiant linéaire.
     */
    public function setLinearQualif($linearQualif): self
    {
        $this->initialized['linearQualif'] = true;
        $this->linearQualif = $linearQualif;

        return $this;
    }

    /**
     * Qualifiant volume.
     */
    public function getVolumeQualif()
    {
        return $this->volumeQualif;
    }

    /**
     * Qualifiant volume.
     */
    public function setVolumeQualif($volumeQualif): self
    {
        $this->initialized['volumeQualif'] = true;
        $this->volumeQualif = $volumeQualif;

        return $this;
    }

    /**
     * Motif de fermeture.
     */
    public function getClosingReason()
    {
        return $this->closingReason;
    }

    /**
     * Motif de fermeture.
     */
    public function setClosingReason($closingReason): self
    {
        $this->initialized['closingReason'] = true;
        $this->closingReason = $closingReason;

        return $this;
    }

    /**
     * code DUNS.
     */
    public function getDUNSCode()
    {
        return $this->dUNSCode;
    }

    /**
     * code DUNS.
     */
    public function setDUNSCode($dUNSCode): self
    {
        $this->initialized['dUNSCode'] = true;
        $this->dUNSCode = $dUNSCode;

        return $this;
    }

    /**
     * Doublon Tiers / Annuaire.
     */
    public function getDuplicate()
    {
        return $this->duplicate;
    }

    /**
     * Doublon Tiers / Annuaire.
     */
    public function setDuplicate($duplicate): self
    {
        $this->initialized['duplicate'] = true;
        $this->duplicate = $duplicate;

        return $this;
    }

    /**
     * Fournisseur géré en sous-traitance.
     */
    public function getSubcontracted()
    {
        return $this->subcontracted;
    }

    /**
     * Fournisseur géré en sous-traitance.
     */
    public function setSubcontracted($subcontracted): self
    {
        $this->initialized['subcontracted'] = true;
        $this->subcontracted = $subcontracted;

        return $this;
    }

    /**
     * Code générique EDI.
     */
    public function getGenericEDICode()
    {
        return $this->genericEDICode;
    }

    /**
     * Code générique EDI.
     */
    public function setGenericEDICode($genericEDICode): self
    {
        $this->initialized['genericEDICode'] = true;
        $this->genericEDICode = $genericEDICode;

        return $this;
    }

    /**
     * Code service compta.
     */
    public function getAccountingServiceCode()
    {
        return $this->accountingServiceCode;
    }

    /**
     * Code service compta.
     */
    public function setAccountingServiceCode($accountingServiceCode): self
    {
        $this->initialized['accountingServiceCode'] = true;
        $this->accountingServiceCode = $accountingServiceCode;

        return $this;
    }

    /**
     * Entité pour l'adresse de livraison.
     */
    public function getDeliveryAdressEntity()
    {
        return $this->deliveryAdressEntity;
    }

    /**
     * Entité pour l'adresse de livraison.
     */
    public function setDeliveryAdressEntity($deliveryAdressEntity): self
    {
        $this->initialized['deliveryAdressEntity'] = true;
        $this->deliveryAdressEntity = $deliveryAdressEntity;

        return $this;
    }

    /**
     * Dépôt du tiers livré.
     */
    public function getDeliveredThirdPartyWarehouse()
    {
        return $this->deliveredThirdPartyWarehouse;
    }

    /**
     * Dépôt du tiers livré.
     */
    public function setDeliveredThirdPartyWarehouse($deliveredThirdPartyWarehouse): self
    {
        $this->initialized['deliveredThirdPartyWarehouse'] = true;
        $this->deliveredThirdPartyWarehouse = $deliveredThirdPartyWarehouse;

        return $this;
    }

    /**
     * Retirer des enquêtes qualités.
     */
    public function getExcludeFromQualitySurvey()
    {
        return $this->excludeFromQualitySurvey;
    }

    /**
     * Retirer des enquêtes qualités.
     */
    public function setExcludeFromQualitySurvey($excludeFromQualitySurvey): self
    {
        $this->initialized['excludeFromQualitySurvey'] = true;
        $this->excludeFromQualitySurvey = $excludeFromQualitySurvey;

        return $this;
    }

    /**
     * Retirer du programme fidélité.
     */
    public function getExcludeFromLoyalty()
    {
        return $this->excludeFromLoyalty;
    }

    /**
     * Retirer du programme fidélité.
     */
    public function setExcludeFromLoyalty($excludeFromLoyalty): self
    {
        $this->initialized['excludeFromLoyalty'] = true;
        $this->excludeFromLoyalty = $excludeFromLoyalty;

        return $this;
    }

    /**
     * Formule de calcul du n° de colis.
     */
    public function getPackagingNumberFormula()
    {
        return $this->packagingNumberFormula;
    }

    /**
     * Formule de calcul du n° de colis.
     */
    public function setPackagingNumberFormula($packagingNumberFormula): self
    {
        $this->initialized['packagingNumberFormula'] = true;
        $this->packagingNumberFormula = $packagingNumberFormula;

        return $this;
    }

    /**
     * Frais.
     */
    public function getFreightCode()
    {
        return $this->freightCode;
    }

    /**
     * Frais.
     */
    public function setFreightCode($freightCode): self
    {
        $this->initialized['freightCode'] = true;
        $this->freightCode = $freightCode;

        return $this;
    }
}
