<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Cegid\Api\Model;

class CegidMtsActionV1ActionDtoReader
{
    /**
     * @var array
     */
    protected $initialized = [];

    public function isInitialized($property): bool
    {
        return array_key_exists($property, $this->initialized);
    }
    /**
     * Numéro d'action par auxiliaire.
     *
     * @var int|null
     */
    protected $number;
    /**
     * Code action d'une application amont.
     *
     * @var int|null
     */
    protected $importCode;
    /**
     * Libellé.
     *
     * @var string|null
     */
    protected $label;
    /**
     * Auxiliaire.
     *
     * @var string|null
     */
    protected $subsidiary;
    /**
     * Tiers.
     *
     * @var string|null
     */
    protected $thirdParty;
    /**
     * Libellé du tiers.
     *
     * @var string|null
     */
    protected $thirdPartyLabel;
    /**
     * Type d'action.
     *
     * @var string|null
     */
    protected $type;
    /**
     * Libellé du type d'action.
     *
     * @var string|null
     */
    protected $typeLabel;
    /**
     * Code produit GRC/GRF.
     *
     * @var string|null
     */
    protected $cegidProductCode;
    /**
     * Responsable.
     *
     * @var string|null
     */
    protected $supervisor;
    /**
     * Libellé du responsable.
     *
     * @var string|null
     */
    protected $supervisorLabel;
    /**
     * Opération.
     *
     * @var string|null
     */
    protected $operation;
    /**
     * Libellé de l'opération.
     *
     * @var string|null
     */
    protected $operationLabel;
    /**
     * Numéro chainage.
     *
     * @var int|null
     */
    protected $sequencingNumber;
    /**
     * Libellé du chainage.
     *
     * @var string|null
     */
    protected $sequencingNumberLabel;
    /**
     * Action générique.
     *
     * @var int|null
     */
    protected $genericAction;
    /**
     * Libellé de l'action générique.
     *
     * @var string|null
     */
    protected $genericActionLabel;
    /**
     * Projet.
     *
     * @var string|null
     */
    protected $project;
    /**
     * Libellé du projet.
     *
     * @var string|null
     */
    protected $projectLabel;
    /**
     * Date de l'action.
     *
     * @var \DateTime|null
     */
    protected $date;
    /**
     * Heure action.
     *
     * @var \DateTime|null
     */
    protected $hour;
    /**
     * Durée.
     *
     * @var float|null
     */
    protected $duration;
    /**
     * Date et heure de début de l'action.
     *
     * @var \DateTime|null
     */
    protected $startDate;
    /**
     * Date et heure de fin de l'action.
     *
     * @var \DateTime|null
     */
    protected $endDate;
    /**
     * Date d'échéance.
     *
     * @var \DateTime|null
     */
    protected $dueDate;
    /**
     * Etat de l'action.
     *
     * @var string|null
     */
    protected $state;
    /**
     * Libellé de l'état de l'action.
     *
     * @var string|null
     */
    protected $stateLabel;
    /**
     * Coût.
     *
     * @var float|null
     */
    protected $cost;
    /**
     * Chronomètre.
     *
     * @var float|null
     */
    protected $chronometer;
    /**
     * Interlocuteur.
     *
     * @var int|null
     */
    protected $contact;
    /**
     * Nom de l'interlocuteur.
     *
     * @var string|null
     */
    protected $contactLabel;
    /**
     * Niveau d'importance.
     *
     * @var string|null
     */
    protected $importanceLevel;
    /**
     * Libellé du niveau d'importance.
     *
     * @var string|null
     */
    protected $importanceLevelLabel;
    /**
     * Numéro d'opportunité.
     *
     * @var int|null
     */
    protected $opportunity;
    /**
     * Libellé de l'opportunité.
     *
     * @var string|null
     */
    protected $opportunityLabel;
    /**
     * Délai de rappel.
     *
     * @var string|null
     */
    protected $reminderPeriod;
    /**
     * Libellé du délai de rappel.
     *
     * @var string|null
     */
    protected $reminderPeriodLabel;
    /**
     * Date rappel.
     *
     * @var \DateTime|null
     */
    protected $reminderDate;
    /**
     * Type de chainage.
     *
     * @var string|null
     */
    protected $sequencingType;
    /**
     * Libellé du type de chainage.
     *
     * @var string|null
     */
    protected $sequencingTypeLabel;
    /**
     * N° de ligne du type de chainage.
     *
     * @var int|null
     */
    protected $sequencingTypeLine;
    /**
     * Libellé de la ligne de chainage.
     *
     * @var string|null
     */
    protected $sequencingTypeLineLabel;
    /**
     * Date du dernier mail.
     *
     * @var \DateTime|null
     */
    protected $lastEmailDate;
    /**
     * Code affaire.
     *
     * @var string|null
     */
    protected $contract;
    /**
     * Libellé de l'affaire.
     *
     * @var string|null
     */
    protected $contractLabel;
    /**
     * Partie 0 affaire.
     *
     * @var string|null
     */
    protected $contractCodeP0;
    /**
     * Partie 1 affaire.
     *
     * @var string|null
     */
    protected $contractCodeP1;
    /**
     * Partie 2 affaire.
     *
     * @var string|null
     */
    protected $contractCodeP2;
    /**
     * Partie 3 affaire.
     *
     * @var string|null
     */
    protected $contractCodeP3;
    /**
     * Code avenant.
     *
     * @var string|null
     */
    protected $additionalClause;
    /**
     * Identifiant de l'élément parc associé.
     *
     * @var int|null
     */
    protected $poolElement;
    /**
     * Libellé de l'élément parc.
     *
     * @var string|null
     */
    protected $poolElementLabel;
    /**
     * Identifiant unique.
     *
     * @var int|null
     */
    protected $actionID;
    /**
     * A réaliser par.
     *
     * @var string|null
     */
    protected $toBeCarriedOutBy;
    /**
     * Nom du à réaliser par.
     *
     * @var string|null
     */
    protected $toBeCarriedOutByLabel;
    /**
     * % d'avancement de l'action.
     *
     * @var int|null
     */
    protected $percentProgress;
    /**
     * Date de réalisation.
     *
     * @var \DateTime|null
     */
    protected $completionDate;
    /**
     * Réalisée par.
     *
     * @var string|null
     */
    protected $achievedBy;
    /**
     * Nom du réaliser par.
     *
     * @var string|null
     */
    protected $achievedByLabel;
    /**
     * Ciblage.
     *
     * @var string|null
     */
    protected $targeting;
    /**
     * Libellé du ciblage.
     *
     * @var string|null
     */
    protected $targetingLabel;
    /**
     * Durée saisie.
     *
     * @var float|null
     */
    protected $enteredDuration;
    /**
     * Créer par.
     *
     * @var string|null
     */
    protected $createdBy;
    /**
     * @var string|null
     */
    protected $createdByLabel;
    /**
     * Créée le.
     *
     * @var \DateTime|null
     */
    protected $creationDate;
    /**
     * Modifié par.
     *
     * @var string|null
     */
    protected $modifiedBy;
    /**
     * @var string|null
     */
    protected $modifiedByLabel;
    /**
     * Modifié le.
     *
     * @var \DateTime|null
     */
    protected $modificationDate;
    /**
     * Origine création (RQQ RQN RQP).
     *
     * @var mixed|null
     */
    protected $creationOrigine;
    /**
     * Type d'action qualité.
     *
     * @var mixed|null
     */
    protected $typeQuality;
    /**
     * Libellé du type d'action qualité.
     *
     * @var mixed|null
     */
    protected $typeQualityLabel;
    /**
     * Localisation.
     *
     * @var mixed|null
     */
    protected $localisation;
    /**
     * Libellé de la localisation.
     *
     * @var mixed|null
     */
    protected $localisationLabel;
    /**
     * N° de demande de dérogation.
     *
     * @var mixed|null
     */
    protected $exemptionRequest;
    /**
     * Libellé de la demande de dérogation.
     *
     * @var mixed|null
     */
    protected $exemptionRequestLabel;
    /**
     * N° de plan correcteur.
     *
     * @var mixed|null
     */
    protected $correctionPlan;
    /**
     * Libellé du plan correcteur.
     *
     * @var mixed|null
     */
    protected $correctionPlanLabel;
    /**
     * N° de non conformité.
     *
     * @var mixed|null
     */
    protected $nonConformity;
    /**
     * Libellé de la non conformité.
     *
     * @var mixed|null
     */
    protected $nonConformityLabel;
    /**
     * N° de fiche qualité.
     *
     * @var mixed|null
     */
    protected $qualitySheet;
    /**
     * Libellé de la fiche qualité.
     *
     * @var mixed|null
     */
    protected $qualitySheetLabel;
    /**
     * Nature de travail.
     *
     * @var mixed|null
     */
    protected $workType;
    /**
     * @var mixed|null
     */
    protected $workTypeLabel;
    /**
     * Ordre production.
     *
     * @var mixed|null
     */
    protected $productionOrder;
    /**
     * No de phase dans l'itinéraire.
     *
     * @var mixed|null
     */
    protected $phase;
    /**
     * Gamme.
     *
     * @var mixed|null
     */
    protected $routing;
    /**
     * Date de vérification.
     *
     * @var mixed|null
     */
    protected $verificationDate;
    /**
     * Vérifiée par.
     *
     * @var mixed|null
     */
    protected $verifiedBy;
    /**
     * Nom du vérifié par.
     *
     * @var mixed|null
     */
    protected $verifiedByLabel;
    /**
     * Efficacité de l'action.
     *
     * @var mixed|null
     */
    protected $efficiency;
    /**
     * Libellé de l'efficacité.
     *
     * @var mixed|null
     */
    protected $efficiencyLabel;
    /**
     * Date de jugement.
     *
     * @var mixed|null
     */
    protected $judgementDate;
    /**
     * Jugée par.
     *
     * @var mixed|null
     */
    protected $judgedBy;
    /**
     * Nom du jugé par.
     *
     * @var mixed|null
     */
    protected $judgedByLabel;
    /**
     * Date de clôture.
     *
     * @var mixed|null
     */
    protected $closingDate;
    /**
     * Clôturée par.
     *
     * @var mixed|null
     */
    protected $closedBy;
    /**
     * Nom du clôturé par.
     *
     * @var mixed|null
     */
    protected $closedByLabel;
    /**
     * Pièce d'origine.
     *
     * @var mixed|null
     */
    protected $document;
    /**
     * Code Article.
     *
     * @var mixed|null
     */
    protected $itemCode;
    /**
     * Identifiant article.
     *
     * @var mixed|null
     */
    protected $item;
    /**
     * Libellé de l'article.
     *
     * @var mixed|null
     */
    protected $itemLabel;
    /**
     * Code ressource.
     *
     * @var mixed|null
     */
    protected $ressource;
    /**
     * Libellé de la ressource.
     *
     * @var mixed|null
     */
    protected $ressourceLabel;
    /**
     * Code famille ressource.
     *
     * @var mixed|null
     */
    protected $ressourceFamily;
    /**
     * Libellé de la famille de ressource.
     *
     * @var mixed|null
     */
    protected $ressourceFamilyLabel;
    /**
     * Unité de temps.
     *
     * @var mixed|null
     */
    protected $timeUnit;
    /**
     * Libellé de l'unité de temps.
     *
     * @var mixed|null
     */
    protected $timeUnitLabel;

    /**
     * Numéro d'action par auxiliaire.
     */
    public function getNumber(): ?int
    {
        return $this->number;
    }

    /**
     * Numéro d'action par auxiliaire.
     */
    public function setNumber(?int $number): self
    {
        $this->initialized['number'] = true;
        $this->number = $number;

        return $this;
    }

    /**
     * Code action d'une application amont.
     */
    public function getImportCode(): ?int
    {
        return $this->importCode;
    }

    /**
     * Code action d'une application amont.
     */
    public function setImportCode(?int $importCode): self
    {
        $this->initialized['importCode'] = true;
        $this->importCode = $importCode;

        return $this;
    }

    /**
     * Libellé.
     */
    public function getLabel(): ?string
    {
        return $this->label;
    }

    /**
     * Libellé.
     */
    public function setLabel(?string $label): self
    {
        $this->initialized['label'] = true;
        $this->label = $label;

        return $this;
    }

    /**
     * Auxiliaire.
     */
    public function getSubsidiary(): ?string
    {
        return $this->subsidiary;
    }

    /**
     * Auxiliaire.
     */
    public function setSubsidiary(?string $subsidiary): self
    {
        $this->initialized['subsidiary'] = true;
        $this->subsidiary = $subsidiary;

        return $this;
    }

    /**
     * Tiers.
     */
    public function getThirdParty(): ?string
    {
        return $this->thirdParty;
    }

    /**
     * Tiers.
     */
    public function setThirdParty(?string $thirdParty): self
    {
        $this->initialized['thirdParty'] = true;
        $this->thirdParty = $thirdParty;

        return $this;
    }

    /**
     * Libellé du tiers.
     */
    public function getThirdPartyLabel(): ?string
    {
        return $this->thirdPartyLabel;
    }

    /**
     * Libellé du tiers.
     */
    public function setThirdPartyLabel(?string $thirdPartyLabel): self
    {
        $this->initialized['thirdPartyLabel'] = true;
        $this->thirdPartyLabel = $thirdPartyLabel;

        return $this;
    }

    /**
     * Type d'action.
     */
    public function getType(): ?string
    {
        return $this->type;
    }

    /**
     * Type d'action.
     */
    public function setType(?string $type): self
    {
        $this->initialized['type'] = true;
        $this->type = $type;

        return $this;
    }

    /**
     * Libellé du type d'action.
     */
    public function getTypeLabel(): ?string
    {
        return $this->typeLabel;
    }

    /**
     * Libellé du type d'action.
     */
    public function setTypeLabel(?string $typeLabel): self
    {
        $this->initialized['typeLabel'] = true;
        $this->typeLabel = $typeLabel;

        return $this;
    }

    /**
     * Code produit GRC/GRF.
     */
    public function getCegidProductCode(): ?string
    {
        return $this->cegidProductCode;
    }

    /**
     * Code produit GRC/GRF.
     */
    public function setCegidProductCode(?string $cegidProductCode): self
    {
        $this->initialized['cegidProductCode'] = true;
        $this->cegidProductCode = $cegidProductCode;

        return $this;
    }

    /**
     * Responsable.
     */
    public function getSupervisor(): ?string
    {
        return $this->supervisor;
    }

    /**
     * Responsable.
     */
    public function setSupervisor(?string $supervisor): self
    {
        $this->initialized['supervisor'] = true;
        $this->supervisor = $supervisor;

        return $this;
    }

    /**
     * Libellé du responsable.
     */
    public function getSupervisorLabel(): ?string
    {
        return $this->supervisorLabel;
    }

    /**
     * Libellé du responsable.
     */
    public function setSupervisorLabel(?string $supervisorLabel): self
    {
        $this->initialized['supervisorLabel'] = true;
        $this->supervisorLabel = $supervisorLabel;

        return $this;
    }

    /**
     * Opération.
     */
    public function getOperation(): ?string
    {
        return $this->operation;
    }

    /**
     * Opération.
     */
    public function setOperation(?string $operation): self
    {
        $this->initialized['operation'] = true;
        $this->operation = $operation;

        return $this;
    }

    /**
     * Libellé de l'opération.
     */
    public function getOperationLabel(): ?string
    {
        return $this->operationLabel;
    }

    /**
     * Libellé de l'opération.
     */
    public function setOperationLabel(?string $operationLabel): self
    {
        $this->initialized['operationLabel'] = true;
        $this->operationLabel = $operationLabel;

        return $this;
    }

    /**
     * Numéro chainage.
     */
    public function getSequencingNumber(): ?int
    {
        return $this->sequencingNumber;
    }

    /**
     * Numéro chainage.
     */
    public function setSequencingNumber(?int $sequencingNumber): self
    {
        $this->initialized['sequencingNumber'] = true;
        $this->sequencingNumber = $sequencingNumber;

        return $this;
    }

    /**
     * Libellé du chainage.
     */
    public function getSequencingNumberLabel(): ?string
    {
        return $this->sequencingNumberLabel;
    }

    /**
     * Libellé du chainage.
     */
    public function setSequencingNumberLabel(?string $sequencingNumberLabel): self
    {
        $this->initialized['sequencingNumberLabel'] = true;
        $this->sequencingNumberLabel = $sequencingNumberLabel;

        return $this;
    }

    /**
     * Action générique.
     */
    public function getGenericAction(): ?int
    {
        return $this->genericAction;
    }

    /**
     * Action générique.
     */
    public function setGenericAction(?int $genericAction): self
    {
        $this->initialized['genericAction'] = true;
        $this->genericAction = $genericAction;

        return $this;
    }

    /**
     * Libellé de l'action générique.
     */
    public function getGenericActionLabel(): ?string
    {
        return $this->genericActionLabel;
    }

    /**
     * Libellé de l'action générique.
     */
    public function setGenericActionLabel(?string $genericActionLabel): self
    {
        $this->initialized['genericActionLabel'] = true;
        $this->genericActionLabel = $genericActionLabel;

        return $this;
    }

    /**
     * Projet.
     */
    public function getProject(): ?string
    {
        return $this->project;
    }

    /**
     * Projet.
     */
    public function setProject(?string $project): self
    {
        $this->initialized['project'] = true;
        $this->project = $project;

        return $this;
    }

    /**
     * Libellé du projet.
     */
    public function getProjectLabel(): ?string
    {
        return $this->projectLabel;
    }

    /**
     * Libellé du projet.
     */
    public function setProjectLabel(?string $projectLabel): self
    {
        $this->initialized['projectLabel'] = true;
        $this->projectLabel = $projectLabel;

        return $this;
    }

    /**
     * Date de l'action.
     */
    public function getDate(): ?\DateTime
    {
        return $this->date;
    }

    /**
     * Date de l'action.
     */
    public function setDate(?\DateTime $date): self
    {
        $this->initialized['date'] = true;
        $this->date = $date;

        return $this;
    }

    /**
     * Heure action.
     */
    public function getHour(): ?\DateTime
    {
        return $this->hour;
    }

    /**
     * Heure action.
     */
    public function setHour(?\DateTime $hour): self
    {
        $this->initialized['hour'] = true;
        $this->hour = $hour;

        return $this;
    }

    /**
     * Durée.
     */
    public function getDuration(): ?float
    {
        return $this->duration;
    }

    /**
     * Durée.
     */
    public function setDuration(?float $duration): self
    {
        $this->initialized['duration'] = true;
        $this->duration = $duration;

        return $this;
    }

    /**
     * Date et heure de début de l'action.
     */
    public function getStartDate(): ?\DateTime
    {
        return $this->startDate;
    }

    /**
     * Date et heure de début de l'action.
     */
    public function setStartDate(?\DateTime $startDate): self
    {
        $this->initialized['startDate'] = true;
        $this->startDate = $startDate;

        return $this;
    }

    /**
     * Date et heure de fin de l'action.
     */
    public function getEndDate(): ?\DateTime
    {
        return $this->endDate;
    }

    /**
     * Date et heure de fin de l'action.
     */
    public function setEndDate(?\DateTime $endDate): self
    {
        $this->initialized['endDate'] = true;
        $this->endDate = $endDate;

        return $this;
    }

    /**
     * Date d'échéance.
     */
    public function getDueDate(): ?\DateTime
    {
        return $this->dueDate;
    }

    /**
     * Date d'échéance.
     */
    public function setDueDate(?\DateTime $dueDate): self
    {
        $this->initialized['dueDate'] = true;
        $this->dueDate = $dueDate;

        return $this;
    }

    /**
     * Etat de l'action.
     */
    public function getState(): ?string
    {
        return $this->state;
    }

    /**
     * Etat de l'action.
     */
    public function setState(?string $state): self
    {
        $this->initialized['state'] = true;
        $this->state = $state;

        return $this;
    }

    /**
     * Libellé de l'état de l'action.
     */
    public function getStateLabel(): ?string
    {
        return $this->stateLabel;
    }

    /**
     * Libellé de l'état de l'action.
     */
    public function setStateLabel(?string $stateLabel): self
    {
        $this->initialized['stateLabel'] = true;
        $this->stateLabel = $stateLabel;

        return $this;
    }

    /**
     * Coût.
     */
    public function getCost(): ?float
    {
        return $this->cost;
    }

    /**
     * Coût.
     */
    public function setCost(?float $cost): self
    {
        $this->initialized['cost'] = true;
        $this->cost = $cost;

        return $this;
    }

    /**
     * Chronomètre.
     */
    public function getChronometer(): ?float
    {
        return $this->chronometer;
    }

    /**
     * Chronomètre.
     */
    public function setChronometer(?float $chronometer): self
    {
        $this->initialized['chronometer'] = true;
        $this->chronometer = $chronometer;

        return $this;
    }

    /**
     * Interlocuteur.
     */
    public function getContact(): ?int
    {
        return $this->contact;
    }

    /**
     * Interlocuteur.
     */
    public function setContact(?int $contact): self
    {
        $this->initialized['contact'] = true;
        $this->contact = $contact;

        return $this;
    }

    /**
     * Nom de l'interlocuteur.
     */
    public function getContactLabel(): ?string
    {
        return $this->contactLabel;
    }

    /**
     * Nom de l'interlocuteur.
     */
    public function setContactLabel(?string $contactLabel): self
    {
        $this->initialized['contactLabel'] = true;
        $this->contactLabel = $contactLabel;

        return $this;
    }

    /**
     * Niveau d'importance.
     */
    public function getImportanceLevel(): ?string
    {
        return $this->importanceLevel;
    }

    /**
     * Niveau d'importance.
     */
    public function setImportanceLevel(?string $importanceLevel): self
    {
        $this->initialized['importanceLevel'] = true;
        $this->importanceLevel = $importanceLevel;

        return $this;
    }

    /**
     * Libellé du niveau d'importance.
     */
    public function getImportanceLevelLabel(): ?string
    {
        return $this->importanceLevelLabel;
    }

    /**
     * Libellé du niveau d'importance.
     */
    public function setImportanceLevelLabel(?string $importanceLevelLabel): self
    {
        $this->initialized['importanceLevelLabel'] = true;
        $this->importanceLevelLabel = $importanceLevelLabel;

        return $this;
    }

    /**
     * Numéro d'opportunité.
     */
    public function getOpportunity(): ?int
    {
        return $this->opportunity;
    }

    /**
     * Numéro d'opportunité.
     */
    public function setOpportunity(?int $opportunity): self
    {
        $this->initialized['opportunity'] = true;
        $this->opportunity = $opportunity;

        return $this;
    }

    /**
     * Libellé de l'opportunité.
     */
    public function getOpportunityLabel(): ?string
    {
        return $this->opportunityLabel;
    }

    /**
     * Libellé de l'opportunité.
     */
    public function setOpportunityLabel(?string $opportunityLabel): self
    {
        $this->initialized['opportunityLabel'] = true;
        $this->opportunityLabel = $opportunityLabel;

        return $this;
    }

    /**
     * Délai de rappel.
     */
    public function getReminderPeriod(): ?string
    {
        return $this->reminderPeriod;
    }

    /**
     * Délai de rappel.
     */
    public function setReminderPeriod(?string $reminderPeriod): self
    {
        $this->initialized['reminderPeriod'] = true;
        $this->reminderPeriod = $reminderPeriod;

        return $this;
    }

    /**
     * Libellé du délai de rappel.
     */
    public function getReminderPeriodLabel(): ?string
    {
        return $this->reminderPeriodLabel;
    }

    /**
     * Libellé du délai de rappel.
     */
    public function setReminderPeriodLabel(?string $reminderPeriodLabel): self
    {
        $this->initialized['reminderPeriodLabel'] = true;
        $this->reminderPeriodLabel = $reminderPeriodLabel;

        return $this;
    }

    /**
     * Date rappel.
     */
    public function getReminderDate(): ?\DateTime
    {
        return $this->reminderDate;
    }

    /**
     * Date rappel.
     */
    public function setReminderDate(?\DateTime $reminderDate): self
    {
        $this->initialized['reminderDate'] = true;
        $this->reminderDate = $reminderDate;

        return $this;
    }

    /**
     * Type de chainage.
     */
    public function getSequencingType(): ?string
    {
        return $this->sequencingType;
    }

    /**
     * Type de chainage.
     */
    public function setSequencingType(?string $sequencingType): self
    {
        $this->initialized['sequencingType'] = true;
        $this->sequencingType = $sequencingType;

        return $this;
    }

    /**
     * Libellé du type de chainage.
     */
    public function getSequencingTypeLabel(): ?string
    {
        return $this->sequencingTypeLabel;
    }

    /**
     * Libellé du type de chainage.
     */
    public function setSequencingTypeLabel(?string $sequencingTypeLabel): self
    {
        $this->initialized['sequencingTypeLabel'] = true;
        $this->sequencingTypeLabel = $sequencingTypeLabel;

        return $this;
    }

    /**
     * N° de ligne du type de chainage.
     */
    public function getSequencingTypeLine(): ?int
    {
        return $this->sequencingTypeLine;
    }

    /**
     * N° de ligne du type de chainage.
     */
    public function setSequencingTypeLine(?int $sequencingTypeLine): self
    {
        $this->initialized['sequencingTypeLine'] = true;
        $this->sequencingTypeLine = $sequencingTypeLine;

        return $this;
    }

    /**
     * Libellé de la ligne de chainage.
     */
    public function getSequencingTypeLineLabel(): ?string
    {
        return $this->sequencingTypeLineLabel;
    }

    /**
     * Libellé de la ligne de chainage.
     */
    public function setSequencingTypeLineLabel(?string $sequencingTypeLineLabel): self
    {
        $this->initialized['sequencingTypeLineLabel'] = true;
        $this->sequencingTypeLineLabel = $sequencingTypeLineLabel;

        return $this;
    }

    /**
     * Date du dernier mail.
     */
    public function getLastEmailDate(): ?\DateTime
    {
        return $this->lastEmailDate;
    }

    /**
     * Date du dernier mail.
     */
    public function setLastEmailDate(?\DateTime $lastEmailDate): self
    {
        $this->initialized['lastEmailDate'] = true;
        $this->lastEmailDate = $lastEmailDate;

        return $this;
    }

    /**
     * Code affaire.
     */
    public function getContract(): ?string
    {
        return $this->contract;
    }

    /**
     * Code affaire.
     */
    public function setContract(?string $contract): self
    {
        $this->initialized['contract'] = true;
        $this->contract = $contract;

        return $this;
    }

    /**
     * Libellé de l'affaire.
     */
    public function getContractLabel(): ?string
    {
        return $this->contractLabel;
    }

    /**
     * Libellé de l'affaire.
     */
    public function setContractLabel(?string $contractLabel): self
    {
        $this->initialized['contractLabel'] = true;
        $this->contractLabel = $contractLabel;

        return $this;
    }

    /**
     * Partie 0 affaire.
     */
    public function getContractCodeP0(): ?string
    {
        return $this->contractCodeP0;
    }

    /**
     * Partie 0 affaire.
     */
    public function setContractCodeP0(?string $contractCodeP0): self
    {
        $this->initialized['contractCodeP0'] = true;
        $this->contractCodeP0 = $contractCodeP0;

        return $this;
    }

    /**
     * Partie 1 affaire.
     */
    public function getContractCodeP1(): ?string
    {
        return $this->contractCodeP1;
    }

    /**
     * Partie 1 affaire.
     */
    public function setContractCodeP1(?string $contractCodeP1): self
    {
        $this->initialized['contractCodeP1'] = true;
        $this->contractCodeP1 = $contractCodeP1;

        return $this;
    }

    /**
     * Partie 2 affaire.
     */
    public function getContractCodeP2(): ?string
    {
        return $this->contractCodeP2;
    }

    /**
     * Partie 2 affaire.
     */
    public function setContractCodeP2(?string $contractCodeP2): self
    {
        $this->initialized['contractCodeP2'] = true;
        $this->contractCodeP2 = $contractCodeP2;

        return $this;
    }

    /**
     * Partie 3 affaire.
     */
    public function getContractCodeP3(): ?string
    {
        return $this->contractCodeP3;
    }

    /**
     * Partie 3 affaire.
     */
    public function setContractCodeP3(?string $contractCodeP3): self
    {
        $this->initialized['contractCodeP3'] = true;
        $this->contractCodeP3 = $contractCodeP3;

        return $this;
    }

    /**
     * Code avenant.
     */
    public function getAdditionalClause(): ?string
    {
        return $this->additionalClause;
    }

    /**
     * Code avenant.
     */
    public function setAdditionalClause(?string $additionalClause): self
    {
        $this->initialized['additionalClause'] = true;
        $this->additionalClause = $additionalClause;

        return $this;
    }

    /**
     * Identifiant de l'élément parc associé.
     */
    public function getPoolElement(): ?int
    {
        return $this->poolElement;
    }

    /**
     * Identifiant de l'élément parc associé.
     */
    public function setPoolElement(?int $poolElement): self
    {
        $this->initialized['poolElement'] = true;
        $this->poolElement = $poolElement;

        return $this;
    }

    /**
     * Libellé de l'élément parc.
     */
    public function getPoolElementLabel(): ?string
    {
        return $this->poolElementLabel;
    }

    /**
     * Libellé de l'élément parc.
     */
    public function setPoolElementLabel(?string $poolElementLabel): self
    {
        $this->initialized['poolElementLabel'] = true;
        $this->poolElementLabel = $poolElementLabel;

        return $this;
    }

    /**
     * Identifiant unique.
     */
    public function getActionID(): ?int
    {
        return $this->actionID;
    }

    /**
     * Identifiant unique.
     */
    public function setActionID(?int $actionID): self
    {
        $this->initialized['actionID'] = true;
        $this->actionID = $actionID;

        return $this;
    }

    /**
     * A réaliser par.
     */
    public function getToBeCarriedOutBy(): ?string
    {
        return $this->toBeCarriedOutBy;
    }

    /**
     * A réaliser par.
     */
    public function setToBeCarriedOutBy(?string $toBeCarriedOutBy): self
    {
        $this->initialized['toBeCarriedOutBy'] = true;
        $this->toBeCarriedOutBy = $toBeCarriedOutBy;

        return $this;
    }

    /**
     * Nom du à réaliser par.
     */
    public function getToBeCarriedOutByLabel(): ?string
    {
        return $this->toBeCarriedOutByLabel;
    }

    /**
     * Nom du à réaliser par.
     */
    public function setToBeCarriedOutByLabel(?string $toBeCarriedOutByLabel): self
    {
        $this->initialized['toBeCarriedOutByLabel'] = true;
        $this->toBeCarriedOutByLabel = $toBeCarriedOutByLabel;

        return $this;
    }

    /**
     * % d'avancement de l'action.
     */
    public function getPercentProgress(): ?int
    {
        return $this->percentProgress;
    }

    /**
     * % d'avancement de l'action.
     */
    public function setPercentProgress(?int $percentProgress): self
    {
        $this->initialized['percentProgress'] = true;
        $this->percentProgress = $percentProgress;

        return $this;
    }

    /**
     * Date de réalisation.
     */
    public function getCompletionDate(): ?\DateTime
    {
        return $this->completionDate;
    }

    /**
     * Date de réalisation.
     */
    public function setCompletionDate(?\DateTime $completionDate): self
    {
        $this->initialized['completionDate'] = true;
        $this->completionDate = $completionDate;

        return $this;
    }

    /**
     * Réalisée par.
     */
    public function getAchievedBy(): ?string
    {
        return $this->achievedBy;
    }

    /**
     * Réalisée par.
     */
    public function setAchievedBy(?string $achievedBy): self
    {
        $this->initialized['achievedBy'] = true;
        $this->achievedBy = $achievedBy;

        return $this;
    }

    /**
     * Nom du réaliser par.
     */
    public function getAchievedByLabel(): ?string
    {
        return $this->achievedByLabel;
    }

    /**
     * Nom du réaliser par.
     */
    public function setAchievedByLabel(?string $achievedByLabel): self
    {
        $this->initialized['achievedByLabel'] = true;
        $this->achievedByLabel = $achievedByLabel;

        return $this;
    }

    /**
     * Ciblage.
     */
    public function getTargeting(): ?string
    {
        return $this->targeting;
    }

    /**
     * Ciblage.
     */
    public function setTargeting(?string $targeting): self
    {
        $this->initialized['targeting'] = true;
        $this->targeting = $targeting;

        return $this;
    }

    /**
     * Libellé du ciblage.
     */
    public function getTargetingLabel(): ?string
    {
        return $this->targetingLabel;
    }

    /**
     * Libellé du ciblage.
     */
    public function setTargetingLabel(?string $targetingLabel): self
    {
        $this->initialized['targetingLabel'] = true;
        $this->targetingLabel = $targetingLabel;

        return $this;
    }

    /**
     * Durée saisie.
     */
    public function getEnteredDuration(): ?float
    {
        return $this->enteredDuration;
    }

    /**
     * Durée saisie.
     */
    public function setEnteredDuration(?float $enteredDuration): self
    {
        $this->initialized['enteredDuration'] = true;
        $this->enteredDuration = $enteredDuration;

        return $this;
    }

    /**
     * Créer par.
     */
    public function getCreatedBy(): ?string
    {
        return $this->createdBy;
    }

    /**
     * Créer par.
     */
    public function setCreatedBy(?string $createdBy): self
    {
        $this->initialized['createdBy'] = true;
        $this->createdBy = $createdBy;

        return $this;
    }

    public function getCreatedByLabel(): ?string
    {
        return $this->createdByLabel;
    }

    public function setCreatedByLabel(?string $createdByLabel): self
    {
        $this->initialized['createdByLabel'] = true;
        $this->createdByLabel = $createdByLabel;

        return $this;
    }

    /**
     * Créée le.
     */
    public function getCreationDate(): ?\DateTime
    {
        return $this->creationDate;
    }

    /**
     * Créée le.
     */
    public function setCreationDate(?\DateTime $creationDate): self
    {
        $this->initialized['creationDate'] = true;
        $this->creationDate = $creationDate;

        return $this;
    }

    /**
     * Modifié par.
     */
    public function getModifiedBy(): ?string
    {
        return $this->modifiedBy;
    }

    /**
     * Modifié par.
     */
    public function setModifiedBy(?string $modifiedBy): self
    {
        $this->initialized['modifiedBy'] = true;
        $this->modifiedBy = $modifiedBy;

        return $this;
    }

    public function getModifiedByLabel(): ?string
    {
        return $this->modifiedByLabel;
    }

    public function setModifiedByLabel(?string $modifiedByLabel): self
    {
        $this->initialized['modifiedByLabel'] = true;
        $this->modifiedByLabel = $modifiedByLabel;

        return $this;
    }

    /**
     * Modifié le.
     */
    public function getModificationDate(): ?\DateTime
    {
        return $this->modificationDate;
    }

    /**
     * Modifié le.
     */
    public function setModificationDate(?\DateTime $modificationDate): self
    {
        $this->initialized['modificationDate'] = true;
        $this->modificationDate = $modificationDate;

        return $this;
    }

    /**
     * Origine création (RQQ RQN RQP).
     */
    public function getCreationOrigine()
    {
        return $this->creationOrigine;
    }

    /**
     * Origine création (RQQ RQN RQP).
     */
    public function setCreationOrigine($creationOrigine): self
    {
        $this->initialized['creationOrigine'] = true;
        $this->creationOrigine = $creationOrigine;

        return $this;
    }

    /**
     * Type d'action qualité.
     */
    public function getTypeQuality()
    {
        return $this->typeQuality;
    }

    /**
     * Type d'action qualité.
     */
    public function setTypeQuality($typeQuality): self
    {
        $this->initialized['typeQuality'] = true;
        $this->typeQuality = $typeQuality;

        return $this;
    }

    /**
     * Libellé du type d'action qualité.
     */
    public function getTypeQualityLabel()
    {
        return $this->typeQualityLabel;
    }

    /**
     * Libellé du type d'action qualité.
     */
    public function setTypeQualityLabel($typeQualityLabel): self
    {
        $this->initialized['typeQualityLabel'] = true;
        $this->typeQualityLabel = $typeQualityLabel;

        return $this;
    }

    /**
     * Localisation.
     */
    public function getLocalisation()
    {
        return $this->localisation;
    }

    /**
     * Localisation.
     */
    public function setLocalisation($localisation): self
    {
        $this->initialized['localisation'] = true;
        $this->localisation = $localisation;

        return $this;
    }

    /**
     * Libellé de la localisation.
     */
    public function getLocalisationLabel()
    {
        return $this->localisationLabel;
    }

    /**
     * Libellé de la localisation.
     */
    public function setLocalisationLabel($localisationLabel): self
    {
        $this->initialized['localisationLabel'] = true;
        $this->localisationLabel = $localisationLabel;

        return $this;
    }

    /**
     * N° de demande de dérogation.
     */
    public function getExemptionRequest()
    {
        return $this->exemptionRequest;
    }

    /**
     * N° de demande de dérogation.
     */
    public function setExemptionRequest($exemptionRequest): self
    {
        $this->initialized['exemptionRequest'] = true;
        $this->exemptionRequest = $exemptionRequest;

        return $this;
    }

    /**
     * Libellé de la demande de dérogation.
     */
    public function getExemptionRequestLabel()
    {
        return $this->exemptionRequestLabel;
    }

    /**
     * Libellé de la demande de dérogation.
     */
    public function setExemptionRequestLabel($exemptionRequestLabel): self
    {
        $this->initialized['exemptionRequestLabel'] = true;
        $this->exemptionRequestLabel = $exemptionRequestLabel;

        return $this;
    }

    /**
     * N° de plan correcteur.
     */
    public function getCorrectionPlan()
    {
        return $this->correctionPlan;
    }

    /**
     * N° de plan correcteur.
     */
    public function setCorrectionPlan($correctionPlan): self
    {
        $this->initialized['correctionPlan'] = true;
        $this->correctionPlan = $correctionPlan;

        return $this;
    }

    /**
     * Libellé du plan correcteur.
     */
    public function getCorrectionPlanLabel()
    {
        return $this->correctionPlanLabel;
    }

    /**
     * Libellé du plan correcteur.
     */
    public function setCorrectionPlanLabel($correctionPlanLabel): self
    {
        $this->initialized['correctionPlanLabel'] = true;
        $this->correctionPlanLabel = $correctionPlanLabel;

        return $this;
    }

    /**
     * N° de non conformité.
     */
    public function getNonConformity()
    {
        return $this->nonConformity;
    }

    /**
     * N° de non conformité.
     */
    public function setNonConformity($nonConformity): self
    {
        $this->initialized['nonConformity'] = true;
        $this->nonConformity = $nonConformity;

        return $this;
    }

    /**
     * Libellé de la non conformité.
     */
    public function getNonConformityLabel()
    {
        return $this->nonConformityLabel;
    }

    /**
     * Libellé de la non conformité.
     */
    public function setNonConformityLabel($nonConformityLabel): self
    {
        $this->initialized['nonConformityLabel'] = true;
        $this->nonConformityLabel = $nonConformityLabel;

        return $this;
    }

    /**
     * N° de fiche qualité.
     */
    public function getQualitySheet()
    {
        return $this->qualitySheet;
    }

    /**
     * N° de fiche qualité.
     */
    public function setQualitySheet($qualitySheet): self
    {
        $this->initialized['qualitySheet'] = true;
        $this->qualitySheet = $qualitySheet;

        return $this;
    }

    /**
     * Libellé de la fiche qualité.
     */
    public function getQualitySheetLabel()
    {
        return $this->qualitySheetLabel;
    }

    /**
     * Libellé de la fiche qualité.
     */
    public function setQualitySheetLabel($qualitySheetLabel): self
    {
        $this->initialized['qualitySheetLabel'] = true;
        $this->qualitySheetLabel = $qualitySheetLabel;

        return $this;
    }

    /**
     * Nature de travail.
     */
    public function getWorkType()
    {
        return $this->workType;
    }

    /**
     * Nature de travail.
     */
    public function setWorkType($workType): self
    {
        $this->initialized['workType'] = true;
        $this->workType = $workType;

        return $this;
    }

    public function getWorkTypeLabel()
    {
        return $this->workTypeLabel;
    }

    public function setWorkTypeLabel($workTypeLabel): self
    {
        $this->initialized['workTypeLabel'] = true;
        $this->workTypeLabel = $workTypeLabel;

        return $this;
    }

    /**
     * Ordre production.
     */
    public function getProductionOrder()
    {
        return $this->productionOrder;
    }

    /**
     * Ordre production.
     */
    public function setProductionOrder($productionOrder): self
    {
        $this->initialized['productionOrder'] = true;
        $this->productionOrder = $productionOrder;

        return $this;
    }

    /**
     * No de phase dans l'itinéraire.
     */
    public function getPhase()
    {
        return $this->phase;
    }

    /**
     * No de phase dans l'itinéraire.
     */
    public function setPhase($phase): self
    {
        $this->initialized['phase'] = true;
        $this->phase = $phase;

        return $this;
    }

    /**
     * Gamme.
     */
    public function getRouting()
    {
        return $this->routing;
    }

    /**
     * Gamme.
     */
    public function setRouting($routing): self
    {
        $this->initialized['routing'] = true;
        $this->routing = $routing;

        return $this;
    }

    /**
     * Date de vérification.
     */
    public function getVerificationDate()
    {
        return $this->verificationDate;
    }

    /**
     * Date de vérification.
     */
    public function setVerificationDate($verificationDate): self
    {
        $this->initialized['verificationDate'] = true;
        $this->verificationDate = $verificationDate;

        return $this;
    }

    /**
     * Vérifiée par.
     */
    public function getVerifiedBy()
    {
        return $this->verifiedBy;
    }

    /**
     * Vérifiée par.
     */
    public function setVerifiedBy($verifiedBy): self
    {
        $this->initialized['verifiedBy'] = true;
        $this->verifiedBy = $verifiedBy;

        return $this;
    }

    /**
     * Nom du vérifié par.
     */
    public function getVerifiedByLabel()
    {
        return $this->verifiedByLabel;
    }

    /**
     * Nom du vérifié par.
     */
    public function setVerifiedByLabel($verifiedByLabel): self
    {
        $this->initialized['verifiedByLabel'] = true;
        $this->verifiedByLabel = $verifiedByLabel;

        return $this;
    }

    /**
     * Efficacité de l'action.
     */
    public function getEfficiency()
    {
        return $this->efficiency;
    }

    /**
     * Efficacité de l'action.
     */
    public function setEfficiency($efficiency): self
    {
        $this->initialized['efficiency'] = true;
        $this->efficiency = $efficiency;

        return $this;
    }

    /**
     * Libellé de l'efficacité.
     */
    public function getEfficiencyLabel()
    {
        return $this->efficiencyLabel;
    }

    /**
     * Libellé de l'efficacité.
     */
    public function setEfficiencyLabel($efficiencyLabel): self
    {
        $this->initialized['efficiencyLabel'] = true;
        $this->efficiencyLabel = $efficiencyLabel;

        return $this;
    }

    /**
     * Date de jugement.
     */
    public function getJudgementDate()
    {
        return $this->judgementDate;
    }

    /**
     * Date de jugement.
     */
    public function setJudgementDate($judgementDate): self
    {
        $this->initialized['judgementDate'] = true;
        $this->judgementDate = $judgementDate;

        return $this;
    }

    /**
     * Jugée par.
     */
    public function getJudgedBy()
    {
        return $this->judgedBy;
    }

    /**
     * Jugée par.
     */
    public function setJudgedBy($judgedBy): self
    {
        $this->initialized['judgedBy'] = true;
        $this->judgedBy = $judgedBy;

        return $this;
    }

    /**
     * Nom du jugé par.
     */
    public function getJudgedByLabel()
    {
        return $this->judgedByLabel;
    }

    /**
     * Nom du jugé par.
     */
    public function setJudgedByLabel($judgedByLabel): self
    {
        $this->initialized['judgedByLabel'] = true;
        $this->judgedByLabel = $judgedByLabel;

        return $this;
    }

    /**
     * Date de clôture.
     */
    public function getClosingDate()
    {
        return $this->closingDate;
    }

    /**
     * Date de clôture.
     */
    public function setClosingDate($closingDate): self
    {
        $this->initialized['closingDate'] = true;
        $this->closingDate = $closingDate;

        return $this;
    }

    /**
     * Clôturée par.
     */
    public function getClosedBy()
    {
        return $this->closedBy;
    }

    /**
     * Clôturée par.
     */
    public function setClosedBy($closedBy): self
    {
        $this->initialized['closedBy'] = true;
        $this->closedBy = $closedBy;

        return $this;
    }

    /**
     * Nom du clôturé par.
     */
    public function getClosedByLabel()
    {
        return $this->closedByLabel;
    }

    /**
     * Nom du clôturé par.
     */
    public function setClosedByLabel($closedByLabel): self
    {
        $this->initialized['closedByLabel'] = true;
        $this->closedByLabel = $closedByLabel;

        return $this;
    }

    /**
     * Pièce d'origine.
     */
    public function getDocument()
    {
        return $this->document;
    }

    /**
     * Pièce d'origine.
     */
    public function setDocument($document): self
    {
        $this->initialized['document'] = true;
        $this->document = $document;

        return $this;
    }

    /**
     * Code Article.
     */
    public function getItemCode()
    {
        return $this->itemCode;
    }

    /**
     * Code Article.
     */
    public function setItemCode($itemCode): self
    {
        $this->initialized['itemCode'] = true;
        $this->itemCode = $itemCode;

        return $this;
    }

    /**
     * Identifiant article.
     */
    public function getItem()
    {
        return $this->item;
    }

    /**
     * Identifiant article.
     */
    public function setItem($item): self
    {
        $this->initialized['item'] = true;
        $this->item = $item;

        return $this;
    }

    /**
     * Libellé de l'article.
     */
    public function getItemLabel()
    {
        return $this->itemLabel;
    }

    /**
     * Libellé de l'article.
     */
    public function setItemLabel($itemLabel): self
    {
        $this->initialized['itemLabel'] = true;
        $this->itemLabel = $itemLabel;

        return $this;
    }

    /**
     * Code ressource.
     */
    public function getRessource()
    {
        return $this->ressource;
    }

    /**
     * Code ressource.
     */
    public function setRessource($ressource): self
    {
        $this->initialized['ressource'] = true;
        $this->ressource = $ressource;

        return $this;
    }

    /**
     * Libellé de la ressource.
     */
    public function getRessourceLabel()
    {
        return $this->ressourceLabel;
    }

    /**
     * Libellé de la ressource.
     */
    public function setRessourceLabel($ressourceLabel): self
    {
        $this->initialized['ressourceLabel'] = true;
        $this->ressourceLabel = $ressourceLabel;

        return $this;
    }

    /**
     * Code famille ressource.
     */
    public function getRessourceFamily()
    {
        return $this->ressourceFamily;
    }

    /**
     * Code famille ressource.
     */
    public function setRessourceFamily($ressourceFamily): self
    {
        $this->initialized['ressourceFamily'] = true;
        $this->ressourceFamily = $ressourceFamily;

        return $this;
    }

    /**
     * Libellé de la famille de ressource.
     */
    public function getRessourceFamilyLabel()
    {
        return $this->ressourceFamilyLabel;
    }

    /**
     * Libellé de la famille de ressource.
     */
    public function setRessourceFamilyLabel($ressourceFamilyLabel): self
    {
        $this->initialized['ressourceFamilyLabel'] = true;
        $this->ressourceFamilyLabel = $ressourceFamilyLabel;

        return $this;
    }

    /**
     * Unité de temps.
     */
    public function getTimeUnit()
    {
        return $this->timeUnit;
    }

    /**
     * Unité de temps.
     */
    public function setTimeUnit($timeUnit): self
    {
        $this->initialized['timeUnit'] = true;
        $this->timeUnit = $timeUnit;

        return $this;
    }

    /**
     * Libellé de l'unité de temps.
     */
    public function getTimeUnitLabel()
    {
        return $this->timeUnitLabel;
    }

    /**
     * Libellé de l'unité de temps.
     */
    public function setTimeUnitLabel($timeUnitLabel): self
    {
        $this->initialized['timeUnitLabel'] = true;
        $this->timeUnitLabel = $timeUnitLabel;

        return $this;
    }
}
