<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Cegid\Api\Model;

class MicrosoftODataEdmIEdmNavigationProperty
{
    /**
     * @var array
     */
    protected $initialized = [];

    public function isInitialized($property): bool
    {
        return array_key_exists($property, $this->initialized);
    }
    /**
     * @var MicrosoftODataEdmIEdmNavigationProperty|null
     */
    protected $partner;
    /**
     * @var string|null
     */
    protected $onDelete;
    /**
     * @var bool|null
     */
    protected $containsTarget;
    /**
     * @var MicrosoftODataEdmIEdmReferentialConstraint|null
     */
    protected $referentialConstraint;
    /**
     * @var string|null
     */
    protected $propertyKind;
    /**
     * @var MicrosoftODataEdmIEdmTypeReference|null
     */
    protected $type;
    /**
     * @var MicrosoftODataEdmIEdmStructuredType|null
     */
    protected $declaringType;
    /**
     * @var string|null
     */
    protected $name;

    public function getPartner(): ?self
    {
        return $this->partner;
    }

    public function setPartner(?self $partner): self
    {
        $this->initialized['partner'] = true;
        $this->partner = $partner;

        return $this;
    }

    public function getOnDelete(): ?string
    {
        return $this->onDelete;
    }

    public function setOnDelete(?string $onDelete): self
    {
        $this->initialized['onDelete'] = true;
        $this->onDelete = $onDelete;

        return $this;
    }

    public function getContainsTarget(): ?bool
    {
        return $this->containsTarget;
    }

    public function setContainsTarget(?bool $containsTarget): self
    {
        $this->initialized['containsTarget'] = true;
        $this->containsTarget = $containsTarget;

        return $this;
    }

    public function getReferentialConstraint(): ?MicrosoftODataEdmIEdmReferentialConstraint
    {
        return $this->referentialConstraint;
    }

    public function setReferentialConstraint(?MicrosoftODataEdmIEdmReferentialConstraint $referentialConstraint): self
    {
        $this->initialized['referentialConstraint'] = true;
        $this->referentialConstraint = $referentialConstraint;

        return $this;
    }

    public function getPropertyKind(): ?string
    {
        return $this->propertyKind;
    }

    public function setPropertyKind(?string $propertyKind): self
    {
        $this->initialized['propertyKind'] = true;
        $this->propertyKind = $propertyKind;

        return $this;
    }

    public function getType(): ?MicrosoftODataEdmIEdmTypeReference
    {
        return $this->type;
    }

    public function setType(?MicrosoftODataEdmIEdmTypeReference $type): self
    {
        $this->initialized['type'] = true;
        $this->type = $type;

        return $this;
    }

    public function getDeclaringType(): ?MicrosoftODataEdmIEdmStructuredType
    {
        return $this->declaringType;
    }

    public function setDeclaringType(?MicrosoftODataEdmIEdmStructuredType $declaringType): self
    {
        $this->initialized['declaringType'] = true;
        $this->declaringType = $declaringType;

        return $this;
    }

    public function getName(): ?string
    {
        return $this->name;
    }

    public function setName(?string $name): self
    {
        $this->initialized['name'] = true;
        $this->name = $name;

        return $this;
    }
}
