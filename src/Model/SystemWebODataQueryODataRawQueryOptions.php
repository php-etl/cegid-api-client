<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Cegid\Api\Model;

class SystemWebODataQueryODataRawQueryOptions
{
    /**
     * @var array
     */
    protected $initialized = [];

    public function isInitialized($property): bool
    {
        return array_key_exists($property, $this->initialized);
    }
    /**
     * @var string|null
     */
    protected $filter;
    /**
     * @var string|null
     */
    protected $apply;
    /**
     * @var string|null
     */
    protected $orderBy;
    /**
     * @var string|null
     */
    protected $top;
    /**
     * @var string|null
     */
    protected $skip;
    /**
     * @var string|null
     */
    protected $select;
    /**
     * @var string|null
     */
    protected $expand;
    /**
     * @var string|null
     */
    protected $count;
    /**
     * @var string|null
     */
    protected $format;
    /**
     * @var string|null
     */
    protected $skipToken;
    /**
     * @var string|null
     */
    protected $deltaToken;

    public function getFilter(): ?string
    {
        return $this->filter;
    }

    public function setFilter(?string $filter): self
    {
        $this->initialized['filter'] = true;
        $this->filter = $filter;

        return $this;
    }

    public function getApply(): ?string
    {
        return $this->apply;
    }

    public function setApply(?string $apply): self
    {
        $this->initialized['apply'] = true;
        $this->apply = $apply;

        return $this;
    }

    public function getOrderBy(): ?string
    {
        return $this->orderBy;
    }

    public function setOrderBy(?string $orderBy): self
    {
        $this->initialized['orderBy'] = true;
        $this->orderBy = $orderBy;

        return $this;
    }

    public function getTop(): ?string
    {
        return $this->top;
    }

    public function setTop(?string $top): self
    {
        $this->initialized['top'] = true;
        $this->top = $top;

        return $this;
    }

    public function getSkip(): ?string
    {
        return $this->skip;
    }

    public function setSkip(?string $skip): self
    {
        $this->initialized['skip'] = true;
        $this->skip = $skip;

        return $this;
    }

    public function getSelect(): ?string
    {
        return $this->select;
    }

    public function setSelect(?string $select): self
    {
        $this->initialized['select'] = true;
        $this->select = $select;

        return $this;
    }

    public function getExpand(): ?string
    {
        return $this->expand;
    }

    public function setExpand(?string $expand): self
    {
        $this->initialized['expand'] = true;
        $this->expand = $expand;

        return $this;
    }

    public function getCount(): ?string
    {
        return $this->count;
    }

    public function setCount(?string $count): self
    {
        $this->initialized['count'] = true;
        $this->count = $count;

        return $this;
    }

    public function getFormat(): ?string
    {
        return $this->format;
    }

    public function setFormat(?string $format): self
    {
        $this->initialized['format'] = true;
        $this->format = $format;

        return $this;
    }

    public function getSkipToken(): ?string
    {
        return $this->skipToken;
    }

    public function setSkipToken(?string $skipToken): self
    {
        $this->initialized['skipToken'] = true;
        $this->skipToken = $skipToken;

        return $this;
    }

    public function getDeltaToken(): ?string
    {
        return $this->deltaToken;
    }

    public function setDeltaToken(?string $deltaToken): self
    {
        $this->initialized['deltaToken'] = true;
        $this->deltaToken = $deltaToken;

        return $this;
    }
}
