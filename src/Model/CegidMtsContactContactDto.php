<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Cegid\Api\Model;

class CegidMtsContactContactDto
{
    /**
     * @var array
     */
    protected $initialized = [];

    public function isInitialized($property): bool
    {
        return array_key_exists($property, $this->initialized);
    }
    /**
     * N° du contact.
     *
     * @var int|null
     */
    protected $contactNumber;
    /**
     * Type de contact.
     *
     * @var string|null
     */
    protected $contactType;
    /**
     * Code de l'entité à laquelle le contact est associé (code du tiers, code du commercial, code de l'établissement, code du dépôt).
     *
     * @var string|null
     */
    protected $referenceCode;
    /**
     * Contact principal.
     *
     * @var bool|null
     */
    protected $mainContact;
    /**
     * E-mail.
     *
     * @var string|null
     */
    protected $email;
    /**
     * Prénom.
     *
     * @var string|null
     */
    protected $firstName;
    /**
     * Sexe.
     *
     * @var string|null
     */
    protected $gender;
    /**
     * Nom.
     *
     * @var string|null
     */
    protected $name;
    /**
     * Téléphone N° 1.
     *
     * @var string|null
     */
    protected $phoneNumber;
    /**
     * Téléphone N° 2.
     *
     * @var string|null
     */
    protected $cellPhoneNumber;
    /**
     * Fermé.
     *
     * @var bool|null
     */
    protected $closed;
    /**
     * Fonction codée.
     *
     * @var string|null
     */
    protected $encodedFunction;
    /**
     * Fonction.
     *
     * @var string|null
     */
    protected $function;
    /**
     * Code service.
     *
     * @var string|null
     */
    protected $serviceCode;
    /**
     * Service.
     *
     * @var string|null
     */
    protected $service;
    /**
     * Date de naissance.
     *
     * @var \DateTime|null
     */
    protected $birth;
    /**
     * Civilité.
     *
     * @var string|null
     */
    protected $civility;
    /**
     * Numéro de l'adresse du tiers.
     *
     * @var int|null
     */
    protected $defaultAddressNumber;
    /**
     * Champs systèmes.
     *
     * @var CegidMtsErpDataSystemFields|null
     */
    protected $trackingFields;
    /**
     * Commentaire.
     *
     * @var string|null
     */
    protected $notepad;
    /**
     * Fax.
     *
     * @var string|null
     */
    protected $faxNumber;
    /**
     * Informations libres avec au maximum 3 Booléens, 3 Chaines, 3 Dates, 3 Décimaux, 10 Choix, 5 Multichoix.
     *
     * @var CegidMtsContactContactUserDefinedData|null
     */
    protected $userDefinedValues;
    /**
     * Informations complémentaires avec au maximum 5 Booléens, 5 Chaines, 5 Dates, 5 Décimaux, 5 Choix, 5 Multichoix.
     *
     * @var CegidMtsContactAdditionalContactUserDefinedData|null
     */
    protected $additionalUserDefinedValues;
    /**
     * Type de contact.
     *
     * @var mixed|null
     */
    protected $type;

    /**
     * N° du contact.
     */
    public function getContactNumber(): ?int
    {
        return $this->contactNumber;
    }

    /**
     * N° du contact.
     */
    public function setContactNumber(?int $contactNumber): self
    {
        $this->initialized['contactNumber'] = true;
        $this->contactNumber = $contactNumber;

        return $this;
    }

    /**
     * Type de contact.
     */
    public function getContactType(): ?string
    {
        return $this->contactType;
    }

    /**
     * Type de contact.
     */
    public function setContactType(?string $contactType): self
    {
        $this->initialized['contactType'] = true;
        $this->contactType = $contactType;

        return $this;
    }

    /**
     * Code de l'entité à laquelle le contact est associé (code du tiers, code du commercial, code de l'établissement, code du dépôt).
     */
    public function getReferenceCode(): ?string
    {
        return $this->referenceCode;
    }

    /**
     * Code de l'entité à laquelle le contact est associé (code du tiers, code du commercial, code de l'établissement, code du dépôt).
     */
    public function setReferenceCode(?string $referenceCode): self
    {
        $this->initialized['referenceCode'] = true;
        $this->referenceCode = $referenceCode;

        return $this;
    }

    /**
     * Contact principal.
     */
    public function getMainContact(): ?bool
    {
        return $this->mainContact;
    }

    /**
     * Contact principal.
     */
    public function setMainContact(?bool $mainContact): self
    {
        $this->initialized['mainContact'] = true;
        $this->mainContact = $mainContact;

        return $this;
    }

    /**
     * E-mail.
     */
    public function getEmail(): ?string
    {
        return $this->email;
    }

    /**
     * E-mail.
     */
    public function setEmail(?string $email): self
    {
        $this->initialized['email'] = true;
        $this->email = $email;

        return $this;
    }

    /**
     * Prénom.
     */
    public function getFirstName(): ?string
    {
        return $this->firstName;
    }

    /**
     * Prénom.
     */
    public function setFirstName(?string $firstName): self
    {
        $this->initialized['firstName'] = true;
        $this->firstName = $firstName;

        return $this;
    }

    /**
     * Sexe.
     */
    public function getGender(): ?string
    {
        return $this->gender;
    }

    /**
     * Sexe.
     */
    public function setGender(?string $gender): self
    {
        $this->initialized['gender'] = true;
        $this->gender = $gender;

        return $this;
    }

    /**
     * Nom.
     */
    public function getName(): ?string
    {
        return $this->name;
    }

    /**
     * Nom.
     */
    public function setName(?string $name): self
    {
        $this->initialized['name'] = true;
        $this->name = $name;

        return $this;
    }

    /**
     * Téléphone N° 1.
     */
    public function getPhoneNumber(): ?string
    {
        return $this->phoneNumber;
    }

    /**
     * Téléphone N° 1.
     */
    public function setPhoneNumber(?string $phoneNumber): self
    {
        $this->initialized['phoneNumber'] = true;
        $this->phoneNumber = $phoneNumber;

        return $this;
    }

    /**
     * Téléphone N° 2.
     */
    public function getCellPhoneNumber(): ?string
    {
        return $this->cellPhoneNumber;
    }

    /**
     * Téléphone N° 2.
     */
    public function setCellPhoneNumber(?string $cellPhoneNumber): self
    {
        $this->initialized['cellPhoneNumber'] = true;
        $this->cellPhoneNumber = $cellPhoneNumber;

        return $this;
    }

    /**
     * Fermé.
     */
    public function getClosed(): ?bool
    {
        return $this->closed;
    }

    /**
     * Fermé.
     */
    public function setClosed(?bool $closed): self
    {
        $this->initialized['closed'] = true;
        $this->closed = $closed;

        return $this;
    }

    /**
     * Fonction codée.
     */
    public function getEncodedFunction(): ?string
    {
        return $this->encodedFunction;
    }

    /**
     * Fonction codée.
     */
    public function setEncodedFunction(?string $encodedFunction): self
    {
        $this->initialized['encodedFunction'] = true;
        $this->encodedFunction = $encodedFunction;

        return $this;
    }

    /**
     * Fonction.
     */
    public function getFunction(): ?string
    {
        return $this->function;
    }

    /**
     * Fonction.
     */
    public function setFunction(?string $function): self
    {
        $this->initialized['function'] = true;
        $this->function = $function;

        return $this;
    }

    /**
     * Code service.
     */
    public function getServiceCode(): ?string
    {
        return $this->serviceCode;
    }

    /**
     * Code service.
     */
    public function setServiceCode(?string $serviceCode): self
    {
        $this->initialized['serviceCode'] = true;
        $this->serviceCode = $serviceCode;

        return $this;
    }

    /**
     * Service.
     */
    public function getService(): ?string
    {
        return $this->service;
    }

    /**
     * Service.
     */
    public function setService(?string $service): self
    {
        $this->initialized['service'] = true;
        $this->service = $service;

        return $this;
    }

    /**
     * Date de naissance.
     */
    public function getBirth(): ?\DateTime
    {
        return $this->birth;
    }

    /**
     * Date de naissance.
     */
    public function setBirth(?\DateTime $birth): self
    {
        $this->initialized['birth'] = true;
        $this->birth = $birth;

        return $this;
    }

    /**
     * Civilité.
     */
    public function getCivility(): ?string
    {
        return $this->civility;
    }

    /**
     * Civilité.
     */
    public function setCivility(?string $civility): self
    {
        $this->initialized['civility'] = true;
        $this->civility = $civility;

        return $this;
    }

    /**
     * Numéro de l'adresse du tiers.
     */
    public function getDefaultAddressNumber(): ?int
    {
        return $this->defaultAddressNumber;
    }

    /**
     * Numéro de l'adresse du tiers.
     */
    public function setDefaultAddressNumber(?int $defaultAddressNumber): self
    {
        $this->initialized['defaultAddressNumber'] = true;
        $this->defaultAddressNumber = $defaultAddressNumber;

        return $this;
    }

    /**
     * Champs systèmes.
     */
    public function getTrackingFields(): ?CegidMtsErpDataSystemFields
    {
        return $this->trackingFields;
    }

    /**
     * Champs systèmes.
     */
    public function setTrackingFields(?CegidMtsErpDataSystemFields $trackingFields): self
    {
        $this->initialized['trackingFields'] = true;
        $this->trackingFields = $trackingFields;

        return $this;
    }

    /**
     * Commentaire.
     */
    public function getNotepad(): ?string
    {
        return $this->notepad;
    }

    /**
     * Commentaire.
     */
    public function setNotepad(?string $notepad): self
    {
        $this->initialized['notepad'] = true;
        $this->notepad = $notepad;

        return $this;
    }

    /**
     * Fax.
     */
    public function getFaxNumber(): ?string
    {
        return $this->faxNumber;
    }

    /**
     * Fax.
     */
    public function setFaxNumber(?string $faxNumber): self
    {
        $this->initialized['faxNumber'] = true;
        $this->faxNumber = $faxNumber;

        return $this;
    }

    /**
     * Informations libres avec au maximum 3 Booléens, 3 Chaines, 3 Dates, 3 Décimaux, 10 Choix, 5 Multichoix.
     */
    public function getUserDefinedValues(): ?CegidMtsContactContactUserDefinedData
    {
        return $this->userDefinedValues;
    }

    /**
     * Informations libres avec au maximum 3 Booléens, 3 Chaines, 3 Dates, 3 Décimaux, 10 Choix, 5 Multichoix.
     */
    public function setUserDefinedValues(?CegidMtsContactContactUserDefinedData $userDefinedValues): self
    {
        $this->initialized['userDefinedValues'] = true;
        $this->userDefinedValues = $userDefinedValues;

        return $this;
    }

    /**
     * Informations complémentaires avec au maximum 5 Booléens, 5 Chaines, 5 Dates, 5 Décimaux, 5 Choix, 5 Multichoix.
     */
    public function getAdditionalUserDefinedValues(): ?CegidMtsContactAdditionalContactUserDefinedData
    {
        return $this->additionalUserDefinedValues;
    }

    /**
     * Informations complémentaires avec au maximum 5 Booléens, 5 Chaines, 5 Dates, 5 Décimaux, 5 Choix, 5 Multichoix.
     */
    public function setAdditionalUserDefinedValues(?CegidMtsContactAdditionalContactUserDefinedData $additionalUserDefinedValues): self
    {
        $this->initialized['additionalUserDefinedValues'] = true;
        $this->additionalUserDefinedValues = $additionalUserDefinedValues;

        return $this;
    }

    /**
     * Type de contact.
     */
    public function getType()
    {
        return $this->type;
    }

    /**
     * Type de contact.
     */
    public function setType($type): self
    {
        $this->initialized['type'] = true;
        $this->type = $type;

        return $this;
    }
}
