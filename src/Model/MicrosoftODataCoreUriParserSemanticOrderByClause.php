<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Cegid\Api\Model;

class MicrosoftODataCoreUriParserSemanticOrderByClause
{
    /**
     * @var array
     */
    protected $initialized = [];

    public function isInitialized($property): bool
    {
        return array_key_exists($property, $this->initialized);
    }
    /**
     * @var MicrosoftODataCoreUriParserSemanticOrderByClause|null
     */
    protected $thenBy;
    /**
     * @var MicrosoftODataCoreUriParserSemanticSingleValueNode|null
     */
    protected $expression;
    /**
     * @var string|null
     */
    protected $direction;
    /**
     * @var MicrosoftODataCoreUriParserSemanticRangeVariable|null
     */
    protected $rangeVariable;
    /**
     * @var MicrosoftODataEdmIEdmTypeReference|null
     */
    protected $itemType;

    public function getThenBy(): ?self
    {
        return $this->thenBy;
    }

    public function setThenBy(?self $thenBy): self
    {
        $this->initialized['thenBy'] = true;
        $this->thenBy = $thenBy;

        return $this;
    }

    public function getExpression(): ?MicrosoftODataCoreUriParserSemanticSingleValueNode
    {
        return $this->expression;
    }

    public function setExpression(?MicrosoftODataCoreUriParserSemanticSingleValueNode $expression): self
    {
        $this->initialized['expression'] = true;
        $this->expression = $expression;

        return $this;
    }

    public function getDirection(): ?string
    {
        return $this->direction;
    }

    public function setDirection(?string $direction): self
    {
        $this->initialized['direction'] = true;
        $this->direction = $direction;

        return $this;
    }

    public function getRangeVariable(): ?MicrosoftODataCoreUriParserSemanticRangeVariable
    {
        return $this->rangeVariable;
    }

    public function setRangeVariable(?MicrosoftODataCoreUriParserSemanticRangeVariable $rangeVariable): self
    {
        $this->initialized['rangeVariable'] = true;
        $this->rangeVariable = $rangeVariable;

        return $this;
    }

    public function getItemType(): ?MicrosoftODataEdmIEdmTypeReference
    {
        return $this->itemType;
    }

    public function setItemType(?MicrosoftODataEdmIEdmTypeReference $itemType): self
    {
        $this->initialized['itemType'] = true;
        $this->itemType = $itemType;

        return $this;
    }
}
