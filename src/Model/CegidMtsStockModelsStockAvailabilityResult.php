<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Cegid\Api\Model;

class CegidMtsStockModelsStockAvailabilityResult
{
    /**
     * @var array
     */
    protected $initialized = [];

    public function isInitialized($property): bool
    {
        return array_key_exists($property, $this->initialized);
    }
    /**
     * Dépôt.
     *
     * @var string|null
     */
    protected $warehouse;
    /**
     * Article.
     *
     * @var string|null
     */
    protected $productId;
    /**
     * Quantité physique.
     *
     * @var float|null
     */
    protected $physicalQuantity;
    /**
     * Quantité réservée.
     *
     * @var float|null
     */
    protected $reservedQuantity;
    /**
     * Quantité attendue.
     *
     * @var float|null
     */
    protected $expectedQuantity;
    /**
     * Quantité prévue.
     *
     * @var float|null
     */
    protected $deliveryPreparationQuantity;
    /**
     * Quantité initiale.
     *
     * @var float|null
     */
    protected $initialStock;
    /**
     * Quantité bloquée.
     *
     * @var float|null
     */
    protected $blockedQuantity;
    /**
     * Quantité affectée.
     *
     * @var float|null
     */
    protected $assignedQuantity;
    /**
     * Quantité réservée non affectée.
     *
     * @var float|null
     */
    protected $reservedQuantityNotAssigned;
    /**
     * Quantité périmée.
     *
     * @var float|null
     */
    protected $expiredQuantity;
    /**
     * Quantité en garde.
     *
     * @var float|null
     */
    protected $keptQuantity;
    /**
     * Quantité physique nette.
     *
     * @var float|null
     */
    protected $netPhysicalQuantity;
    /**
     * Quantité disponible brute.
     *
     * @var float|null
     */
    protected $grossAvailableQuantity;
    /**
     * Quantité disponible nette.
     *
     * @var float|null
     */
    protected $netAvailableQuantity;
    /**
     * Quantité projetée absolue.
     *
     * @var float|null
     */
    protected $absoluteProjectedQuantity;
    /**
     * Quantité manquante.
     *
     * @var float|null
     */
    protected $missingQuantity;

    /**
     * Dépôt.
     */
    public function getWarehouse(): ?string
    {
        return $this->warehouse;
    }

    /**
     * Dépôt.
     */
    public function setWarehouse(?string $warehouse): self
    {
        $this->initialized['warehouse'] = true;
        $this->warehouse = $warehouse;

        return $this;
    }

    /**
     * Article.
     */
    public function getProductId(): ?string
    {
        return $this->productId;
    }

    /**
     * Article.
     */
    public function setProductId(?string $productId): self
    {
        $this->initialized['productId'] = true;
        $this->productId = $productId;

        return $this;
    }

    /**
     * Quantité physique.
     */
    public function getPhysicalQuantity(): ?float
    {
        return $this->physicalQuantity;
    }

    /**
     * Quantité physique.
     */
    public function setPhysicalQuantity(?float $physicalQuantity): self
    {
        $this->initialized['physicalQuantity'] = true;
        $this->physicalQuantity = $physicalQuantity;

        return $this;
    }

    /**
     * Quantité réservée.
     */
    public function getReservedQuantity(): ?float
    {
        return $this->reservedQuantity;
    }

    /**
     * Quantité réservée.
     */
    public function setReservedQuantity(?float $reservedQuantity): self
    {
        $this->initialized['reservedQuantity'] = true;
        $this->reservedQuantity = $reservedQuantity;

        return $this;
    }

    /**
     * Quantité attendue.
     */
    public function getExpectedQuantity(): ?float
    {
        return $this->expectedQuantity;
    }

    /**
     * Quantité attendue.
     */
    public function setExpectedQuantity(?float $expectedQuantity): self
    {
        $this->initialized['expectedQuantity'] = true;
        $this->expectedQuantity = $expectedQuantity;

        return $this;
    }

    /**
     * Quantité prévue.
     */
    public function getDeliveryPreparationQuantity(): ?float
    {
        return $this->deliveryPreparationQuantity;
    }

    /**
     * Quantité prévue.
     */
    public function setDeliveryPreparationQuantity(?float $deliveryPreparationQuantity): self
    {
        $this->initialized['deliveryPreparationQuantity'] = true;
        $this->deliveryPreparationQuantity = $deliveryPreparationQuantity;

        return $this;
    }

    /**
     * Quantité initiale.
     */
    public function getInitialStock(): ?float
    {
        return $this->initialStock;
    }

    /**
     * Quantité initiale.
     */
    public function setInitialStock(?float $initialStock): self
    {
        $this->initialized['initialStock'] = true;
        $this->initialStock = $initialStock;

        return $this;
    }

    /**
     * Quantité bloquée.
     */
    public function getBlockedQuantity(): ?float
    {
        return $this->blockedQuantity;
    }

    /**
     * Quantité bloquée.
     */
    public function setBlockedQuantity(?float $blockedQuantity): self
    {
        $this->initialized['blockedQuantity'] = true;
        $this->blockedQuantity = $blockedQuantity;

        return $this;
    }

    /**
     * Quantité affectée.
     */
    public function getAssignedQuantity(): ?float
    {
        return $this->assignedQuantity;
    }

    /**
     * Quantité affectée.
     */
    public function setAssignedQuantity(?float $assignedQuantity): self
    {
        $this->initialized['assignedQuantity'] = true;
        $this->assignedQuantity = $assignedQuantity;

        return $this;
    }

    /**
     * Quantité réservée non affectée.
     */
    public function getReservedQuantityNotAssigned(): ?float
    {
        return $this->reservedQuantityNotAssigned;
    }

    /**
     * Quantité réservée non affectée.
     */
    public function setReservedQuantityNotAssigned(?float $reservedQuantityNotAssigned): self
    {
        $this->initialized['reservedQuantityNotAssigned'] = true;
        $this->reservedQuantityNotAssigned = $reservedQuantityNotAssigned;

        return $this;
    }

    /**
     * Quantité périmée.
     */
    public function getExpiredQuantity(): ?float
    {
        return $this->expiredQuantity;
    }

    /**
     * Quantité périmée.
     */
    public function setExpiredQuantity(?float $expiredQuantity): self
    {
        $this->initialized['expiredQuantity'] = true;
        $this->expiredQuantity = $expiredQuantity;

        return $this;
    }

    /**
     * Quantité en garde.
     */
    public function getKeptQuantity(): ?float
    {
        return $this->keptQuantity;
    }

    /**
     * Quantité en garde.
     */
    public function setKeptQuantity(?float $keptQuantity): self
    {
        $this->initialized['keptQuantity'] = true;
        $this->keptQuantity = $keptQuantity;

        return $this;
    }

    /**
     * Quantité physique nette.
     */
    public function getNetPhysicalQuantity(): ?float
    {
        return $this->netPhysicalQuantity;
    }

    /**
     * Quantité physique nette.
     */
    public function setNetPhysicalQuantity(?float $netPhysicalQuantity): self
    {
        $this->initialized['netPhysicalQuantity'] = true;
        $this->netPhysicalQuantity = $netPhysicalQuantity;

        return $this;
    }

    /**
     * Quantité disponible brute.
     */
    public function getGrossAvailableQuantity(): ?float
    {
        return $this->grossAvailableQuantity;
    }

    /**
     * Quantité disponible brute.
     */
    public function setGrossAvailableQuantity(?float $grossAvailableQuantity): self
    {
        $this->initialized['grossAvailableQuantity'] = true;
        $this->grossAvailableQuantity = $grossAvailableQuantity;

        return $this;
    }

    /**
     * Quantité disponible nette.
     */
    public function getNetAvailableQuantity(): ?float
    {
        return $this->netAvailableQuantity;
    }

    /**
     * Quantité disponible nette.
     */
    public function setNetAvailableQuantity(?float $netAvailableQuantity): self
    {
        $this->initialized['netAvailableQuantity'] = true;
        $this->netAvailableQuantity = $netAvailableQuantity;

        return $this;
    }

    /**
     * Quantité projetée absolue.
     */
    public function getAbsoluteProjectedQuantity(): ?float
    {
        return $this->absoluteProjectedQuantity;
    }

    /**
     * Quantité projetée absolue.
     */
    public function setAbsoluteProjectedQuantity(?float $absoluteProjectedQuantity): self
    {
        $this->initialized['absoluteProjectedQuantity'] = true;
        $this->absoluteProjectedQuantity = $absoluteProjectedQuantity;

        return $this;
    }

    /**
     * Quantité manquante.
     */
    public function getMissingQuantity(): ?float
    {
        return $this->missingQuantity;
    }

    /**
     * Quantité manquante.
     */
    public function setMissingQuantity(?float $missingQuantity): self
    {
        $this->initialized['missingQuantity'] = true;
        $this->missingQuantity = $missingQuantity;

        return $this;
    }
}
