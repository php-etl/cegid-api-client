<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Cegid\Api\Model;

class CegidMtsThirdPartyOutstandingOutstandingData
{
    /**
     * @var array
     */
    protected $initialized = [];

    public function isInitialized($property): bool
    {
        return array_key_exists($property, $this->initialized);
    }
    /**
     * Montants des encours commerciaux et comptables.
     *
     * @var CegidMtsThirdPartyOutstandingOutstandingAmounts|null
     */
    protected $amountsDetail;
    /**
     * Montant total du risque.
     *
     * @var float|null
     */
    protected $riskAmount;
    /**
     * Etat du risque.
     *
     * @var string|null
     */
    protected $riskState;
    /**
     * Crédit demandé.
     *
     * @var float|null
     */
    protected $requested;
    /**
     * Crédit autorisé.
     *
     * @var float|null
     */
    protected $allowed;
    /**
     * Plafond autorisé.
     *
     * @var float|null
     */
    protected $maximum;

    /**
     * Montants des encours commerciaux et comptables.
     */
    public function getAmountsDetail(): ?CegidMtsThirdPartyOutstandingOutstandingAmounts
    {
        return $this->amountsDetail;
    }

    /**
     * Montants des encours commerciaux et comptables.
     */
    public function setAmountsDetail(?CegidMtsThirdPartyOutstandingOutstandingAmounts $amountsDetail): self
    {
        $this->initialized['amountsDetail'] = true;
        $this->amountsDetail = $amountsDetail;

        return $this;
    }

    /**
     * Montant total du risque.
     */
    public function getRiskAmount(): ?float
    {
        return $this->riskAmount;
    }

    /**
     * Montant total du risque.
     */
    public function setRiskAmount(?float $riskAmount): self
    {
        $this->initialized['riskAmount'] = true;
        $this->riskAmount = $riskAmount;

        return $this;
    }

    /**
     * Etat du risque.
     */
    public function getRiskState(): ?string
    {
        return $this->riskState;
    }

    /**
     * Etat du risque.
     */
    public function setRiskState(?string $riskState): self
    {
        $this->initialized['riskState'] = true;
        $this->riskState = $riskState;

        return $this;
    }

    /**
     * Crédit demandé.
     */
    public function getRequested(): ?float
    {
        return $this->requested;
    }

    /**
     * Crédit demandé.
     */
    public function setRequested(?float $requested): self
    {
        $this->initialized['requested'] = true;
        $this->requested = $requested;

        return $this;
    }

    /**
     * Crédit autorisé.
     */
    public function getAllowed(): ?float
    {
        return $this->allowed;
    }

    /**
     * Crédit autorisé.
     */
    public function setAllowed(?float $allowed): self
    {
        $this->initialized['allowed'] = true;
        $this->allowed = $allowed;

        return $this;
    }

    /**
     * Plafond autorisé.
     */
    public function getMaximum(): ?float
    {
        return $this->maximum;
    }

    /**
     * Plafond autorisé.
     */
    public function setMaximum(?float $maximum): self
    {
        $this->initialized['maximum'] = true;
        $this->maximum = $maximum;

        return $this;
    }
}
