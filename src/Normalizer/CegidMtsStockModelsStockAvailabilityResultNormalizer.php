<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Cegid\Api\Normalizer;

use Cegid\Api\Runtime\Normalizer\CheckArray;
use Cegid\Api\Runtime\Normalizer\ValidatorTrait;
use Jane\Component\JsonSchemaRuntime\Reference;
use Symfony\Component\HttpKernel\Kernel;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\DenormalizerInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\NormalizerInterface;

if (!class_exists(Kernel::class) or (Kernel::MAJOR_VERSION >= 7 or Kernel::MAJOR_VERSION === 6 and Kernel::MINOR_VERSION === 4)) {
    class CegidMtsStockModelsStockAvailabilityResultNormalizer implements DenormalizerInterface, NormalizerInterface, DenormalizerAwareInterface, NormalizerAwareInterface
    {
        use DenormalizerAwareTrait;
        use NormalizerAwareTrait;
        use CheckArray;
        use ValidatorTrait;

        public function supportsDenormalization(mixed $data, string $type, ?string $format = null, array $context = []): bool
        {
            return $type === 'Cegid\\Api\\Model\\CegidMtsStockModelsStockAvailabilityResult';
        }

        public function supportsNormalization(mixed $data, ?string $format = null, array $context = []): bool
        {
            return is_object($data) && get_class($data) === 'Cegid\\Api\\Model\\CegidMtsStockModelsStockAvailabilityResult';
        }

        public function denormalize(mixed $data, string $type, ?string $format = null, array $context = []): mixed
        {
            if (isset($data['$ref'])) {
                return new Reference($data['$ref'], $context['document-origin']);
            }
            if (isset($data['$recursiveRef'])) {
                return new Reference($data['$recursiveRef'], $context['document-origin']);
            }
            $object = new \Cegid\Api\Model\CegidMtsStockModelsStockAvailabilityResult();
            if (\array_key_exists('PhysicalQuantity', $data) && \is_int($data['PhysicalQuantity'])) {
                $data['PhysicalQuantity'] = (float) $data['PhysicalQuantity'];
            }
            if (\array_key_exists('ReservedQuantity', $data) && \is_int($data['ReservedQuantity'])) {
                $data['ReservedQuantity'] = (float) $data['ReservedQuantity'];
            }
            if (\array_key_exists('ExpectedQuantity', $data) && \is_int($data['ExpectedQuantity'])) {
                $data['ExpectedQuantity'] = (float) $data['ExpectedQuantity'];
            }
            if (\array_key_exists('DeliveryPreparationQuantity', $data) && \is_int($data['DeliveryPreparationQuantity'])) {
                $data['DeliveryPreparationQuantity'] = (float) $data['DeliveryPreparationQuantity'];
            }
            if (\array_key_exists('InitialStock', $data) && \is_int($data['InitialStock'])) {
                $data['InitialStock'] = (float) $data['InitialStock'];
            }
            if (\array_key_exists('BlockedQuantity', $data) && \is_int($data['BlockedQuantity'])) {
                $data['BlockedQuantity'] = (float) $data['BlockedQuantity'];
            }
            if (\array_key_exists('AssignedQuantity', $data) && \is_int($data['AssignedQuantity'])) {
                $data['AssignedQuantity'] = (float) $data['AssignedQuantity'];
            }
            if (\array_key_exists('ReservedQuantityNotAssigned', $data) && \is_int($data['ReservedQuantityNotAssigned'])) {
                $data['ReservedQuantityNotAssigned'] = (float) $data['ReservedQuantityNotAssigned'];
            }
            if (\array_key_exists('ExpiredQuantity', $data) && \is_int($data['ExpiredQuantity'])) {
                $data['ExpiredQuantity'] = (float) $data['ExpiredQuantity'];
            }
            if (\array_key_exists('KeptQuantity', $data) && \is_int($data['KeptQuantity'])) {
                $data['KeptQuantity'] = (float) $data['KeptQuantity'];
            }
            if (\array_key_exists('NetPhysicalQuantity', $data) && \is_int($data['NetPhysicalQuantity'])) {
                $data['NetPhysicalQuantity'] = (float) $data['NetPhysicalQuantity'];
            }
            if (\array_key_exists('GrossAvailableQuantity', $data) && \is_int($data['GrossAvailableQuantity'])) {
                $data['GrossAvailableQuantity'] = (float) $data['GrossAvailableQuantity'];
            }
            if (\array_key_exists('NetAvailableQuantity', $data) && \is_int($data['NetAvailableQuantity'])) {
                $data['NetAvailableQuantity'] = (float) $data['NetAvailableQuantity'];
            }
            if (\array_key_exists('AbsoluteProjectedQuantity', $data) && \is_int($data['AbsoluteProjectedQuantity'])) {
                $data['AbsoluteProjectedQuantity'] = (float) $data['AbsoluteProjectedQuantity'];
            }
            if (\array_key_exists('MissingQuantity', $data) && \is_int($data['MissingQuantity'])) {
                $data['MissingQuantity'] = (float) $data['MissingQuantity'];
            }
            if (null === $data || false === \is_array($data)) {
                return $object;
            }
            if (\array_key_exists('Warehouse', $data) && $data['Warehouse'] !== null) {
                $object->setWarehouse($data['Warehouse']);
            } elseif (\array_key_exists('Warehouse', $data) && $data['Warehouse'] === null) {
                $object->setWarehouse(null);
            }
            if (\array_key_exists('ProductId', $data) && $data['ProductId'] !== null) {
                $object->setProductId($data['ProductId']);
            } elseif (\array_key_exists('ProductId', $data) && $data['ProductId'] === null) {
                $object->setProductId(null);
            }
            if (\array_key_exists('PhysicalQuantity', $data) && $data['PhysicalQuantity'] !== null) {
                $object->setPhysicalQuantity($data['PhysicalQuantity']);
            } elseif (\array_key_exists('PhysicalQuantity', $data) && $data['PhysicalQuantity'] === null) {
                $object->setPhysicalQuantity(null);
            }
            if (\array_key_exists('ReservedQuantity', $data) && $data['ReservedQuantity'] !== null) {
                $object->setReservedQuantity($data['ReservedQuantity']);
            } elseif (\array_key_exists('ReservedQuantity', $data) && $data['ReservedQuantity'] === null) {
                $object->setReservedQuantity(null);
            }
            if (\array_key_exists('ExpectedQuantity', $data) && $data['ExpectedQuantity'] !== null) {
                $object->setExpectedQuantity($data['ExpectedQuantity']);
            } elseif (\array_key_exists('ExpectedQuantity', $data) && $data['ExpectedQuantity'] === null) {
                $object->setExpectedQuantity(null);
            }
            if (\array_key_exists('DeliveryPreparationQuantity', $data) && $data['DeliveryPreparationQuantity'] !== null) {
                $object->setDeliveryPreparationQuantity($data['DeliveryPreparationQuantity']);
            } elseif (\array_key_exists('DeliveryPreparationQuantity', $data) && $data['DeliveryPreparationQuantity'] === null) {
                $object->setDeliveryPreparationQuantity(null);
            }
            if (\array_key_exists('InitialStock', $data) && $data['InitialStock'] !== null) {
                $object->setInitialStock($data['InitialStock']);
            } elseif (\array_key_exists('InitialStock', $data) && $data['InitialStock'] === null) {
                $object->setInitialStock(null);
            }
            if (\array_key_exists('BlockedQuantity', $data) && $data['BlockedQuantity'] !== null) {
                $object->setBlockedQuantity($data['BlockedQuantity']);
            } elseif (\array_key_exists('BlockedQuantity', $data) && $data['BlockedQuantity'] === null) {
                $object->setBlockedQuantity(null);
            }
            if (\array_key_exists('AssignedQuantity', $data) && $data['AssignedQuantity'] !== null) {
                $object->setAssignedQuantity($data['AssignedQuantity']);
            } elseif (\array_key_exists('AssignedQuantity', $data) && $data['AssignedQuantity'] === null) {
                $object->setAssignedQuantity(null);
            }
            if (\array_key_exists('ReservedQuantityNotAssigned', $data) && $data['ReservedQuantityNotAssigned'] !== null) {
                $object->setReservedQuantityNotAssigned($data['ReservedQuantityNotAssigned']);
            } elseif (\array_key_exists('ReservedQuantityNotAssigned', $data) && $data['ReservedQuantityNotAssigned'] === null) {
                $object->setReservedQuantityNotAssigned(null);
            }
            if (\array_key_exists('ExpiredQuantity', $data) && $data['ExpiredQuantity'] !== null) {
                $object->setExpiredQuantity($data['ExpiredQuantity']);
            } elseif (\array_key_exists('ExpiredQuantity', $data) && $data['ExpiredQuantity'] === null) {
                $object->setExpiredQuantity(null);
            }
            if (\array_key_exists('KeptQuantity', $data) && $data['KeptQuantity'] !== null) {
                $object->setKeptQuantity($data['KeptQuantity']);
            } elseif (\array_key_exists('KeptQuantity', $data) && $data['KeptQuantity'] === null) {
                $object->setKeptQuantity(null);
            }
            if (\array_key_exists('NetPhysicalQuantity', $data) && $data['NetPhysicalQuantity'] !== null) {
                $object->setNetPhysicalQuantity($data['NetPhysicalQuantity']);
            } elseif (\array_key_exists('NetPhysicalQuantity', $data) && $data['NetPhysicalQuantity'] === null) {
                $object->setNetPhysicalQuantity(null);
            }
            if (\array_key_exists('GrossAvailableQuantity', $data) && $data['GrossAvailableQuantity'] !== null) {
                $object->setGrossAvailableQuantity($data['GrossAvailableQuantity']);
            } elseif (\array_key_exists('GrossAvailableQuantity', $data) && $data['GrossAvailableQuantity'] === null) {
                $object->setGrossAvailableQuantity(null);
            }
            if (\array_key_exists('NetAvailableQuantity', $data) && $data['NetAvailableQuantity'] !== null) {
                $object->setNetAvailableQuantity($data['NetAvailableQuantity']);
            } elseif (\array_key_exists('NetAvailableQuantity', $data) && $data['NetAvailableQuantity'] === null) {
                $object->setNetAvailableQuantity(null);
            }
            if (\array_key_exists('AbsoluteProjectedQuantity', $data) && $data['AbsoluteProjectedQuantity'] !== null) {
                $object->setAbsoluteProjectedQuantity($data['AbsoluteProjectedQuantity']);
            } elseif (\array_key_exists('AbsoluteProjectedQuantity', $data) && $data['AbsoluteProjectedQuantity'] === null) {
                $object->setAbsoluteProjectedQuantity(null);
            }
            if (\array_key_exists('MissingQuantity', $data) && $data['MissingQuantity'] !== null) {
                $object->setMissingQuantity($data['MissingQuantity']);
            } elseif (\array_key_exists('MissingQuantity', $data) && $data['MissingQuantity'] === null) {
                $object->setMissingQuantity(null);
            }

            return $object;
        }

        public function normalize(mixed $object, ?string $format = null, array $context = []): array|string|int|float|bool|\ArrayObject|null
        {
            $data = [];
            if ($object->isInitialized('warehouse') && null !== $object->getWarehouse()) {
                $data['Warehouse'] = $object->getWarehouse();
            }
            if ($object->isInitialized('productId') && null !== $object->getProductId()) {
                $data['ProductId'] = $object->getProductId();
            }
            if ($object->isInitialized('physicalQuantity') && null !== $object->getPhysicalQuantity()) {
                $data['PhysicalQuantity'] = $object->getPhysicalQuantity();
            }
            if ($object->isInitialized('reservedQuantity') && null !== $object->getReservedQuantity()) {
                $data['ReservedQuantity'] = $object->getReservedQuantity();
            }
            if ($object->isInitialized('expectedQuantity') && null !== $object->getExpectedQuantity()) {
                $data['ExpectedQuantity'] = $object->getExpectedQuantity();
            }
            if ($object->isInitialized('deliveryPreparationQuantity') && null !== $object->getDeliveryPreparationQuantity()) {
                $data['DeliveryPreparationQuantity'] = $object->getDeliveryPreparationQuantity();
            }
            if ($object->isInitialized('initialStock') && null !== $object->getInitialStock()) {
                $data['InitialStock'] = $object->getInitialStock();
            }
            if ($object->isInitialized('blockedQuantity') && null !== $object->getBlockedQuantity()) {
                $data['BlockedQuantity'] = $object->getBlockedQuantity();
            }
            if ($object->isInitialized('assignedQuantity') && null !== $object->getAssignedQuantity()) {
                $data['AssignedQuantity'] = $object->getAssignedQuantity();
            }
            if ($object->isInitialized('reservedQuantityNotAssigned') && null !== $object->getReservedQuantityNotAssigned()) {
                $data['ReservedQuantityNotAssigned'] = $object->getReservedQuantityNotAssigned();
            }
            if ($object->isInitialized('expiredQuantity') && null !== $object->getExpiredQuantity()) {
                $data['ExpiredQuantity'] = $object->getExpiredQuantity();
            }
            if ($object->isInitialized('keptQuantity') && null !== $object->getKeptQuantity()) {
                $data['KeptQuantity'] = $object->getKeptQuantity();
            }
            if ($object->isInitialized('netPhysicalQuantity') && null !== $object->getNetPhysicalQuantity()) {
                $data['NetPhysicalQuantity'] = $object->getNetPhysicalQuantity();
            }
            if ($object->isInitialized('grossAvailableQuantity') && null !== $object->getGrossAvailableQuantity()) {
                $data['GrossAvailableQuantity'] = $object->getGrossAvailableQuantity();
            }
            if ($object->isInitialized('netAvailableQuantity') && null !== $object->getNetAvailableQuantity()) {
                $data['NetAvailableQuantity'] = $object->getNetAvailableQuantity();
            }
            if ($object->isInitialized('absoluteProjectedQuantity') && null !== $object->getAbsoluteProjectedQuantity()) {
                $data['AbsoluteProjectedQuantity'] = $object->getAbsoluteProjectedQuantity();
            }
            if ($object->isInitialized('missingQuantity') && null !== $object->getMissingQuantity()) {
                $data['MissingQuantity'] = $object->getMissingQuantity();
            }

            return $data;
        }

        public function getSupportedTypes(?string $format = null): array
        {
            return ['Cegid\\Api\\Model\\CegidMtsStockModelsStockAvailabilityResult' => false];
        }
    }
} else {
    class CegidMtsStockModelsStockAvailabilityResultNormalizer implements DenormalizerInterface, NormalizerInterface, DenormalizerAwareInterface, NormalizerAwareInterface
    {
        use DenormalizerAwareTrait;
        use NormalizerAwareTrait;
        use CheckArray;
        use ValidatorTrait;

        public function supportsDenormalization($data, $type, ?string $format = null, array $context = []): bool
        {
            return $type === 'Cegid\\Api\\Model\\CegidMtsStockModelsStockAvailabilityResult';
        }

        public function supportsNormalization(mixed $data, ?string $format = null, array $context = []): bool
        {
            return is_object($data) && get_class($data) === 'Cegid\\Api\\Model\\CegidMtsStockModelsStockAvailabilityResult';
        }

        public function denormalize($data, $type, $format = null, array $context = [])
        {
            if (isset($data['$ref'])) {
                return new Reference($data['$ref'], $context['document-origin']);
            }
            if (isset($data['$recursiveRef'])) {
                return new Reference($data['$recursiveRef'], $context['document-origin']);
            }
            $object = new \Cegid\Api\Model\CegidMtsStockModelsStockAvailabilityResult();
            if (\array_key_exists('PhysicalQuantity', $data) && \is_int($data['PhysicalQuantity'])) {
                $data['PhysicalQuantity'] = (float) $data['PhysicalQuantity'];
            }
            if (\array_key_exists('ReservedQuantity', $data) && \is_int($data['ReservedQuantity'])) {
                $data['ReservedQuantity'] = (float) $data['ReservedQuantity'];
            }
            if (\array_key_exists('ExpectedQuantity', $data) && \is_int($data['ExpectedQuantity'])) {
                $data['ExpectedQuantity'] = (float) $data['ExpectedQuantity'];
            }
            if (\array_key_exists('DeliveryPreparationQuantity', $data) && \is_int($data['DeliveryPreparationQuantity'])) {
                $data['DeliveryPreparationQuantity'] = (float) $data['DeliveryPreparationQuantity'];
            }
            if (\array_key_exists('InitialStock', $data) && \is_int($data['InitialStock'])) {
                $data['InitialStock'] = (float) $data['InitialStock'];
            }
            if (\array_key_exists('BlockedQuantity', $data) && \is_int($data['BlockedQuantity'])) {
                $data['BlockedQuantity'] = (float) $data['BlockedQuantity'];
            }
            if (\array_key_exists('AssignedQuantity', $data) && \is_int($data['AssignedQuantity'])) {
                $data['AssignedQuantity'] = (float) $data['AssignedQuantity'];
            }
            if (\array_key_exists('ReservedQuantityNotAssigned', $data) && \is_int($data['ReservedQuantityNotAssigned'])) {
                $data['ReservedQuantityNotAssigned'] = (float) $data['ReservedQuantityNotAssigned'];
            }
            if (\array_key_exists('ExpiredQuantity', $data) && \is_int($data['ExpiredQuantity'])) {
                $data['ExpiredQuantity'] = (float) $data['ExpiredQuantity'];
            }
            if (\array_key_exists('KeptQuantity', $data) && \is_int($data['KeptQuantity'])) {
                $data['KeptQuantity'] = (float) $data['KeptQuantity'];
            }
            if (\array_key_exists('NetPhysicalQuantity', $data) && \is_int($data['NetPhysicalQuantity'])) {
                $data['NetPhysicalQuantity'] = (float) $data['NetPhysicalQuantity'];
            }
            if (\array_key_exists('GrossAvailableQuantity', $data) && \is_int($data['GrossAvailableQuantity'])) {
                $data['GrossAvailableQuantity'] = (float) $data['GrossAvailableQuantity'];
            }
            if (\array_key_exists('NetAvailableQuantity', $data) && \is_int($data['NetAvailableQuantity'])) {
                $data['NetAvailableQuantity'] = (float) $data['NetAvailableQuantity'];
            }
            if (\array_key_exists('AbsoluteProjectedQuantity', $data) && \is_int($data['AbsoluteProjectedQuantity'])) {
                $data['AbsoluteProjectedQuantity'] = (float) $data['AbsoluteProjectedQuantity'];
            }
            if (\array_key_exists('MissingQuantity', $data) && \is_int($data['MissingQuantity'])) {
                $data['MissingQuantity'] = (float) $data['MissingQuantity'];
            }
            if (null === $data || false === \is_array($data)) {
                return $object;
            }
            if (\array_key_exists('Warehouse', $data) && $data['Warehouse'] !== null) {
                $object->setWarehouse($data['Warehouse']);
            } elseif (\array_key_exists('Warehouse', $data) && $data['Warehouse'] === null) {
                $object->setWarehouse(null);
            }
            if (\array_key_exists('ProductId', $data) && $data['ProductId'] !== null) {
                $object->setProductId($data['ProductId']);
            } elseif (\array_key_exists('ProductId', $data) && $data['ProductId'] === null) {
                $object->setProductId(null);
            }
            if (\array_key_exists('PhysicalQuantity', $data) && $data['PhysicalQuantity'] !== null) {
                $object->setPhysicalQuantity($data['PhysicalQuantity']);
            } elseif (\array_key_exists('PhysicalQuantity', $data) && $data['PhysicalQuantity'] === null) {
                $object->setPhysicalQuantity(null);
            }
            if (\array_key_exists('ReservedQuantity', $data) && $data['ReservedQuantity'] !== null) {
                $object->setReservedQuantity($data['ReservedQuantity']);
            } elseif (\array_key_exists('ReservedQuantity', $data) && $data['ReservedQuantity'] === null) {
                $object->setReservedQuantity(null);
            }
            if (\array_key_exists('ExpectedQuantity', $data) && $data['ExpectedQuantity'] !== null) {
                $object->setExpectedQuantity($data['ExpectedQuantity']);
            } elseif (\array_key_exists('ExpectedQuantity', $data) && $data['ExpectedQuantity'] === null) {
                $object->setExpectedQuantity(null);
            }
            if (\array_key_exists('DeliveryPreparationQuantity', $data) && $data['DeliveryPreparationQuantity'] !== null) {
                $object->setDeliveryPreparationQuantity($data['DeliveryPreparationQuantity']);
            } elseif (\array_key_exists('DeliveryPreparationQuantity', $data) && $data['DeliveryPreparationQuantity'] === null) {
                $object->setDeliveryPreparationQuantity(null);
            }
            if (\array_key_exists('InitialStock', $data) && $data['InitialStock'] !== null) {
                $object->setInitialStock($data['InitialStock']);
            } elseif (\array_key_exists('InitialStock', $data) && $data['InitialStock'] === null) {
                $object->setInitialStock(null);
            }
            if (\array_key_exists('BlockedQuantity', $data) && $data['BlockedQuantity'] !== null) {
                $object->setBlockedQuantity($data['BlockedQuantity']);
            } elseif (\array_key_exists('BlockedQuantity', $data) && $data['BlockedQuantity'] === null) {
                $object->setBlockedQuantity(null);
            }
            if (\array_key_exists('AssignedQuantity', $data) && $data['AssignedQuantity'] !== null) {
                $object->setAssignedQuantity($data['AssignedQuantity']);
            } elseif (\array_key_exists('AssignedQuantity', $data) && $data['AssignedQuantity'] === null) {
                $object->setAssignedQuantity(null);
            }
            if (\array_key_exists('ReservedQuantityNotAssigned', $data) && $data['ReservedQuantityNotAssigned'] !== null) {
                $object->setReservedQuantityNotAssigned($data['ReservedQuantityNotAssigned']);
            } elseif (\array_key_exists('ReservedQuantityNotAssigned', $data) && $data['ReservedQuantityNotAssigned'] === null) {
                $object->setReservedQuantityNotAssigned(null);
            }
            if (\array_key_exists('ExpiredQuantity', $data) && $data['ExpiredQuantity'] !== null) {
                $object->setExpiredQuantity($data['ExpiredQuantity']);
            } elseif (\array_key_exists('ExpiredQuantity', $data) && $data['ExpiredQuantity'] === null) {
                $object->setExpiredQuantity(null);
            }
            if (\array_key_exists('KeptQuantity', $data) && $data['KeptQuantity'] !== null) {
                $object->setKeptQuantity($data['KeptQuantity']);
            } elseif (\array_key_exists('KeptQuantity', $data) && $data['KeptQuantity'] === null) {
                $object->setKeptQuantity(null);
            }
            if (\array_key_exists('NetPhysicalQuantity', $data) && $data['NetPhysicalQuantity'] !== null) {
                $object->setNetPhysicalQuantity($data['NetPhysicalQuantity']);
            } elseif (\array_key_exists('NetPhysicalQuantity', $data) && $data['NetPhysicalQuantity'] === null) {
                $object->setNetPhysicalQuantity(null);
            }
            if (\array_key_exists('GrossAvailableQuantity', $data) && $data['GrossAvailableQuantity'] !== null) {
                $object->setGrossAvailableQuantity($data['GrossAvailableQuantity']);
            } elseif (\array_key_exists('GrossAvailableQuantity', $data) && $data['GrossAvailableQuantity'] === null) {
                $object->setGrossAvailableQuantity(null);
            }
            if (\array_key_exists('NetAvailableQuantity', $data) && $data['NetAvailableQuantity'] !== null) {
                $object->setNetAvailableQuantity($data['NetAvailableQuantity']);
            } elseif (\array_key_exists('NetAvailableQuantity', $data) && $data['NetAvailableQuantity'] === null) {
                $object->setNetAvailableQuantity(null);
            }
            if (\array_key_exists('AbsoluteProjectedQuantity', $data) && $data['AbsoluteProjectedQuantity'] !== null) {
                $object->setAbsoluteProjectedQuantity($data['AbsoluteProjectedQuantity']);
            } elseif (\array_key_exists('AbsoluteProjectedQuantity', $data) && $data['AbsoluteProjectedQuantity'] === null) {
                $object->setAbsoluteProjectedQuantity(null);
            }
            if (\array_key_exists('MissingQuantity', $data) && $data['MissingQuantity'] !== null) {
                $object->setMissingQuantity($data['MissingQuantity']);
            } elseif (\array_key_exists('MissingQuantity', $data) && $data['MissingQuantity'] === null) {
                $object->setMissingQuantity(null);
            }

            return $object;
        }

        /**
         * @return array|string|int|float|bool|\ArrayObject|null
         */
        public function normalize($object, $format = null, array $context = [])
        {
            $data = [];
            if ($object->isInitialized('warehouse') && null !== $object->getWarehouse()) {
                $data['Warehouse'] = $object->getWarehouse();
            }
            if ($object->isInitialized('productId') && null !== $object->getProductId()) {
                $data['ProductId'] = $object->getProductId();
            }
            if ($object->isInitialized('physicalQuantity') && null !== $object->getPhysicalQuantity()) {
                $data['PhysicalQuantity'] = $object->getPhysicalQuantity();
            }
            if ($object->isInitialized('reservedQuantity') && null !== $object->getReservedQuantity()) {
                $data['ReservedQuantity'] = $object->getReservedQuantity();
            }
            if ($object->isInitialized('expectedQuantity') && null !== $object->getExpectedQuantity()) {
                $data['ExpectedQuantity'] = $object->getExpectedQuantity();
            }
            if ($object->isInitialized('deliveryPreparationQuantity') && null !== $object->getDeliveryPreparationQuantity()) {
                $data['DeliveryPreparationQuantity'] = $object->getDeliveryPreparationQuantity();
            }
            if ($object->isInitialized('initialStock') && null !== $object->getInitialStock()) {
                $data['InitialStock'] = $object->getInitialStock();
            }
            if ($object->isInitialized('blockedQuantity') && null !== $object->getBlockedQuantity()) {
                $data['BlockedQuantity'] = $object->getBlockedQuantity();
            }
            if ($object->isInitialized('assignedQuantity') && null !== $object->getAssignedQuantity()) {
                $data['AssignedQuantity'] = $object->getAssignedQuantity();
            }
            if ($object->isInitialized('reservedQuantityNotAssigned') && null !== $object->getReservedQuantityNotAssigned()) {
                $data['ReservedQuantityNotAssigned'] = $object->getReservedQuantityNotAssigned();
            }
            if ($object->isInitialized('expiredQuantity') && null !== $object->getExpiredQuantity()) {
                $data['ExpiredQuantity'] = $object->getExpiredQuantity();
            }
            if ($object->isInitialized('keptQuantity') && null !== $object->getKeptQuantity()) {
                $data['KeptQuantity'] = $object->getKeptQuantity();
            }
            if ($object->isInitialized('netPhysicalQuantity') && null !== $object->getNetPhysicalQuantity()) {
                $data['NetPhysicalQuantity'] = $object->getNetPhysicalQuantity();
            }
            if ($object->isInitialized('grossAvailableQuantity') && null !== $object->getGrossAvailableQuantity()) {
                $data['GrossAvailableQuantity'] = $object->getGrossAvailableQuantity();
            }
            if ($object->isInitialized('netAvailableQuantity') && null !== $object->getNetAvailableQuantity()) {
                $data['NetAvailableQuantity'] = $object->getNetAvailableQuantity();
            }
            if ($object->isInitialized('absoluteProjectedQuantity') && null !== $object->getAbsoluteProjectedQuantity()) {
                $data['AbsoluteProjectedQuantity'] = $object->getAbsoluteProjectedQuantity();
            }
            if ($object->isInitialized('missingQuantity') && null !== $object->getMissingQuantity()) {
                $data['MissingQuantity'] = $object->getMissingQuantity();
            }

            return $data;
        }

        public function getSupportedTypes(?string $format = null): array
        {
            return ['Cegid\\Api\\Model\\CegidMtsStockModelsStockAvailabilityResult' => false];
        }
    }
}
