<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Cegid\Api\Normalizer;

use Cegid\Api\Runtime\Normalizer\CheckArray;
use Cegid\Api\Runtime\Normalizer\ValidatorTrait;
use Jane\Component\JsonSchemaRuntime\Reference;
use Symfony\Component\HttpKernel\Kernel;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\DenormalizerInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\NormalizerInterface;

if (!class_exists(Kernel::class) or (Kernel::MAJOR_VERSION >= 7 or Kernel::MAJOR_VERSION === 6 and Kernel::MINOR_VERSION === 4)) {
    class CegidMtsTariffModelsTariffSearchResultNormalizer implements DenormalizerInterface, NormalizerInterface, DenormalizerAwareInterface, NormalizerAwareInterface
    {
        use DenormalizerAwareTrait;
        use NormalizerAwareTrait;
        use CheckArray;
        use ValidatorTrait;

        public function supportsDenormalization(mixed $data, string $type, ?string $format = null, array $context = []): bool
        {
            return $type === 'Cegid\\Api\\Model\\CegidMtsTariffModelsTariffSearchResult';
        }

        public function supportsNormalization(mixed $data, ?string $format = null, array $context = []): bool
        {
            return is_object($data) && get_class($data) === 'Cegid\\Api\\Model\\CegidMtsTariffModelsTariffSearchResult';
        }

        public function denormalize(mixed $data, string $type, ?string $format = null, array $context = []): mixed
        {
            if (isset($data['$ref'])) {
                return new Reference($data['$ref'], $context['document-origin']);
            }
            if (isset($data['$recursiveRef'])) {
                return new Reference($data['$recursiveRef'], $context['document-origin']);
            }
            $object = new \Cegid\Api\Model\CegidMtsTariffModelsTariffSearchResult();
            if (\array_key_exists('TariffLineAmount', $data) && \is_int($data['TariffLineAmount'])) {
                $data['TariffLineAmount'] = (float) $data['TariffLineAmount'];
            }
            if (null === $data || false === \is_array($data)) {
                return $object;
            }
            if (\array_key_exists('Result', $data) && $data['Result'] !== null) {
                $object->setResult($this->denormalizer->denormalize($data['Result'], 'Cegid\\Api\\Model\\CegidMtsTariffModelsTariffResultData', 'json', $context));
            } elseif (\array_key_exists('Result', $data) && $data['Result'] === null) {
                $object->setResult(null);
            }
            if (\array_key_exists('Profiles', $data) && $data['Profiles'] !== null) {
                $values = [];
                foreach ($data['Profiles'] as $value) {
                    $values[] = $this->denormalizer->denormalize($value, 'Cegid\\Api\\Model\\CegidMtsTariffModelsTariffResultData', 'json', $context);
                }
                $object->setProfiles($values);
            } elseif (\array_key_exists('Profiles', $data) && $data['Profiles'] === null) {
                $object->setProfiles(null);
            }
            if (\array_key_exists('TariffLineAmount', $data) && $data['TariffLineAmount'] !== null) {
                $object->setTariffLineAmount($data['TariffLineAmount']);
            } elseif (\array_key_exists('TariffLineAmount', $data) && $data['TariffLineAmount'] === null) {
                $object->setTariffLineAmount(null);
            }
            if (\array_key_exists('SearchResult', $data) && $data['SearchResult'] !== null) {
                $object->setSearchResult($data['SearchResult']);
            } elseif (\array_key_exists('SearchResult', $data) && $data['SearchResult'] === null) {
                $object->setSearchResult(null);
            }
            if (\array_key_exists('ErrorMsg', $data) && $data['ErrorMsg'] !== null) {
                $object->setErrorMsg($data['ErrorMsg']);
            } elseif (\array_key_exists('ErrorMsg', $data) && $data['ErrorMsg'] === null) {
                $object->setErrorMsg(null);
            }

            return $object;
        }

        public function normalize(mixed $object, ?string $format = null, array $context = []): array|string|int|float|bool|\ArrayObject|null
        {
            $data = [];
            if ($object->isInitialized('result') && null !== $object->getResult()) {
                $data['Result'] = $this->normalizer->normalize($object->getResult(), 'json', $context);
            }
            if ($object->isInitialized('profiles') && null !== $object->getProfiles()) {
                $values = [];
                foreach ($object->getProfiles() as $value) {
                    $values[] = $this->normalizer->normalize($value, 'json', $context);
                }
                $data['Profiles'] = $values;
            }
            if ($object->isInitialized('tariffLineAmount') && null !== $object->getTariffLineAmount()) {
                $data['TariffLineAmount'] = $object->getTariffLineAmount();
            }
            if ($object->isInitialized('searchResult') && null !== $object->getSearchResult()) {
                $data['SearchResult'] = $object->getSearchResult();
            }
            if ($object->isInitialized('errorMsg') && null !== $object->getErrorMsg()) {
                $data['ErrorMsg'] = $object->getErrorMsg();
            }

            return $data;
        }

        public function getSupportedTypes(?string $format = null): array
        {
            return ['Cegid\\Api\\Model\\CegidMtsTariffModelsTariffSearchResult' => false];
        }
    }
} else {
    class CegidMtsTariffModelsTariffSearchResultNormalizer implements DenormalizerInterface, NormalizerInterface, DenormalizerAwareInterface, NormalizerAwareInterface
    {
        use DenormalizerAwareTrait;
        use NormalizerAwareTrait;
        use CheckArray;
        use ValidatorTrait;

        public function supportsDenormalization($data, $type, ?string $format = null, array $context = []): bool
        {
            return $type === 'Cegid\\Api\\Model\\CegidMtsTariffModelsTariffSearchResult';
        }

        public function supportsNormalization(mixed $data, ?string $format = null, array $context = []): bool
        {
            return is_object($data) && get_class($data) === 'Cegid\\Api\\Model\\CegidMtsTariffModelsTariffSearchResult';
        }

        public function denormalize($data, $type, $format = null, array $context = [])
        {
            if (isset($data['$ref'])) {
                return new Reference($data['$ref'], $context['document-origin']);
            }
            if (isset($data['$recursiveRef'])) {
                return new Reference($data['$recursiveRef'], $context['document-origin']);
            }
            $object = new \Cegid\Api\Model\CegidMtsTariffModelsTariffSearchResult();
            if (\array_key_exists('TariffLineAmount', $data) && \is_int($data['TariffLineAmount'])) {
                $data['TariffLineAmount'] = (float) $data['TariffLineAmount'];
            }
            if (null === $data || false === \is_array($data)) {
                return $object;
            }
            if (\array_key_exists('Result', $data) && $data['Result'] !== null) {
                $object->setResult($this->denormalizer->denormalize($data['Result'], 'Cegid\\Api\\Model\\CegidMtsTariffModelsTariffResultData', 'json', $context));
            } elseif (\array_key_exists('Result', $data) && $data['Result'] === null) {
                $object->setResult(null);
            }
            if (\array_key_exists('Profiles', $data) && $data['Profiles'] !== null) {
                $values = [];
                foreach ($data['Profiles'] as $value) {
                    $values[] = $this->denormalizer->denormalize($value, 'Cegid\\Api\\Model\\CegidMtsTariffModelsTariffResultData', 'json', $context);
                }
                $object->setProfiles($values);
            } elseif (\array_key_exists('Profiles', $data) && $data['Profiles'] === null) {
                $object->setProfiles(null);
            }
            if (\array_key_exists('TariffLineAmount', $data) && $data['TariffLineAmount'] !== null) {
                $object->setTariffLineAmount($data['TariffLineAmount']);
            } elseif (\array_key_exists('TariffLineAmount', $data) && $data['TariffLineAmount'] === null) {
                $object->setTariffLineAmount(null);
            }
            if (\array_key_exists('SearchResult', $data) && $data['SearchResult'] !== null) {
                $object->setSearchResult($data['SearchResult']);
            } elseif (\array_key_exists('SearchResult', $data) && $data['SearchResult'] === null) {
                $object->setSearchResult(null);
            }
            if (\array_key_exists('ErrorMsg', $data) && $data['ErrorMsg'] !== null) {
                $object->setErrorMsg($data['ErrorMsg']);
            } elseif (\array_key_exists('ErrorMsg', $data) && $data['ErrorMsg'] === null) {
                $object->setErrorMsg(null);
            }

            return $object;
        }

        /**
         * @return array|string|int|float|bool|\ArrayObject|null
         */
        public function normalize($object, $format = null, array $context = [])
        {
            $data = [];
            if ($object->isInitialized('result') && null !== $object->getResult()) {
                $data['Result'] = $this->normalizer->normalize($object->getResult(), 'json', $context);
            }
            if ($object->isInitialized('profiles') && null !== $object->getProfiles()) {
                $values = [];
                foreach ($object->getProfiles() as $value) {
                    $values[] = $this->normalizer->normalize($value, 'json', $context);
                }
                $data['Profiles'] = $values;
            }
            if ($object->isInitialized('tariffLineAmount') && null !== $object->getTariffLineAmount()) {
                $data['TariffLineAmount'] = $object->getTariffLineAmount();
            }
            if ($object->isInitialized('searchResult') && null !== $object->getSearchResult()) {
                $data['SearchResult'] = $object->getSearchResult();
            }
            if ($object->isInitialized('errorMsg') && null !== $object->getErrorMsg()) {
                $data['ErrorMsg'] = $object->getErrorMsg();
            }

            return $data;
        }

        public function getSupportedTypes(?string $format = null): array
        {
            return ['Cegid\\Api\\Model\\CegidMtsTariffModelsTariffSearchResult' => false];
        }
    }
}
