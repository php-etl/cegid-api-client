<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Cegid\Api\Normalizer;

use Cegid\Api\Runtime\Normalizer\CheckArray;
use Cegid\Api\Runtime\Normalizer\ValidatorTrait;
use Jane\Component\JsonSchemaRuntime\Reference;
use Symfony\Component\HttpKernel\Kernel;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\DenormalizerInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\NormalizerInterface;

if (!class_exists(Kernel::class) or (Kernel::MAJOR_VERSION >= 7 or Kernel::MAJOR_VERSION === 6 and Kernel::MINOR_VERSION === 4)) {
    class CegidMtsContactAdditionalContactUserDefinedDataNormalizer implements DenormalizerInterface, NormalizerInterface, DenormalizerAwareInterface, NormalizerAwareInterface
    {
        use DenormalizerAwareTrait;
        use NormalizerAwareTrait;
        use CheckArray;
        use ValidatorTrait;

        public function supportsDenormalization(mixed $data, string $type, ?string $format = null, array $context = []): bool
        {
            return $type === 'Cegid\\Api\\Model\\CegidMtsContactAdditionalContactUserDefinedData';
        }

        public function supportsNormalization(mixed $data, ?string $format = null, array $context = []): bool
        {
            return is_object($data) && get_class($data) === 'Cegid\\Api\\Model\\CegidMtsContactAdditionalContactUserDefinedData';
        }

        public function denormalize(mixed $data, string $type, ?string $format = null, array $context = []): mixed
        {
            if (isset($data['$ref'])) {
                return new Reference($data['$ref'], $context['document-origin']);
            }
            if (isset($data['$recursiveRef'])) {
                return new Reference($data['$recursiveRef'], $context['document-origin']);
            }
            $object = new \Cegid\Api\Model\CegidMtsContactAdditionalContactUserDefinedData();
            if (null === $data || false === \is_array($data)) {
                return $object;
            }
            if (\array_key_exists('Notepad', $data) && $data['Notepad'] !== null) {
                $object->setNotepad($data['Notepad']);
            } elseif (\array_key_exists('Notepad', $data) && $data['Notepad'] === null) {
                $object->setNotepad(null);
            }
            if (\array_key_exists('Booleans', $data) && $data['Booleans'] !== null) {
                $values = [];
                foreach ($data['Booleans'] as $value) {
                    $values[] = $value;
                }
                $object->setBooleans($values);
            } elseif (\array_key_exists('Booleans', $data) && $data['Booleans'] === null) {
                $object->setBooleans(null);
            }
            if (\array_key_exists('DateTimes', $data) && $data['DateTimes'] !== null) {
                $values_1 = [];
                foreach ($data['DateTimes'] as $value_1) {
                    $values_1[] = \DateTime::createFromFormat('Y-m-d\\TH:i:sP', $value_1);
                }
                $object->setDateTimes($values_1);
            } elseif (\array_key_exists('DateTimes', $data) && $data['DateTimes'] === null) {
                $object->setDateTimes(null);
            }
            if (\array_key_exists('Decimals', $data) && $data['Decimals'] !== null) {
                $values_2 = [];
                foreach ($data['Decimals'] as $value_2) {
                    $values_2[] = $value_2;
                }
                $object->setDecimals($values_2);
            } elseif (\array_key_exists('Decimals', $data) && $data['Decimals'] === null) {
                $object->setDecimals(null);
            }
            if (\array_key_exists('LookupChoices', $data) && $data['LookupChoices'] !== null) {
                $values_3 = [];
                foreach ($data['LookupChoices'] as $value_3) {
                    $values_3[] = $value_3;
                }
                $object->setLookupChoices($values_3);
            } elseif (\array_key_exists('LookupChoices', $data) && $data['LookupChoices'] === null) {
                $object->setLookupChoices(null);
            }
            if (\array_key_exists('SelectedLookups', $data) && $data['SelectedLookups'] !== null) {
                $values_4 = [];
                foreach ($data['SelectedLookups'] as $value_4) {
                    $values_5 = [];
                    foreach ($value_4 as $value_5) {
                        $values_5[] = $value_5;
                    }
                    $values_4[] = $values_5;
                }
                $object->setSelectedLookups($values_4);
            } elseif (\array_key_exists('SelectedLookups', $data) && $data['SelectedLookups'] === null) {
                $object->setSelectedLookups(null);
            }
            if (\array_key_exists('Strings', $data) && $data['Strings'] !== null) {
                $values_6 = [];
                foreach ($data['Strings'] as $value_6) {
                    $values_6[] = $value_6;
                }
                $object->setStrings($values_6);
            } elseif (\array_key_exists('Strings', $data) && $data['Strings'] === null) {
                $object->setStrings(null);
            }
            if (\array_key_exists('BooleansCount', $data) && $data['BooleansCount'] !== null) {
                $object->setBooleansCount($data['BooleansCount']);
            } elseif (\array_key_exists('BooleansCount', $data) && $data['BooleansCount'] === null) {
                $object->setBooleansCount(null);
            }
            if (\array_key_exists('DateTimesCount', $data) && $data['DateTimesCount'] !== null) {
                $object->setDateTimesCount($data['DateTimesCount']);
            } elseif (\array_key_exists('DateTimesCount', $data) && $data['DateTimesCount'] === null) {
                $object->setDateTimesCount(null);
            }
            if (\array_key_exists('DecimalsCount', $data) && $data['DecimalsCount'] !== null) {
                $object->setDecimalsCount($data['DecimalsCount']);
            } elseif (\array_key_exists('DecimalsCount', $data) && $data['DecimalsCount'] === null) {
                $object->setDecimalsCount(null);
            }
            if (\array_key_exists('LookupChoicesCount', $data) && $data['LookupChoicesCount'] !== null) {
                $object->setLookupChoicesCount($data['LookupChoicesCount']);
            } elseif (\array_key_exists('LookupChoicesCount', $data) && $data['LookupChoicesCount'] === null) {
                $object->setLookupChoicesCount(null);
            }
            if (\array_key_exists('SelectedLookupsCount', $data) && $data['SelectedLookupsCount'] !== null) {
                $object->setSelectedLookupsCount($data['SelectedLookupsCount']);
            } elseif (\array_key_exists('SelectedLookupsCount', $data) && $data['SelectedLookupsCount'] === null) {
                $object->setSelectedLookupsCount(null);
            }
            if (\array_key_exists('StringsCount', $data) && $data['StringsCount'] !== null) {
                $object->setStringsCount($data['StringsCount']);
            } elseif (\array_key_exists('StringsCount', $data) && $data['StringsCount'] === null) {
                $object->setStringsCount(null);
            }

            return $object;
        }

        public function normalize(mixed $object, ?string $format = null, array $context = []): array|string|int|float|bool|\ArrayObject|null
        {
            $data = [];
            if ($object->isInitialized('notepad') && null !== $object->getNotepad()) {
                $data['Notepad'] = $object->getNotepad();
            }
            if ($object->isInitialized('booleans') && null !== $object->getBooleans()) {
                $values = [];
                foreach ($object->getBooleans() as $value) {
                    $values[] = $value;
                }
                $data['Booleans'] = $values;
            }
            if ($object->isInitialized('dateTimes') && null !== $object->getDateTimes()) {
                $values_1 = [];
                foreach ($object->getDateTimes() as $value_1) {
                    $values_1[] = $value_1->format('Y-m-d\\TH:i:sP');
                }
                $data['DateTimes'] = $values_1;
            }
            if ($object->isInitialized('decimals') && null !== $object->getDecimals()) {
                $values_2 = [];
                foreach ($object->getDecimals() as $value_2) {
                    $values_2[] = $value_2;
                }
                $data['Decimals'] = $values_2;
            }
            if ($object->isInitialized('lookupChoices') && null !== $object->getLookupChoices()) {
                $values_3 = [];
                foreach ($object->getLookupChoices() as $value_3) {
                    $values_3[] = $value_3;
                }
                $data['LookupChoices'] = $values_3;
            }
            if ($object->isInitialized('selectedLookups') && null !== $object->getSelectedLookups()) {
                $values_4 = [];
                foreach ($object->getSelectedLookups() as $value_4) {
                    $values_5 = [];
                    foreach ($value_4 as $value_5) {
                        $values_5[] = $value_5;
                    }
                    $values_4[] = $values_5;
                }
                $data['SelectedLookups'] = $values_4;
            }
            if ($object->isInitialized('strings') && null !== $object->getStrings()) {
                $values_6 = [];
                foreach ($object->getStrings() as $value_6) {
                    $values_6[] = $value_6;
                }
                $data['Strings'] = $values_6;
            }
            if ($object->isInitialized('booleansCount') && null !== $object->getBooleansCount()) {
                $data['BooleansCount'] = $object->getBooleansCount();
            }
            if ($object->isInitialized('dateTimesCount') && null !== $object->getDateTimesCount()) {
                $data['DateTimesCount'] = $object->getDateTimesCount();
            }
            if ($object->isInitialized('decimalsCount') && null !== $object->getDecimalsCount()) {
                $data['DecimalsCount'] = $object->getDecimalsCount();
            }
            if ($object->isInitialized('lookupChoicesCount') && null !== $object->getLookupChoicesCount()) {
                $data['LookupChoicesCount'] = $object->getLookupChoicesCount();
            }
            if ($object->isInitialized('selectedLookupsCount') && null !== $object->getSelectedLookupsCount()) {
                $data['SelectedLookupsCount'] = $object->getSelectedLookupsCount();
            }
            if ($object->isInitialized('stringsCount') && null !== $object->getStringsCount()) {
                $data['StringsCount'] = $object->getStringsCount();
            }

            return $data;
        }

        public function getSupportedTypes(?string $format = null): array
        {
            return ['Cegid\\Api\\Model\\CegidMtsContactAdditionalContactUserDefinedData' => false];
        }
    }
} else {
    class CegidMtsContactAdditionalContactUserDefinedDataNormalizer implements DenormalizerInterface, NormalizerInterface, DenormalizerAwareInterface, NormalizerAwareInterface
    {
        use DenormalizerAwareTrait;
        use NormalizerAwareTrait;
        use CheckArray;
        use ValidatorTrait;

        public function supportsDenormalization($data, $type, ?string $format = null, array $context = []): bool
        {
            return $type === 'Cegid\\Api\\Model\\CegidMtsContactAdditionalContactUserDefinedData';
        }

        public function supportsNormalization(mixed $data, ?string $format = null, array $context = []): bool
        {
            return is_object($data) && get_class($data) === 'Cegid\\Api\\Model\\CegidMtsContactAdditionalContactUserDefinedData';
        }

        public function denormalize($data, $type, $format = null, array $context = [])
        {
            if (isset($data['$ref'])) {
                return new Reference($data['$ref'], $context['document-origin']);
            }
            if (isset($data['$recursiveRef'])) {
                return new Reference($data['$recursiveRef'], $context['document-origin']);
            }
            $object = new \Cegid\Api\Model\CegidMtsContactAdditionalContactUserDefinedData();
            if (null === $data || false === \is_array($data)) {
                return $object;
            }
            if (\array_key_exists('Notepad', $data) && $data['Notepad'] !== null) {
                $object->setNotepad($data['Notepad']);
            } elseif (\array_key_exists('Notepad', $data) && $data['Notepad'] === null) {
                $object->setNotepad(null);
            }
            if (\array_key_exists('Booleans', $data) && $data['Booleans'] !== null) {
                $values = [];
                foreach ($data['Booleans'] as $value) {
                    $values[] = $value;
                }
                $object->setBooleans($values);
            } elseif (\array_key_exists('Booleans', $data) && $data['Booleans'] === null) {
                $object->setBooleans(null);
            }
            if (\array_key_exists('DateTimes', $data) && $data['DateTimes'] !== null) {
                $values_1 = [];
                foreach ($data['DateTimes'] as $value_1) {
                    $values_1[] = \DateTime::createFromFormat('Y-m-d\\TH:i:sP', $value_1);
                }
                $object->setDateTimes($values_1);
            } elseif (\array_key_exists('DateTimes', $data) && $data['DateTimes'] === null) {
                $object->setDateTimes(null);
            }
            if (\array_key_exists('Decimals', $data) && $data['Decimals'] !== null) {
                $values_2 = [];
                foreach ($data['Decimals'] as $value_2) {
                    $values_2[] = $value_2;
                }
                $object->setDecimals($values_2);
            } elseif (\array_key_exists('Decimals', $data) && $data['Decimals'] === null) {
                $object->setDecimals(null);
            }
            if (\array_key_exists('LookupChoices', $data) && $data['LookupChoices'] !== null) {
                $values_3 = [];
                foreach ($data['LookupChoices'] as $value_3) {
                    $values_3[] = $value_3;
                }
                $object->setLookupChoices($values_3);
            } elseif (\array_key_exists('LookupChoices', $data) && $data['LookupChoices'] === null) {
                $object->setLookupChoices(null);
            }
            if (\array_key_exists('SelectedLookups', $data) && $data['SelectedLookups'] !== null) {
                $values_4 = [];
                foreach ($data['SelectedLookups'] as $value_4) {
                    $values_5 = [];
                    foreach ($value_4 as $value_5) {
                        $values_5[] = $value_5;
                    }
                    $values_4[] = $values_5;
                }
                $object->setSelectedLookups($values_4);
            } elseif (\array_key_exists('SelectedLookups', $data) && $data['SelectedLookups'] === null) {
                $object->setSelectedLookups(null);
            }
            if (\array_key_exists('Strings', $data) && $data['Strings'] !== null) {
                $values_6 = [];
                foreach ($data['Strings'] as $value_6) {
                    $values_6[] = $value_6;
                }
                $object->setStrings($values_6);
            } elseif (\array_key_exists('Strings', $data) && $data['Strings'] === null) {
                $object->setStrings(null);
            }
            if (\array_key_exists('BooleansCount', $data) && $data['BooleansCount'] !== null) {
                $object->setBooleansCount($data['BooleansCount']);
            } elseif (\array_key_exists('BooleansCount', $data) && $data['BooleansCount'] === null) {
                $object->setBooleansCount(null);
            }
            if (\array_key_exists('DateTimesCount', $data) && $data['DateTimesCount'] !== null) {
                $object->setDateTimesCount($data['DateTimesCount']);
            } elseif (\array_key_exists('DateTimesCount', $data) && $data['DateTimesCount'] === null) {
                $object->setDateTimesCount(null);
            }
            if (\array_key_exists('DecimalsCount', $data) && $data['DecimalsCount'] !== null) {
                $object->setDecimalsCount($data['DecimalsCount']);
            } elseif (\array_key_exists('DecimalsCount', $data) && $data['DecimalsCount'] === null) {
                $object->setDecimalsCount(null);
            }
            if (\array_key_exists('LookupChoicesCount', $data) && $data['LookupChoicesCount'] !== null) {
                $object->setLookupChoicesCount($data['LookupChoicesCount']);
            } elseif (\array_key_exists('LookupChoicesCount', $data) && $data['LookupChoicesCount'] === null) {
                $object->setLookupChoicesCount(null);
            }
            if (\array_key_exists('SelectedLookupsCount', $data) && $data['SelectedLookupsCount'] !== null) {
                $object->setSelectedLookupsCount($data['SelectedLookupsCount']);
            } elseif (\array_key_exists('SelectedLookupsCount', $data) && $data['SelectedLookupsCount'] === null) {
                $object->setSelectedLookupsCount(null);
            }
            if (\array_key_exists('StringsCount', $data) && $data['StringsCount'] !== null) {
                $object->setStringsCount($data['StringsCount']);
            } elseif (\array_key_exists('StringsCount', $data) && $data['StringsCount'] === null) {
                $object->setStringsCount(null);
            }

            return $object;
        }

        /**
         * @return array|string|int|float|bool|\ArrayObject|null
         */
        public function normalize($object, $format = null, array $context = [])
        {
            $data = [];
            if ($object->isInitialized('notepad') && null !== $object->getNotepad()) {
                $data['Notepad'] = $object->getNotepad();
            }
            if ($object->isInitialized('booleans') && null !== $object->getBooleans()) {
                $values = [];
                foreach ($object->getBooleans() as $value) {
                    $values[] = $value;
                }
                $data['Booleans'] = $values;
            }
            if ($object->isInitialized('dateTimes') && null !== $object->getDateTimes()) {
                $values_1 = [];
                foreach ($object->getDateTimes() as $value_1) {
                    $values_1[] = $value_1->format('Y-m-d\\TH:i:sP');
                }
                $data['DateTimes'] = $values_1;
            }
            if ($object->isInitialized('decimals') && null !== $object->getDecimals()) {
                $values_2 = [];
                foreach ($object->getDecimals() as $value_2) {
                    $values_2[] = $value_2;
                }
                $data['Decimals'] = $values_2;
            }
            if ($object->isInitialized('lookupChoices') && null !== $object->getLookupChoices()) {
                $values_3 = [];
                foreach ($object->getLookupChoices() as $value_3) {
                    $values_3[] = $value_3;
                }
                $data['LookupChoices'] = $values_3;
            }
            if ($object->isInitialized('selectedLookups') && null !== $object->getSelectedLookups()) {
                $values_4 = [];
                foreach ($object->getSelectedLookups() as $value_4) {
                    $values_5 = [];
                    foreach ($value_4 as $value_5) {
                        $values_5[] = $value_5;
                    }
                    $values_4[] = $values_5;
                }
                $data['SelectedLookups'] = $values_4;
            }
            if ($object->isInitialized('strings') && null !== $object->getStrings()) {
                $values_6 = [];
                foreach ($object->getStrings() as $value_6) {
                    $values_6[] = $value_6;
                }
                $data['Strings'] = $values_6;
            }
            if ($object->isInitialized('booleansCount') && null !== $object->getBooleansCount()) {
                $data['BooleansCount'] = $object->getBooleansCount();
            }
            if ($object->isInitialized('dateTimesCount') && null !== $object->getDateTimesCount()) {
                $data['DateTimesCount'] = $object->getDateTimesCount();
            }
            if ($object->isInitialized('decimalsCount') && null !== $object->getDecimalsCount()) {
                $data['DecimalsCount'] = $object->getDecimalsCount();
            }
            if ($object->isInitialized('lookupChoicesCount') && null !== $object->getLookupChoicesCount()) {
                $data['LookupChoicesCount'] = $object->getLookupChoicesCount();
            }
            if ($object->isInitialized('selectedLookupsCount') && null !== $object->getSelectedLookupsCount()) {
                $data['SelectedLookupsCount'] = $object->getSelectedLookupsCount();
            }
            if ($object->isInitialized('stringsCount') && null !== $object->getStringsCount()) {
                $data['StringsCount'] = $object->getStringsCount();
            }

            return $data;
        }

        public function getSupportedTypes(?string $format = null): array
        {
            return ['Cegid\\Api\\Model\\CegidMtsContactAdditionalContactUserDefinedData' => false];
        }
    }
}
