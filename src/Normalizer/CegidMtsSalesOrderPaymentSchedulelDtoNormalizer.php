<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Cegid\Api\Normalizer;

use Cegid\Api\Runtime\Normalizer\CheckArray;
use Cegid\Api\Runtime\Normalizer\ValidatorTrait;
use Jane\Component\JsonSchemaRuntime\Reference;
use Symfony\Component\HttpKernel\Kernel;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\DenormalizerInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\NormalizerInterface;

if (!class_exists(Kernel::class) or (Kernel::MAJOR_VERSION >= 7 or Kernel::MAJOR_VERSION === 6 and Kernel::MINOR_VERSION === 4)) {
    class CegidMtsSalesOrderPaymentSchedulelDtoNormalizer implements DenormalizerInterface, NormalizerInterface, DenormalizerAwareInterface, NormalizerAwareInterface
    {
        use DenormalizerAwareTrait;
        use NormalizerAwareTrait;
        use CheckArray;
        use ValidatorTrait;

        public function supportsDenormalization(mixed $data, string $type, ?string $format = null, array $context = []): bool
        {
            return $type === 'Cegid\\Api\\Model\\CegidMtsSalesOrderPaymentSchedulelDto';
        }

        public function supportsNormalization(mixed $data, ?string $format = null, array $context = []): bool
        {
            return is_object($data) && get_class($data) === 'Cegid\\Api\\Model\\CegidMtsSalesOrderPaymentSchedulelDto';
        }

        public function denormalize(mixed $data, string $type, ?string $format = null, array $context = []): mixed
        {
            if (isset($data['$ref'])) {
                return new Reference($data['$ref'], $context['document-origin']);
            }
            if (isset($data['$recursiveRef'])) {
                return new Reference($data['$recursiveRef'], $context['document-origin']);
            }
            $object = new \Cegid\Api\Model\CegidMtsSalesOrderPaymentSchedulelDto();
            if (\array_key_exists('InstallmentAmountInCurrency', $data) && \is_int($data['InstallmentAmountInCurrency'])) {
                $data['InstallmentAmountInCurrency'] = (float) $data['InstallmentAmountInCurrency'];
            }
            if (null === $data || false === \is_array($data)) {
                return $object;
            }
            if (\array_key_exists('DocumentType', $data) && $data['DocumentType'] !== null) {
                $object->setDocumentType($data['DocumentType']);
            } elseif (\array_key_exists('DocumentType', $data) && $data['DocumentType'] === null) {
                $object->setDocumentType(null);
            }
            if (\array_key_exists('DocumentStub', $data) && $data['DocumentStub'] !== null) {
                $object->setDocumentStub($data['DocumentStub']);
            } elseif (\array_key_exists('DocumentStub', $data) && $data['DocumentStub'] === null) {
                $object->setDocumentStub(null);
            }
            if (\array_key_exists('Number', $data) && $data['Number'] !== null) {
                $object->setNumber($data['Number']);
            } elseif (\array_key_exists('Number', $data) && $data['Number'] === null) {
                $object->setNumber(null);
            }
            if (\array_key_exists('Index', $data) && $data['Index'] !== null) {
                $object->setIndex($data['Index']);
            } elseif (\array_key_exists('Index', $data) && $data['Index'] === null) {
                $object->setIndex(null);
            }
            if (\array_key_exists('DueNumber', $data) && $data['DueNumber'] !== null) {
                $object->setDueNumber($data['DueNumber']);
            } elseif (\array_key_exists('DueNumber', $data) && $data['DueNumber'] === null) {
                $object->setDueNumber(null);
            }
            if (\array_key_exists('DueDate', $data) && $data['DueDate'] !== null) {
                $object->setDueDate(\DateTime::createFromFormat('Y-m-d\\TH:i:sP', $data['DueDate']));
            } elseif (\array_key_exists('DueDate', $data) && $data['DueDate'] === null) {
                $object->setDueDate(null);
            }
            if (\array_key_exists('DuePaymentMethodCode', $data) && $data['DuePaymentMethodCode'] !== null) {
                $object->setDuePaymentMethodCode($data['DuePaymentMethodCode']);
            } elseif (\array_key_exists('DuePaymentMethodCode', $data) && $data['DuePaymentMethodCode'] === null) {
                $object->setDuePaymentMethodCode(null);
            }
            if (\array_key_exists('InstallmentAmountInCurrency', $data) && $data['InstallmentAmountInCurrency'] !== null) {
                $object->setInstallmentAmountInCurrency($data['InstallmentAmountInCurrency']);
            } elseif (\array_key_exists('InstallmentAmountInCurrency', $data) && $data['InstallmentAmountInCurrency'] === null) {
                $object->setInstallmentAmountInCurrency(null);
            }

            return $object;
        }

        public function normalize(mixed $object, ?string $format = null, array $context = []): array|string|int|float|bool|\ArrayObject|null
        {
            $data = [];
            if ($object->isInitialized('documentType') && null !== $object->getDocumentType()) {
                $data['DocumentType'] = $object->getDocumentType();
            }
            if ($object->isInitialized('documentStub') && null !== $object->getDocumentStub()) {
                $data['DocumentStub'] = $object->getDocumentStub();
            }
            if ($object->isInitialized('number') && null !== $object->getNumber()) {
                $data['Number'] = $object->getNumber();
            }
            if ($object->isInitialized('index') && null !== $object->getIndex()) {
                $data['Index'] = $object->getIndex();
            }
            if ($object->isInitialized('dueNumber') && null !== $object->getDueNumber()) {
                $data['DueNumber'] = $object->getDueNumber();
            }
            if ($object->isInitialized('dueDate') && null !== $object->getDueDate()) {
                $data['DueDate'] = $object->getDueDate()->format('Y-m-d\\TH:i:sP');
            }
            if ($object->isInitialized('duePaymentMethodCode') && null !== $object->getDuePaymentMethodCode()) {
                $data['DuePaymentMethodCode'] = $object->getDuePaymentMethodCode();
            }
            if ($object->isInitialized('installmentAmountInCurrency') && null !== $object->getInstallmentAmountInCurrency()) {
                $data['InstallmentAmountInCurrency'] = $object->getInstallmentAmountInCurrency();
            }

            return $data;
        }

        public function getSupportedTypes(?string $format = null): array
        {
            return ['Cegid\\Api\\Model\\CegidMtsSalesOrderPaymentSchedulelDto' => false];
        }
    }
} else {
    class CegidMtsSalesOrderPaymentSchedulelDtoNormalizer implements DenormalizerInterface, NormalizerInterface, DenormalizerAwareInterface, NormalizerAwareInterface
    {
        use DenormalizerAwareTrait;
        use NormalizerAwareTrait;
        use CheckArray;
        use ValidatorTrait;

        public function supportsDenormalization($data, $type, ?string $format = null, array $context = []): bool
        {
            return $type === 'Cegid\\Api\\Model\\CegidMtsSalesOrderPaymentSchedulelDto';
        }

        public function supportsNormalization(mixed $data, ?string $format = null, array $context = []): bool
        {
            return is_object($data) && get_class($data) === 'Cegid\\Api\\Model\\CegidMtsSalesOrderPaymentSchedulelDto';
        }

        public function denormalize($data, $type, $format = null, array $context = [])
        {
            if (isset($data['$ref'])) {
                return new Reference($data['$ref'], $context['document-origin']);
            }
            if (isset($data['$recursiveRef'])) {
                return new Reference($data['$recursiveRef'], $context['document-origin']);
            }
            $object = new \Cegid\Api\Model\CegidMtsSalesOrderPaymentSchedulelDto();
            if (\array_key_exists('InstallmentAmountInCurrency', $data) && \is_int($data['InstallmentAmountInCurrency'])) {
                $data['InstallmentAmountInCurrency'] = (float) $data['InstallmentAmountInCurrency'];
            }
            if (null === $data || false === \is_array($data)) {
                return $object;
            }
            if (\array_key_exists('DocumentType', $data) && $data['DocumentType'] !== null) {
                $object->setDocumentType($data['DocumentType']);
            } elseif (\array_key_exists('DocumentType', $data) && $data['DocumentType'] === null) {
                $object->setDocumentType(null);
            }
            if (\array_key_exists('DocumentStub', $data) && $data['DocumentStub'] !== null) {
                $object->setDocumentStub($data['DocumentStub']);
            } elseif (\array_key_exists('DocumentStub', $data) && $data['DocumentStub'] === null) {
                $object->setDocumentStub(null);
            }
            if (\array_key_exists('Number', $data) && $data['Number'] !== null) {
                $object->setNumber($data['Number']);
            } elseif (\array_key_exists('Number', $data) && $data['Number'] === null) {
                $object->setNumber(null);
            }
            if (\array_key_exists('Index', $data) && $data['Index'] !== null) {
                $object->setIndex($data['Index']);
            } elseif (\array_key_exists('Index', $data) && $data['Index'] === null) {
                $object->setIndex(null);
            }
            if (\array_key_exists('DueNumber', $data) && $data['DueNumber'] !== null) {
                $object->setDueNumber($data['DueNumber']);
            } elseif (\array_key_exists('DueNumber', $data) && $data['DueNumber'] === null) {
                $object->setDueNumber(null);
            }
            if (\array_key_exists('DueDate', $data) && $data['DueDate'] !== null) {
                $object->setDueDate(\DateTime::createFromFormat('Y-m-d\\TH:i:sP', $data['DueDate']));
            } elseif (\array_key_exists('DueDate', $data) && $data['DueDate'] === null) {
                $object->setDueDate(null);
            }
            if (\array_key_exists('DuePaymentMethodCode', $data) && $data['DuePaymentMethodCode'] !== null) {
                $object->setDuePaymentMethodCode($data['DuePaymentMethodCode']);
            } elseif (\array_key_exists('DuePaymentMethodCode', $data) && $data['DuePaymentMethodCode'] === null) {
                $object->setDuePaymentMethodCode(null);
            }
            if (\array_key_exists('InstallmentAmountInCurrency', $data) && $data['InstallmentAmountInCurrency'] !== null) {
                $object->setInstallmentAmountInCurrency($data['InstallmentAmountInCurrency']);
            } elseif (\array_key_exists('InstallmentAmountInCurrency', $data) && $data['InstallmentAmountInCurrency'] === null) {
                $object->setInstallmentAmountInCurrency(null);
            }

            return $object;
        }

        /**
         * @return array|string|int|float|bool|\ArrayObject|null
         */
        public function normalize($object, $format = null, array $context = [])
        {
            $data = [];
            if ($object->isInitialized('documentType') && null !== $object->getDocumentType()) {
                $data['DocumentType'] = $object->getDocumentType();
            }
            if ($object->isInitialized('documentStub') && null !== $object->getDocumentStub()) {
                $data['DocumentStub'] = $object->getDocumentStub();
            }
            if ($object->isInitialized('number') && null !== $object->getNumber()) {
                $data['Number'] = $object->getNumber();
            }
            if ($object->isInitialized('index') && null !== $object->getIndex()) {
                $data['Index'] = $object->getIndex();
            }
            if ($object->isInitialized('dueNumber') && null !== $object->getDueNumber()) {
                $data['DueNumber'] = $object->getDueNumber();
            }
            if ($object->isInitialized('dueDate') && null !== $object->getDueDate()) {
                $data['DueDate'] = $object->getDueDate()->format('Y-m-d\\TH:i:sP');
            }
            if ($object->isInitialized('duePaymentMethodCode') && null !== $object->getDuePaymentMethodCode()) {
                $data['DuePaymentMethodCode'] = $object->getDuePaymentMethodCode();
            }
            if ($object->isInitialized('installmentAmountInCurrency') && null !== $object->getInstallmentAmountInCurrency()) {
                $data['InstallmentAmountInCurrency'] = $object->getInstallmentAmountInCurrency();
            }

            return $data;
        }

        public function getSupportedTypes(?string $format = null): array
        {
            return ['Cegid\\Api\\Model\\CegidMtsSalesOrderPaymentSchedulelDto' => false];
        }
    }
}
