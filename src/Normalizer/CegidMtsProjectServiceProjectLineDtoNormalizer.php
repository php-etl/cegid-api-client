<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Cegid\Api\Normalizer;

use Cegid\Api\Runtime\Normalizer\CheckArray;
use Cegid\Api\Runtime\Normalizer\ValidatorTrait;
use Jane\Component\JsonSchemaRuntime\Reference;
use Symfony\Component\HttpKernel\Kernel;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\DenormalizerInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\NormalizerInterface;

if (!class_exists(Kernel::class) or (Kernel::MAJOR_VERSION >= 7 or Kernel::MAJOR_VERSION === 6 and Kernel::MINOR_VERSION === 4)) {
    class CegidMtsProjectServiceProjectLineDtoNormalizer implements DenormalizerInterface, NormalizerInterface, DenormalizerAwareInterface, NormalizerAwareInterface
    {
        use DenormalizerAwareTrait;
        use NormalizerAwareTrait;
        use CheckArray;
        use ValidatorTrait;

        public function supportsDenormalization(mixed $data, string $type, ?string $format = null, array $context = []): bool
        {
            return $type === 'Cegid\\Api\\Model\\CegidMtsProjectServiceProjectLineDto';
        }

        public function supportsNormalization(mixed $data, ?string $format = null, array $context = []): bool
        {
            return is_object($data) && get_class($data) === 'Cegid\\Api\\Model\\CegidMtsProjectServiceProjectLineDto';
        }

        public function denormalize(mixed $data, string $type, ?string $format = null, array $context = []): mixed
        {
            if (isset($data['$ref'])) {
                return new Reference($data['$ref'], $context['document-origin']);
            }
            if (isset($data['$recursiveRef'])) {
                return new Reference($data['$recursiveRef'], $context['document-origin']);
            }
            $object = new \Cegid\Api\Model\CegidMtsProjectServiceProjectLineDto();
            if (null === $data || false === \is_array($data)) {
                return $object;
            }
            if (\array_key_exists('startDate', $data) && $data['startDate'] !== null) {
                $object->setStartDate(\DateTime::createFromFormat('Y-m-d\\TH:i:sP', $data['startDate']));
            } elseif (\array_key_exists('startDate', $data) && $data['startDate'] === null) {
                $object->setStartDate(null);
            }
            if (\array_key_exists('endDate', $data) && $data['endDate'] !== null) {
                $object->setEndDate(\DateTime::createFromFormat('Y-m-d\\TH:i:sP', $data['endDate']));
            } elseif (\array_key_exists('endDate', $data) && $data['endDate'] === null) {
                $object->setEndDate(null);
            }
            if (\array_key_exists('ItemDescription', $data) && $data['ItemDescription'] !== null) {
                $object->setItemDescription($data['ItemDescription']);
            } elseif (\array_key_exists('ItemDescription', $data) && $data['ItemDescription'] === null) {
                $object->setItemDescription(null);
            }
            if (\array_key_exists('ItemCode', $data) && $data['ItemCode'] !== null) {
                $object->setItemCode($data['ItemCode']);
            } elseif (\array_key_exists('ItemCode', $data) && $data['ItemCode'] === null) {
                $object->setItemCode(null);
            }
            if (\array_key_exists('ProjectType', $data) && $data['ProjectType'] !== null) {
                $object->setProjectType($data['ProjectType']);
            } elseif (\array_key_exists('ProjectType', $data) && $data['ProjectType'] === null) {
                $object->setProjectType(null);
            }
            if (\array_key_exists('ProjectCode', $data) && $data['ProjectCode'] !== null) {
                $object->setProjectCode($data['ProjectCode']);
            } elseif (\array_key_exists('ProjectCode', $data) && $data['ProjectCode'] === null) {
                $object->setProjectCode(null);
            }
            if (\array_key_exists('ProjectDescription', $data) && $data['ProjectDescription'] !== null) {
                $object->setProjectDescription($data['ProjectDescription']);
            } elseif (\array_key_exists('ProjectDescription', $data) && $data['ProjectDescription'] === null) {
                $object->setProjectDescription(null);
            }
            if (\array_key_exists('FormattedProjectLabel', $data) && $data['FormattedProjectLabel'] !== null) {
                $object->setFormattedProjectLabel($data['FormattedProjectLabel']);
            } elseif (\array_key_exists('FormattedProjectLabel', $data) && $data['FormattedProjectLabel'] === null) {
                $object->setFormattedProjectLabel(null);
            }
            if (\array_key_exists('ActivityUnit', $data) && $data['ActivityUnit'] !== null) {
                $object->setActivityUnit($data['ActivityUnit']);
            } elseif (\array_key_exists('ActivityUnit', $data) && $data['ActivityUnit'] === null) {
                $object->setActivityUnit(null);
            }
            if (\array_key_exists('LineOrderNumber', $data) && $data['LineOrderNumber'] !== null) {
                $object->setLineOrderNumber($data['LineOrderNumber']);
            } elseif (\array_key_exists('LineOrderNumber', $data) && $data['LineOrderNumber'] === null) {
                $object->setLineOrderNumber(null);
            }

            return $object;
        }

        public function normalize(mixed $object, ?string $format = null, array $context = []): array|string|int|float|bool|\ArrayObject|null
        {
            $data = [];
            if ($object->isInitialized('startDate') && null !== $object->getStartDate()) {
                $data['startDate'] = $object->getStartDate()->format('Y-m-d\\TH:i:sP');
            }
            if ($object->isInitialized('endDate') && null !== $object->getEndDate()) {
                $data['endDate'] = $object->getEndDate()->format('Y-m-d\\TH:i:sP');
            }
            if ($object->isInitialized('itemDescription') && null !== $object->getItemDescription()) {
                $data['ItemDescription'] = $object->getItemDescription();
            }
            if ($object->isInitialized('itemCode') && null !== $object->getItemCode()) {
                $data['ItemCode'] = $object->getItemCode();
            }
            if ($object->isInitialized('projectType') && null !== $object->getProjectType()) {
                $data['ProjectType'] = $object->getProjectType();
            }
            if ($object->isInitialized('projectCode') && null !== $object->getProjectCode()) {
                $data['ProjectCode'] = $object->getProjectCode();
            }
            if ($object->isInitialized('projectDescription') && null !== $object->getProjectDescription()) {
                $data['ProjectDescription'] = $object->getProjectDescription();
            }
            if ($object->isInitialized('formattedProjectLabel') && null !== $object->getFormattedProjectLabel()) {
                $data['FormattedProjectLabel'] = $object->getFormattedProjectLabel();
            }
            if ($object->isInitialized('activityUnit') && null !== $object->getActivityUnit()) {
                $data['ActivityUnit'] = $object->getActivityUnit();
            }
            if ($object->isInitialized('lineOrderNumber') && null !== $object->getLineOrderNumber()) {
                $data['LineOrderNumber'] = $object->getLineOrderNumber();
            }

            return $data;
        }

        public function getSupportedTypes(?string $format = null): array
        {
            return ['Cegid\\Api\\Model\\CegidMtsProjectServiceProjectLineDto' => false];
        }
    }
} else {
    class CegidMtsProjectServiceProjectLineDtoNormalizer implements DenormalizerInterface, NormalizerInterface, DenormalizerAwareInterface, NormalizerAwareInterface
    {
        use DenormalizerAwareTrait;
        use NormalizerAwareTrait;
        use CheckArray;
        use ValidatorTrait;

        public function supportsDenormalization($data, $type, ?string $format = null, array $context = []): bool
        {
            return $type === 'Cegid\\Api\\Model\\CegidMtsProjectServiceProjectLineDto';
        }

        public function supportsNormalization(mixed $data, ?string $format = null, array $context = []): bool
        {
            return is_object($data) && get_class($data) === 'Cegid\\Api\\Model\\CegidMtsProjectServiceProjectLineDto';
        }

        public function denormalize($data, $type, $format = null, array $context = [])
        {
            if (isset($data['$ref'])) {
                return new Reference($data['$ref'], $context['document-origin']);
            }
            if (isset($data['$recursiveRef'])) {
                return new Reference($data['$recursiveRef'], $context['document-origin']);
            }
            $object = new \Cegid\Api\Model\CegidMtsProjectServiceProjectLineDto();
            if (null === $data || false === \is_array($data)) {
                return $object;
            }
            if (\array_key_exists('startDate', $data) && $data['startDate'] !== null) {
                $object->setStartDate(\DateTime::createFromFormat('Y-m-d\\TH:i:sP', $data['startDate']));
            } elseif (\array_key_exists('startDate', $data) && $data['startDate'] === null) {
                $object->setStartDate(null);
            }
            if (\array_key_exists('endDate', $data) && $data['endDate'] !== null) {
                $object->setEndDate(\DateTime::createFromFormat('Y-m-d\\TH:i:sP', $data['endDate']));
            } elseif (\array_key_exists('endDate', $data) && $data['endDate'] === null) {
                $object->setEndDate(null);
            }
            if (\array_key_exists('ItemDescription', $data) && $data['ItemDescription'] !== null) {
                $object->setItemDescription($data['ItemDescription']);
            } elseif (\array_key_exists('ItemDescription', $data) && $data['ItemDescription'] === null) {
                $object->setItemDescription(null);
            }
            if (\array_key_exists('ItemCode', $data) && $data['ItemCode'] !== null) {
                $object->setItemCode($data['ItemCode']);
            } elseif (\array_key_exists('ItemCode', $data) && $data['ItemCode'] === null) {
                $object->setItemCode(null);
            }
            if (\array_key_exists('ProjectType', $data) && $data['ProjectType'] !== null) {
                $object->setProjectType($data['ProjectType']);
            } elseif (\array_key_exists('ProjectType', $data) && $data['ProjectType'] === null) {
                $object->setProjectType(null);
            }
            if (\array_key_exists('ProjectCode', $data) && $data['ProjectCode'] !== null) {
                $object->setProjectCode($data['ProjectCode']);
            } elseif (\array_key_exists('ProjectCode', $data) && $data['ProjectCode'] === null) {
                $object->setProjectCode(null);
            }
            if (\array_key_exists('ProjectDescription', $data) && $data['ProjectDescription'] !== null) {
                $object->setProjectDescription($data['ProjectDescription']);
            } elseif (\array_key_exists('ProjectDescription', $data) && $data['ProjectDescription'] === null) {
                $object->setProjectDescription(null);
            }
            if (\array_key_exists('FormattedProjectLabel', $data) && $data['FormattedProjectLabel'] !== null) {
                $object->setFormattedProjectLabel($data['FormattedProjectLabel']);
            } elseif (\array_key_exists('FormattedProjectLabel', $data) && $data['FormattedProjectLabel'] === null) {
                $object->setFormattedProjectLabel(null);
            }
            if (\array_key_exists('ActivityUnit', $data) && $data['ActivityUnit'] !== null) {
                $object->setActivityUnit($data['ActivityUnit']);
            } elseif (\array_key_exists('ActivityUnit', $data) && $data['ActivityUnit'] === null) {
                $object->setActivityUnit(null);
            }
            if (\array_key_exists('LineOrderNumber', $data) && $data['LineOrderNumber'] !== null) {
                $object->setLineOrderNumber($data['LineOrderNumber']);
            } elseif (\array_key_exists('LineOrderNumber', $data) && $data['LineOrderNumber'] === null) {
                $object->setLineOrderNumber(null);
            }

            return $object;
        }

        /**
         * @return array|string|int|float|bool|\ArrayObject|null
         */
        public function normalize($object, $format = null, array $context = [])
        {
            $data = [];
            if ($object->isInitialized('startDate') && null !== $object->getStartDate()) {
                $data['startDate'] = $object->getStartDate()->format('Y-m-d\\TH:i:sP');
            }
            if ($object->isInitialized('endDate') && null !== $object->getEndDate()) {
                $data['endDate'] = $object->getEndDate()->format('Y-m-d\\TH:i:sP');
            }
            if ($object->isInitialized('itemDescription') && null !== $object->getItemDescription()) {
                $data['ItemDescription'] = $object->getItemDescription();
            }
            if ($object->isInitialized('itemCode') && null !== $object->getItemCode()) {
                $data['ItemCode'] = $object->getItemCode();
            }
            if ($object->isInitialized('projectType') && null !== $object->getProjectType()) {
                $data['ProjectType'] = $object->getProjectType();
            }
            if ($object->isInitialized('projectCode') && null !== $object->getProjectCode()) {
                $data['ProjectCode'] = $object->getProjectCode();
            }
            if ($object->isInitialized('projectDescription') && null !== $object->getProjectDescription()) {
                $data['ProjectDescription'] = $object->getProjectDescription();
            }
            if ($object->isInitialized('formattedProjectLabel') && null !== $object->getFormattedProjectLabel()) {
                $data['FormattedProjectLabel'] = $object->getFormattedProjectLabel();
            }
            if ($object->isInitialized('activityUnit') && null !== $object->getActivityUnit()) {
                $data['ActivityUnit'] = $object->getActivityUnit();
            }
            if ($object->isInitialized('lineOrderNumber') && null !== $object->getLineOrderNumber()) {
                $data['LineOrderNumber'] = $object->getLineOrderNumber();
            }

            return $data;
        }

        public function getSupportedTypes(?string $format = null): array
        {
            return ['Cegid\\Api\\Model\\CegidMtsProjectServiceProjectLineDto' => false];
        }
    }
}
