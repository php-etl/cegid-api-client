<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Cegid\Api;

class Client extends Runtime\Client\Client
{
    /**
     * @param string $folderId        Identifiant de dossier
     * @param array  $queryParameters {
     *
     * @var int    $actionNumber Numéro d'action
     * @var string $thirdparty Tiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return Model\CegidMtsActionV1ActionDtoReader|\Psr\Http\Message\ResponseInterface
     *
     * @throws Exception\UnexpectedStatusCodeException
     */
    public function v1FolderIdActionsSingle(string $folderId, array $queryParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new Endpoint\V1FolderIdActionsSingle($folderId, $queryParameters), $fetch);
    }

    /**
     * @param string $folderId Identifiant de dossier
     * @param string $fetch    Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return Model\SystemWebODataPageResultCegidMtsActionV1ActionDtoReader|\Psr\Http\Message\ResponseInterface
     *
     * @throws Exception\UnexpectedStatusCodeException
     */
    public function v1FolderIdActionsList(string $folderId, string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new Endpoint\V1FolderIdActionsList($folderId), $fetch);
    }

    /**
     * @param string $folderId        Identifiant de dossier
     * @param array  $queryParameters {
     *
     * @var string $salesman Code du commercial
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return Model\SystemWebODataPageResultCegidMtsActionV1ActionDtoReader|\Psr\Http\Message\ResponseInterface
     *
     * @throws Exception\UnexpectedStatusCodeException
     */
    public function v1FolderIdActionsListBySalesman(string $folderId, array $queryParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new Endpoint\V1FolderIdActionsListBySalesman($folderId, $queryParameters), $fetch);
    }

    /**
     * @param string $folderId Identifiant de dossier
     * @param string $fetch    Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     *
     * @throws Exception\UnexpectedStatusCodeException
     */
    public function v1FolderIdActionsDelete(string $folderId, Model\CegidMtsActionV1ActionKeyThirdParty $actionData, string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new Endpoint\V1FolderIdActionsDelete($folderId, $actionData), $fetch);
    }

    /**
     * @param string                           $folderId Identifiant de dossier
     * @param Model\CegidMtsActionV1ActionDtoG $action   Les champs typés object dans model ne sont pas modifiables
     * @param string                           $fetch    Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     *
     * @throws Exception\UnexpectedStatusCodeException
     */
    public function v1FolderIdActionsUpdate(string $folderId, Model\CegidMtsActionV1ActionDtoG $action, string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new Endpoint\V1FolderIdActionsUpdate($folderId, $action), $fetch);
    }

    /**
     * @param string                           $folderId Identifiant de dossier
     * @param Model\CegidMtsActionV1ActionDtoC $action   Les champs typés object dans model ne sont pas modifiables
     * @param string                           $fetch    Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return Model\CegidMtsActionV1ActionReplyKeysData|\Psr\Http\Message\ResponseInterface
     *
     * @throws Exception\UnexpectedStatusCodeException
     */
    public function v1FolderIdActionsCreate(string $folderId, Model\CegidMtsActionV1ActionDtoC $action, string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new Endpoint\V1FolderIdActionsCreate($folderId, $action), $fetch);
    }

    /**
     * @param string $folderId Identifiant de dossier
     * @param string $fetch    Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return Model\CegidMtsActionV1ActionDto|\Psr\Http\Message\ResponseInterface
     *
     * @throws Exception\UnexpectedStatusCodeException
     */
    public function v1FolderIdActionsGetNew(string $folderId, string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new Endpoint\V1FolderIdActionsGetNew($folderId), $fetch);
    }

    /**
     * @param string $folderId Identifiant de dossier
     * @param string $fetch    Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return Model\CegidMtsFrameworkServicesAccessRights|\Psr\Http\Message\ResponseInterface
     *
     * @throws Exception\UnexpectedStatusCodeException
     */
    public function v1FolderIdActionsGetAccessRights(string $folderId, string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new Endpoint\V1FolderIdActionsGetAccessRights($folderId), $fetch);
    }

    /**
     * @param string $folderId        Identifiant de dossier
     * @param array  $queryParameters {
     *
     * @var string $subsidiary Auxiliaire
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     *
     * @throws Exception\UnexpectedStatusCodeException
     */
    public function v1FolderIdActionsGetDefaultSupervisor(string $folderId, array $queryParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new Endpoint\V1FolderIdActionsGetDefaultSupervisor($folderId, $queryParameters), $fetch);
    }

    /**
     * @param string $folderId Identifiant de dossier
     * @param string $fetch    Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return Model\CegidMtsActivityActivityBaseDto|\Psr\Http\Message\ResponseInterface
     *
     * @throws Exception\UnexpectedStatusCodeException
     */
    public function v1FolderIdActivitiesGetNew(string $folderId, string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new Endpoint\V1FolderIdActivitiesGetNew($folderId), $fetch);
    }

    /**
     * @param string $folderId        Identifiant de dossier
     * @param array  $queryParameters {
     *
     * @var string $activityType Type activité
     * @var string $project Code affaire
     * @var int    $singleLineNumber N° ligne unique par affaire
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     *
     * @throws Exception\UnexpectedStatusCodeException
     */
    public function v1FolderIdActivitiesDelete(string $folderId, array $queryParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new Endpoint\V1FolderIdActivitiesDelete($folderId, $queryParameters), $fetch);
    }

    /**
     * @param string $folderId        Identifiant de dossier
     * @param array  $queryParameters {
     *
     * @var string $activityType Type activité
     * @var string $project Code affaire
     * @var int    $singleLineNumber N° ligne unique par affaire
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return Model\CegidMtsActivityActivityBaseDto|\Psr\Http\Message\ResponseInterface
     *
     * @throws Exception\UnexpectedStatusCodeException
     */
    public function v1FolderIdActivitiesRetrieve(string $folderId, array $queryParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new Endpoint\V1FolderIdActivitiesRetrieve($folderId, $queryParameters), $fetch);
    }

    /**
     * @param string                                $folderId Identifiant de dossier
     * @param Model\CegidMtsActivityActivityBaseDto $activity Données nécessaires à la création d'une ligne d'activité
     * @param string                                $fetch    Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return Model\CegidMtsActivityActivityBaseDto|\Psr\Http\Message\ResponseInterface
     *
     * @throws Exception\UnexpectedStatusCodeException
     */
    public function v1FolderIdActivitiesCreate(string $folderId, Model\CegidMtsActivityActivityBaseDto $activity, string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new Endpoint\V1FolderIdActivitiesCreate($folderId, $activity), $fetch);
    }

    /**
     * @param string                                $folderId Identifiant de dossier
     * @param Model\CegidMtsActivityActivityBaseDto $activity Données à modifier et données de la clé d'une ligne d'activité
     * @param string                                $fetch    Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return Model\CegidMtsActivityActivityKey|\Psr\Http\Message\ResponseInterface
     *
     * @throws Exception\UnexpectedStatusCodeException
     */
    public function v1FolderIdActivitiesUpdate(string $folderId, Model\CegidMtsActivityActivityBaseDto $activity, string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new Endpoint\V1FolderIdActivitiesUpdate($folderId, $activity), $fetch);
    }

    /**
     * @param string                                             $folderId   Identifiant de dossier
     * @param \Cegid\Api\Model\CegidMtsActivityActivityBaseDto[] $activities Liste des données nécessaires à la création des lignes d'activité
     * @param string                                             $fetch      Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return \Cegid\Api\Model\CegidMtsActivityActivityBaseDto[]|\Psr\Http\Message\ResponseInterface
     *
     * @throws Exception\UnexpectedStatusCodeException
     */
    public function v1FolderIdActivitiesCreates(string $folderId, array $activities, string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new Endpoint\V1FolderIdActivitiesCreates($folderId, $activities), $fetch);
    }

    /**
     * @param string $folderId Identifiant de dossier
     * @param string $fetch    Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return Model\SystemWebODataPageResultCegidMtsActivityActivityBaseDtoReader|\Psr\Http\Message\ResponseInterface
     *
     * @throws Exception\UnexpectedStatusCodeException
     */
    public function v1FolderIdActivitiesList(string $folderId, string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new Endpoint\V1FolderIdActivitiesList($folderId), $fetch);
    }

    /**
     * @param string $folderId        Identifiant de dossier
     * @param array  $queryParameters {
     *
     * @var string $resource Code ressource
     * @var string $endDate Dernière date d'activité
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     *
     * @throws Exception\UnexpectedStatusCodeException
     */
    public function v1FolderIdActivitiesSubmitWorkActivities(string $folderId, array $queryParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new Endpoint\V1FolderIdActivitiesSubmitWorkActivities($folderId, $queryParameters), $fetch);
    }

    /**
     * @param string $folderId        Identifiant de dossier
     * @param array  $queryParameters {
     *
     * @var string $resource Code ressource
     * @var string $startPeriod Date de début de la période
     * @var string $endPeriod Date de fin de la période
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return \Cegid\Api\Model\CegidMtsActivityActivityActivityReaderDtoPeriodInformationsDto[]|\Psr\Http\Message\ResponseInterface
     *
     * @throws Exception\UnexpectedStatusCodeException
     */
    public function v1FolderIdActivitiesPeriodInformations(string $folderId, array $queryParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new Endpoint\V1FolderIdActivitiesPeriodInformations($folderId, $queryParameters), $fetch);
    }

    /**
     * @param string $folderId Identifiant de dossier
     * @param string $fetch    Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return Model\CegidMtsFrameworkServicesAccessRights|\Psr\Http\Message\ResponseInterface
     *
     * @throws Exception\UnexpectedStatusCodeException
     */
    public function v1FolderIdActivitiesGetAccessRights(string $folderId, string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new Endpoint\V1FolderIdActivitiesGetAccessRights($folderId), $fetch);
    }

    /**
     * @param string                                              $folderId              Identifiant de dossier
     * @param Model\CegidMtsActivityReplicationWeekWorkParameters $replicationParameters Paramètres de la réplication d'une semaine d'activité
     * @param string                                              $fetch                 Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     *
     * @throws Exception\UnexpectedStatusCodeException
     */
    public function v1FolderIdActivitiesReplicationWeekWork(string $folderId, Model\CegidMtsActivityReplicationWeekWorkParameters $replicationParameters, string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new Endpoint\V1FolderIdActivitiesReplicationWeekWork($folderId, $replicationParameters), $fetch);
    }

    /**
     * @param string $folderId Identifiant de dossier
     * @param string $fetch    Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return Model\CegidMtsActivityExpensesSheetExpensesSheetBaseDto|\Psr\Http\Message\ResponseInterface
     *
     * @throws Exception\UnexpectedStatusCodeException
     */
    public function v1FolderIdActivitiesExpensesSheetsGetNew(string $folderId, string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new Endpoint\V1FolderIdActivitiesExpensesSheetsGetNew($folderId), $fetch);
    }

    /**
     * @param string $folderId        Identifiant de dossier
     * @param array  $queryParameters {
     *
     * @var int $ExpensesSheetId Numéro de la note de frais
     *          }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return Model\CegidMtsActivityExpensesSheetExpensesSheetBaseDto|\Psr\Http\Message\ResponseInterface
     *
     * @throws Exception\UnexpectedStatusCodeException
     */
    public function v1FolderIdActivitiesExpensesSheetsRetrieve(string $folderId, array $queryParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new Endpoint\V1FolderIdActivitiesExpensesSheetsRetrieve($folderId, $queryParameters), $fetch);
    }

    /**
     * @param string                                                  $folderId      Identifiant de dossier
     * @param Model\CegidMtsActivityExpensesSheetExpensesSheetBaseDto $expensesSheet Données nécessaires à la création de la note de frais
     * @param string                                                  $fetch         Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return Model\CegidMtsActivityExpensesSheetExpensesSheetBaseDto|\Psr\Http\Message\ResponseInterface
     *
     * @throws Exception\UnexpectedStatusCodeException
     */
    public function v1FolderIdActivitiesExpensesSheetsCreate(string $folderId, Model\CegidMtsActivityExpensesSheetExpensesSheetBaseDto $expensesSheet, string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new Endpoint\V1FolderIdActivitiesExpensesSheetsCreate($folderId, $expensesSheet), $fetch);
    }

    /**
     * @param string $folderId Identifiant de dossier
     * @param string $fetch    Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return Model\SystemWebODataPageResultCegidMtsActivityExpensesSheetExpensesSheetBaseDtoReader|\Psr\Http\Message\ResponseInterface
     *
     * @throws Exception\UnexpectedStatusCodeException
     */
    public function v1FolderIdActivitiesExpensesSheetsList(string $folderId, string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new Endpoint\V1FolderIdActivitiesExpensesSheetsList($folderId), $fetch);
    }

    /**
     * @param string $folderId        Identifiant de dossier
     * @param array  $queryParameters {
     *
     * @var string $resource Code ressource
     * @var string $periodStartDate Début de période de l'activité
     * @var string $periodEndDate Fin de période de l'activité
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     *
     * @throws Exception\UnexpectedStatusCodeException
     */
    public function v1FolderIdActivitiesExpensesSheetsGetAmountExpensesNotSubmitted(string $folderId, array $queryParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new Endpoint\V1FolderIdActivitiesExpensesSheetsGetAmountExpensesNotSubmitted($folderId, $queryParameters), $fetch);
    }

    /**
     * @param string $folderId        Identifiant de dossier
     * @param array  $queryParameters {
     *
     * @var string $resource Code ressource
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return Model\CegidMtsActivityExpensesSheetAmountAndPeriodExpensesDto|\Psr\Http\Message\ResponseInterface
     *
     * @throws Exception\UnexpectedStatusCodeException
     */
    public function v1FolderIdActivitiesExpensesSheetsGetAmountAndPeriodExpensesNotSubmitted(string $folderId, array $queryParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new Endpoint\V1FolderIdActivitiesExpensesSheetsGetAmountAndPeriodExpensesNotSubmitted($folderId, $queryParameters), $fetch);
    }

    /**
     * @param string $folderId        Identifiant de dossier
     * @param array  $queryParameters {
     *
     * @var int $InternalAddressNumber N° interne de l'adresse
     *          }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return Model\CegidMtsAddressesEntityV1CustomerAddressDtoReader|\Psr\Http\Message\ResponseInterface
     *
     * @throws Exception\UnexpectedStatusCodeException
     */
    public function v1FolderIdAddressesCustomerRead(string $folderId, array $queryParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new Endpoint\V1FolderIdAddressesCustomerRead($folderId, $queryParameters), $fetch);
    }

    /**
     * @param string $folderId Identifiant de dossier
     * @param string $fetch    Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return Model\SystemWebODataPageResultCegidMtsAddressesEntityV1CustomerAddressDtoReader|\Psr\Http\Message\ResponseInterface
     *
     * @throws Exception\UnexpectedStatusCodeException
     */
    public function v1FolderIdAddressesCustomerList(string $folderId, string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new Endpoint\V1FolderIdAddressesCustomerList($folderId), $fetch);
    }

    /**
     * @param string $folderId Identifiant de dossier
     * @param string $fetch    Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     *
     * @throws Exception\UnexpectedStatusCodeException
     */
    public function v1FolderIdAddressesCustomerDelete(string $folderId, Model\CegidMtsAddressesEntityCustomerAddressKey $addressData, string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new Endpoint\V1FolderIdAddressesCustomerDelete($folderId, $addressData), $fetch);
    }

    /**
     * @param string                                               $folderId    Identifiant de dossier
     * @param Model\CegidMtsAddressesEntityV1CustomerAddressesDtoG $addressData Les champs typés object dans model ne sont pas modifiables
     * @param string                                               $fetch       Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     *
     * @throws Exception\UnexpectedStatusCodeException
     */
    public function v1FolderIdAddressesCustomerUpdate(string $folderId, Model\CegidMtsAddressesEntityV1CustomerAddressesDtoG $addressData, string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new Endpoint\V1FolderIdAddressesCustomerUpdate($folderId, $addressData), $fetch);
    }

    /**
     * @param string                                               $folderId    Identifiant de dossier
     * @param Model\CegidMtsAddressesEntityV1CustomerAddressesDtoC $addressData Les champs typés object dans model ne sont pas modifiables
     * @param string                                               $fetch       Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return Model\CegidMtsAddressesV1CustomerAddressReplyKeysData|\Psr\Http\Message\ResponseInterface
     *
     * @throws Exception\UnexpectedStatusCodeException
     */
    public function v1FolderIdAddressesCustomerCreate(string $folderId, Model\CegidMtsAddressesEntityV1CustomerAddressesDtoC $addressData, string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new Endpoint\V1FolderIdAddressesCustomerCreate($folderId, $addressData), $fetch);
    }

    /**
     * @param string $folderId Identifiant de dossier
     * @param string $fetch    Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     *
     * @throws Exception\UnexpectedStatusCodeException
     */
    public function v1FolderIdBusinessSideUploadData(string $folderId, Model\CegidMtsBusinessSideCbsImportFileDto $importFileDto, string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new Endpoint\V1FolderIdBusinessSideUploadData($folderId, $importFileDto), $fetch);
    }

    /**
     * @param string $folderId Identifiant de dossier
     * @param string $fetch    Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     *
     * @throws Exception\UnexpectedStatusCodeException
     */
    public function v1FolderIdBusinessSideImportFile(string $folderId, Model\CegidMtsBusinessSideCbsImportFileDto $importFileDto, string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new Endpoint\V1FolderIdBusinessSideImportFile($folderId, $importFileDto), $fetch);
    }

    /**
     * @param string $folderId        Identifiant de dossier
     * @param array  $queryParameters {
     *
     * @var string $fileId
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     *
     * @throws Exception\UnexpectedStatusCodeException
     */
    public function v1FolderIdBusinessSideCreateImportTask(string $folderId, array $queryParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new Endpoint\V1FolderIdBusinessSideCreateImportTask($folderId, $queryParameters), $fetch);
    }

    /**
     * @param string $folderId        Identifiant de dossier
     * @param array  $queryParameters {
     *
     * @var string $contextCode
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     *
     * @throws Exception\UnexpectedStatusCodeException
     */
    public function v1FolderIdBusinessSideCreateIntegrationTask(string $folderId, array $queryParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new Endpoint\V1FolderIdBusinessSideCreateIntegrationTask($folderId, $queryParameters), $fetch);
    }

    /**
     * @param string $folderId        Identifiant de dossier
     * @param array  $queryParameters {
     *
     * @var string $taskId Identifiant du job
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     *
     * @throws Exception\UnexpectedStatusCodeException
     */
    public function v1FolderIdBusinessSideGetTaskResult(string $folderId, array $queryParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new Endpoint\V1FolderIdBusinessSideGetTaskResult($folderId, $queryParameters), $fetch);
    }

    /**
     * @param string $folderId        Identifiant de dossier
     * @param array  $queryParameters {
     *
     * @var string $fileId
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     *
     * @throws Exception\UnexpectedStatusCodeException
     */
    public function v1FolderIdBusinessSideRemoveFile(string $folderId, array $queryParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new Endpoint\V1FolderIdBusinessSideRemoveFile($folderId, $queryParameters), $fetch);
    }

    /**
     * @param string $folderId Identifiant de dossier
     * @param string $fetch    Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     *
     * @throws Exception\UnexpectedStatusCodeException
     */
    public function v1FolderIdBusinessSideCheckWebApiSettings(string $folderId, string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new Endpoint\V1FolderIdBusinessSideCheckWebApiSettings($folderId), $fetch);
    }

    /**
     * @param string $folderId Identifiant de dossier
     * @param string $fetch    Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     *
     * @throws Exception\UnexpectedStatusCodeException
     */
    public function v1FolderIdBusinessSideGetIntegrationContexts(string $folderId, string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new Endpoint\V1FolderIdBusinessSideGetIntegrationContexts($folderId), $fetch);
    }

    /**
     * @param string $folderId        Identifiant de dossier
     * @param array  $queryParameters {
     *
     * @var string $edmFileGuid Identifiant du fichier à importer (Guid)
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     *
     * @throws Exception\UnexpectedStatusCodeException
     */
    public function v1FolderIdBusinessSideImportEdmFile(string $folderId, array $queryParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new Endpoint\V1FolderIdBusinessSideImportEdmFile($folderId, $queryParameters), $fetch);
    }

    /**
     * @param string $folderId        Identifiant de dossier
     * @param array  $queryParameters {
     *
     * @var int    $contactNumber Numéro du contact
     * @var string $contactType Type de contact
     * @var string $referenceCode Code de l'entité contact (code du tiers, code du commercial, code de l'établissement, code du dépôt)
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     *
     * @throws Exception\UnexpectedStatusCodeException
     */
    public function v1FolderIdContactsDelete(string $folderId, array $queryParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new Endpoint\V1FolderIdContactsDelete($folderId, $queryParameters), $fetch);
    }

    /**
     * @param string                                        $folderId Identifiant de dossier
     * @param Model\CegidMtsContactContactDataPutParameters $contact  Les champs typés object dans model ne sont pas modifiables
     * @param string                                        $fetch    Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     *
     * @throws Exception\UnexpectedStatusCodeException
     */
    public function v1FolderIdContactsPatch(string $folderId, Model\CegidMtsContactContactDataPutParameters $contact, string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new Endpoint\V1FolderIdContactsPatch($folderId, $contact), $fetch);
    }

    /**
     * @param string                                         $folderId Identifiant de dossier
     * @param Model\CegidMtsContactContactDataPostParameters $contact  Les champs typés object dans model ne sont pas modifiables
     * @param string                                         $fetch    Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return Model\CegidMtsContactModelContactKey|\Psr\Http\Message\ResponseInterface
     *
     * @throws Exception\UnexpectedStatusCodeException
     */
    public function v1FolderIdContactsPost(string $folderId, Model\CegidMtsContactContactDataPostParameters $contact, string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new Endpoint\V1FolderIdContactsPost($folderId, $contact), $fetch);
    }

    /**
     * @param string $folderId Identifiant de dossier
     * @param string $fetch    Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return Model\CegidMtsContactContactDto|\Psr\Http\Message\ResponseInterface
     *
     * @throws Exception\UnexpectedStatusCodeException
     */
    public function v1FolderIdContactsGetNew(string $folderId, string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new Endpoint\V1FolderIdContactsGetNew($folderId), $fetch);
    }

    /**
     * @param string $folderId        Identifiant de dossier
     * @param array  $queryParameters {
     *
     * @var int    $contactNumber N° du contact
     * @var string $contactType Type de contact
     * @var string $referenceCode Code de l'entité à laquelle le contact est associé (code du tiers, code du commercial, code de l'établissement, code du dépôt)
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return Model\CegidMtsContactContactDto|\Psr\Http\Message\ResponseInterface
     *
     * @throws Exception\UnexpectedStatusCodeException
     */
    public function v1FolderIdContactsRetrieve(string $folderId, array $queryParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new Endpoint\V1FolderIdContactsRetrieve($folderId, $queryParameters), $fetch);
    }

    /**
     * @param string $folderId Identifiant de dossier
     * @param string $fetch    Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return Model\SystemWebODataPageResultCegidMtsContactEdmxV1ContactDtoReader|\Psr\Http\Message\ResponseInterface
     *
     * @throws Exception\UnexpectedStatusCodeException
     */
    public function v1FolderIdContactsList(string $folderId, string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new Endpoint\V1FolderIdContactsList($folderId), $fetch);
    }

    /**
     * @param string $folderId        Identifiant de dossier
     * @param array  $queryParameters {
     *
     * @var string $salesman Code du commercial
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return Model\SystemWebODataPageResultCegidMtsContactEdmxV1ContactDtoReader|\Psr\Http\Message\ResponseInterface
     *
     * @throws Exception\UnexpectedStatusCodeException
     */
    public function v1FolderIdContactsListBySalesman(string $folderId, array $queryParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new Endpoint\V1FolderIdContactsListBySalesman($folderId, $queryParameters), $fetch);
    }

    /**
     * @param string $folderId        Identifiant de dossier
     * @param array  $queryParameters {
     *
     * @var int    $contactNumber N° du contact
     * @var string $contactType Type de contact
     * @var string $referenceCode Code de l'entité à laquelle le contact est associé (code du tiers, code du commercial, code de l'établissement, code du dépôt)
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return Model\CegidMtsContactEdmxV1ContactDtoReader|\Psr\Http\Message\ResponseInterface
     *
     * @throws Exception\UnexpectedStatusCodeException
     */
    public function v1FolderIdContactsSingle(string $folderId, array $queryParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new Endpoint\V1FolderIdContactsSingle($folderId, $queryParameters), $fetch);
    }

    /**
     * @param string $folderId Identifiant de dossier
     * @param string $fetch    Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return Model\CegidMtsFrameworkServicesAccessRights|\Psr\Http\Message\ResponseInterface
     *
     * @throws Exception\UnexpectedStatusCodeException
     */
    public function v1FolderIdContactsGetAccessRights(string $folderId, string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new Endpoint\V1FolderIdContactsGetAccessRights($folderId), $fetch);
    }

    /**
     * @param string $folderId        Identifiant de dossier
     * @param array  $queryParameters {
     *
     * @var string $customerId Code client
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return Model\CegidMtsThirdPartyEntitiesV1ThirdPartyDtoReader|\Psr\Http\Message\ResponseInterface
     *
     * @throws Exception\UnexpectedStatusCodeException
     */
    public function v1FolderIdCustomersRead(string $folderId, array $queryParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new Endpoint\V1FolderIdCustomersRead($folderId, $queryParameters), $fetch);
    }

    /**
     * @param string $folderId        Identifiant de dossier
     * @param array  $queryParameters {
     *
     * @var string $subsidiary Compte auxiliaire
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return Model\CegidMtsThirdPartyEntitiesV1ThirdPartyDtoReader|\Psr\Http\Message\ResponseInterface
     *
     * @throws Exception\UnexpectedStatusCodeException
     */
    public function v1FolderIdCustomersReadWithSubsidiary(string $folderId, array $queryParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new Endpoint\V1FolderIdCustomersReadWithSubsidiary($folderId, $queryParameters), $fetch);
    }

    /**
     * @param string $folderId Identifiant de dossier
     * @param string $fetch    Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return Model\SystemWebODataPageResultCegidMtsThirdPartyEntitiesV1ThirdPartyDtoReader|\Psr\Http\Message\ResponseInterface
     *
     * @throws Exception\UnexpectedStatusCodeException
     */
    public function v1FolderIdCustomersList(string $folderId, string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new Endpoint\V1FolderIdCustomersList($folderId), $fetch);
    }

    /**
     * @param string $folderId Identifiant de dossier
     * @param string $fetch    Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return Model\CegidMtsFrameworkServicesAccessRights|\Psr\Http\Message\ResponseInterface
     *
     * @throws Exception\UnexpectedStatusCodeException
     */
    public function v1FolderIdCustomersGetAccessRights(string $folderId, string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new Endpoint\V1FolderIdCustomersGetAccessRights($folderId), $fetch);
    }

    /**
     * @param string                                           $folderId     Identifiant de dossier
     * @param Model\CegidMtsThirdPartyEntitiesV1ThirdPartyDtoC $customerData Les champs typés object dans model ne sont pas modifiables
     * @param string                                           $fetch        Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     *
     * @throws Exception\UnexpectedStatusCodeException
     */
    public function v1FolderIdCustomersCreate(string $folderId, Model\CegidMtsThirdPartyEntitiesV1ThirdPartyDtoC $customerData, string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new Endpoint\V1FolderIdCustomersCreate($folderId, $customerData), $fetch);
    }

    /**
     * @param string $customerId Code client
     * @param string $folderId   Identifiant de dossier
     * @param string $fetch      Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return Model\SystemWebODataPageResultCegidMtsSalesOrderSalesOrderDtoReader|\Psr\Http\Message\ResponseInterface
     *
     * @throws Exception\UnexpectedStatusCodeException
     */
    public function v1FolderIdCustomersListByThirdParty(string $customerId, string $folderId, string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new Endpoint\V1FolderIdCustomersListByThirdParty($customerId, $folderId), $fetch);
    }

    /**
     * @param string                                           $folderId     Identifiant de dossier
     * @param string                                           $customerId   Code client
     * @param Model\CegidMtsThirdPartyEntitiesV1ThirdPartyDtoG $customerData Les champs typés object dans model ne sont pas modifiables
     * @param string                                           $fetch        Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     *
     * @throws Exception\UnexpectedStatusCodeException
     */
    public function v1FolderIdCustomersUpdate(string $folderId, string $customerId, Model\CegidMtsThirdPartyEntitiesV1ThirdPartyDtoG $customerData, string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new Endpoint\V1FolderIdCustomersUpdate($folderId, $customerId, $customerData), $fetch);
    }

    /**
     * @param string $folderId        Identifiant de dossier
     * @param array  $queryParameters {
     *
     * @var string $People Population
     * @var string $FieldValue Code de la personne
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return Model\CegidMtsGdprConsentRequestsContextResult|\Psr\Http\Message\ResponseInterface
     *
     * @throws Exception\UnexpectedStatusCodeException
     */
    public function v1FolderIdGdprGetConsentRequestTextForSelfService(string $folderId, array $queryParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new Endpoint\V1FolderIdGdprGetConsentRequestTextForSelfService($folderId, $queryParameters), $fetch);
    }

    /**
     * @param string $folderId        Identifiant de dossier
     * @param array  $queryParameters {
     *
     * @var string $People Population
     * @var string $FieldValue Code de la personne
     * @var string $User Code de l'utilisateur
     * @var string $ConsentRequestStatus Statut de retour de  la demande de consentement
     * @var string $ReturnDate Date de retour de  la demande de consentement
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return Model\CegidMtsGdprConsentRequestsContextResult|\Psr\Http\Message\ResponseInterface
     *
     * @throws Exception\UnexpectedStatusCodeException
     */
    public function v1FolderIdGdprCreateRequestForSelfService(string $folderId, array $queryParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new Endpoint\V1FolderIdGdprCreateRequestForSelfService($folderId, $queryParameters), $fetch);
    }

    /**
     * @param string $folderId        Identifiant de dossier
     * @param array  $queryParameters {
     *
     * @var string $People Population
     * @var int    $RequestIdentifier Identifiant de la demande de consentement
     * @var string $User Code de l'utilisateur
     * @var string $ConsentRequestStatus Statut de retour de  la demande de consentement
     * @var string $ReturnDate Date de retour de  la demande de consentement
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return Model\CegidMtsGdprConsentRequestsContextResult|\Psr\Http\Message\ResponseInterface
     *
     * @throws Exception\UnexpectedStatusCodeException
     */
    public function v1FolderIdGdprUpdateRequestForSelfService(string $folderId, array $queryParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new Endpoint\V1FolderIdGdprUpdateRequestForSelfService($folderId, $queryParameters), $fetch);
    }

    /**
     * @param string $folderId        Identifiant de dossier
     * @param array  $queryParameters {
     *
     * @var string $People Population
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return Model\CegidMtsGdprConsentRequestsContextResult|\Psr\Http\Message\ResponseInterface
     *
     * @throws Exception\UnexpectedStatusCodeException
     */
    public function v1FolderIdGdprGetTypeRequestDocumentForSelfService(string $folderId, array $queryParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new Endpoint\V1FolderIdGdprGetTypeRequestDocumentForSelfService($folderId, $queryParameters), $fetch);
    }

    /**
     * @param string $folderId        Identifiant de dossier
     * @param array  $queryParameters {
     *
     * @var string $resource Code de la ressource
     * @var string $project Code de l'affaire
     * @var string $expenseDate Date du frais
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return \Cegid\Api\Model\CegidMtsItemsItemDataDto[]|\Psr\Http\Message\ResponseInterface
     *
     * @throws Exception\UnexpectedStatusCodeException
     */
    public function v1FolderIdItemsGetExpenseItem(string $folderId, array $queryParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new Endpoint\V1FolderIdItemsGetExpenseItem($folderId, $queryParameters), $fetch);
    }

    /**
     * @param string $folderId        Identifiant de dossier
     * @param array  $queryParameters {
     *
     * @var string $lookupName Nom de la tablette ou de la propriété liée
     * @var string $code Code du libellé recherché
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     *
     * @throws Exception\UnexpectedStatusCodeException
     */
    public function v1FolderIdLookupsGetLabel(string $folderId, array $queryParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new Endpoint\V1FolderIdLookupsGetLabel($folderId, $queryParameters), $fetch);
    }

    /**
     * @param string $folderId        Identifiant de dossier
     * @param array  $queryParameters {
     *
     * @var string $lookupName Nom de la tablette ou de la propriété liée
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return Model\SystemWebODataPageResultSystemCollectionsGenericKeyValuePairSystemStringSystemString|\Psr\Http\Message\ResponseInterface
     *
     * @throws Exception\UnexpectedStatusCodeException
     */
    public function v1FolderIdLookupsGetValues(string $folderId, array $queryParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new Endpoint\V1FolderIdLookupsGetValues($folderId, $queryParameters), $fetch);
    }

    /**
     * @param string $folderId        Identifiant de dossier
     * @param array  $queryParameters {
     *
     * @var int $opportunityId Identification de l'opportunité
     *          }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return Model\CegidMtsOpportunityEntityOpportunityDtoReader|\Psr\Http\Message\ResponseInterface
     *
     * @throws Exception\UnexpectedStatusCodeException
     */
    public function v1FolderIdOpportunitiesRead(string $folderId, array $queryParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new Endpoint\V1FolderIdOpportunitiesRead($folderId, $queryParameters), $fetch);
    }

    /**
     * @param string $folderId Identifiant de dossier
     * @param string $fetch    Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return Model\SystemWebODataPageResultCegidMtsOpportunityEntityOpportunityDtoReader|\Psr\Http\Message\ResponseInterface
     *
     * @throws Exception\UnexpectedStatusCodeException
     */
    public function v1FolderIdOpportunitiesList(string $folderId, string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new Endpoint\V1FolderIdOpportunitiesList($folderId), $fetch);
    }

    /**
     * @param string $folderId        Identifiant de dossier
     * @param array  $queryParameters {
     *
     * @var int $opportunityId Identification de l'opportunité
     *          }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     *
     * @throws Exception\UnexpectedStatusCodeException
     */
    public function v1FolderIdOpportunitiesDelete(string $folderId, array $queryParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new Endpoint\V1FolderIdOpportunitiesDelete($folderId, $queryParameters), $fetch);
    }

    /**
     * @param string                                   $folderId        Identifiant de dossier
     * @param Model\CegidMtsOpportunityOpportunityDtoG $opportunityData Les champs typés object dans model ne sont pas modifiables
     * @param string                                   $fetch           Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     *
     * @throws Exception\UnexpectedStatusCodeException
     */
    public function v1FolderIdOpportunitiesUpdate(string $folderId, Model\CegidMtsOpportunityOpportunityDtoG $opportunityData, string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new Endpoint\V1FolderIdOpportunitiesUpdate($folderId, $opportunityData), $fetch);
    }

    /**
     * @param string                                   $folderId        Identifiant de dossier
     * @param Model\CegidMtsOpportunityOpportunityDtoC $opportunityData Les champs typés object dans model ne sont pas modifiables
     * @param string                                   $fetch           Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     *
     * @throws Exception\UnexpectedStatusCodeException
     */
    public function v1FolderIdOpportunitiesCreate(string $folderId, Model\CegidMtsOpportunityOpportunityDtoC $opportunityData, string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new Endpoint\V1FolderIdOpportunitiesCreate($folderId, $opportunityData), $fetch);
    }

    /**
     * @param string $folderId Identifiant de dossier
     * @param string $fetch    Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return Model\CegidMtsOpportunityOpportunityDto|\Psr\Http\Message\ResponseInterface
     *
     * @throws Exception\UnexpectedStatusCodeException
     */
    public function v1FolderIdOpportunitiesGetNew(string $folderId, string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new Endpoint\V1FolderIdOpportunitiesGetNew($folderId), $fetch);
    }

    /**
     * @param string $folderId        Identifiant de dossier
     * @param array  $queryParameters {
     *
     * @var string $statusCode Code de l'état de l'opportunité
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     *
     * @throws Exception\UnexpectedStatusCodeException
     */
    public function v1FolderIdOpportunitiesGetReasons(string $folderId, array $queryParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new Endpoint\V1FolderIdOpportunitiesGetReasons($folderId, $queryParameters), $fetch);
    }

    /**
     * @param string $folderId        Identifiant de dossier
     * @param array  $queryParameters {
     *
     * @var string $status Etat de l'opportunité
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     *
     * @throws Exception\UnexpectedStatusCodeException
     */
    public function v1FolderIdOpportunitiesGetReasons(string $folderId, array $queryParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new Endpoint\V1FolderIdOpportunitiesGetReasons($folderId, $queryParameters), $fetch);
    }

    /**
     * @param string $folderId Identifiant de dossier
     * @param string $fetch    Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return Model\CegidMtsFrameworkServicesAccessRights|\Psr\Http\Message\ResponseInterface
     *
     * @throws Exception\UnexpectedStatusCodeException
     */
    public function v1FolderIdOpportunitiesGetAccessRights(string $folderId, string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new Endpoint\V1FolderIdOpportunitiesGetAccessRights($folderId), $fetch);
    }

    /**
     * @param string $folderId        Identifiant de dossier
     * @param array  $queryParameters {
     *
     * @var string $subsidiary Code auxiliaire
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     *
     * @throws Exception\UnexpectedStatusCodeException
     */
    public function v1FolderIdOpportunitiesGetDefaultSupervisor(string $folderId, array $queryParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new Endpoint\V1FolderIdOpportunitiesGetDefaultSupervisor($folderId, $queryParameters), $fetch);
    }

    /**
     * @param string $folderId        Identifiant de dossier
     * @param array  $queryParameters {
     *
     * @var string $salesRepresentative Commercial
     * @var string $supervisor Responsable
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     *
     * @throws Exception\UnexpectedStatusCodeException
     */
    public function v1FolderIdOpportunitiesGetTotalAmountForecast(string $folderId, array $queryParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new Endpoint\V1FolderIdOpportunitiesGetTotalAmountForecast($folderId, $queryParameters), $fetch);
    }

    /**
     * @param string $folderId        Identifiant de dossier
     * @param array  $queryParameters {
     *
     * @var string $salesRepresentative Commercial
     * @var string $supervisor Responsable
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return \Cegid\Api\Model\CegidMtsOpportunityForecastStep[]|\Psr\Http\Message\ResponseInterface
     *
     * @throws Exception\UnexpectedStatusCodeException
     */
    public function v1FolderIdOpportunitiesGetForecast(string $folderId, array $queryParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new Endpoint\V1FolderIdOpportunitiesGetForecast($folderId, $queryParameters), $fetch);
    }

    /**
     * @param string $folderId        Identifiant de dossier
     * @param array  $queryParameters {
     *
     * @var string $product API de gestion des produits (articles de type marchandises)
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return Model\CegidMtsProductEntityV1ProductDtoReader|\Psr\Http\Message\ResponseInterface
     *
     * @throws Exception\UnexpectedStatusCodeException
     */
    public function v1FolderIdProductRead(string $folderId, array $queryParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new Endpoint\V1FolderIdProductRead($folderId, $queryParameters), $fetch);
    }

    /**
     * @param string $folderId Identifiant de dossier
     * @param string $fetch    Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return Model\SystemWebODataPageResultCegidMtsProductEntityV1ProductDtoReader|\Psr\Http\Message\ResponseInterface
     *
     * @throws Exception\UnexpectedStatusCodeException
     */
    public function v1FolderIdProductList(string $folderId, string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new Endpoint\V1FolderIdProductList($folderId), $fetch);
    }

    /**
     * @param string                                   $folderId    Identifiant de dossier
     * @param Model\CegidMtsProductEntityV1ProductDtoC $productData Les champs typés object dans model ne sont pas modifiables
     * @param string                                   $fetch       Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return Model\CegidMtsProductV1ProductReplyKeysData|\Psr\Http\Message\ResponseInterface
     *
     * @throws Exception\UnexpectedStatusCodeException
     */
    public function v1FolderIdProductCreate(string $folderId, Model\CegidMtsProductEntityV1ProductDtoC $productData, string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new Endpoint\V1FolderIdProductCreate($folderId, $productData), $fetch);
    }

    /**
     * @param string $folderId Identifiant de dossier
     * @param string $fetch    Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return Model\CegidMtsProjectProjectParametersDTO|\Psr\Http\Message\ResponseInterface
     *
     * @throws Exception\UnexpectedStatusCodeException
     */
    public function v1FolderIdProjectParametersGetPortalParameters(string $folderId, string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new Endpoint\V1FolderIdProjectParametersGetPortalParameters($folderId), $fetch);
    }

    /**
     * @param string $folderId        Identifiant de dossier
     * @param array  $queryParameters {
     *
     * @var string $expenseDate Date du frais
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return \Cegid\Api\Model\CegidMtsProjectProjectDataDto[]|\Psr\Http\Message\ResponseInterface
     *
     * @throws Exception\UnexpectedStatusCodeException
     */
    public function v1FolderIdProjectsGetInternalProject(string $folderId, array $queryParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new Endpoint\V1FolderIdProjectsGetInternalProject($folderId, $queryParameters), $fetch);
    }

    /**
     * @param string $folderId        Identifiant de dossier
     * @param array  $queryParameters {
     *
     * @var string $expenseDate Date du frais
     * @var string $resource Code ressource
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return \Cegid\Api\Model\CegidMtsProjectProjectDataDto[]|\Psr\Http\Message\ResponseInterface
     *
     * @throws Exception\UnexpectedStatusCodeException
     */
    public function v1FolderIdProjectsGetInternalProjectForResource(string $folderId, array $queryParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new Endpoint\V1FolderIdProjectsGetInternalProjectForResource($folderId, $queryParameters), $fetch);
    }

    /**
     * @param string $folderId Identifiant de dossier
     * @param string $fetch    Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return \Cegid\Api\Model\CegidMtsProjectServiceProjectLineDto[]|\Psr\Http\Message\ResponseInterface
     *
     * @throws Exception\UnexpectedStatusCodeException
     */
    public function v1FolderIdProjectsGetServicesFromAdministrativeProjects(string $folderId, string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new Endpoint\V1FolderIdProjectsGetServicesFromAdministrativeProjects($folderId), $fetch);
    }

    /**
     * @param string $folderId        Identifiant de dossier
     * @param array  $queryParameters {
     *
     * @var string $resource Code ressource
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return \Cegid\Api\Model\CegidMtsProjectServiceProjectLineDto[]|\Psr\Http\Message\ResponseInterface
     *
     * @throws Exception\UnexpectedStatusCodeException
     */
    public function v1FolderIdProjectsGetAdministrativeServicesForResource(string $folderId, array $queryParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new Endpoint\V1FolderIdProjectsGetAdministrativeServicesForResource($folderId, $queryParameters), $fetch);
    }

    /**
     * @param string $folderId        Identifiant de dossier
     * @param array  $queryParameters {
     *
     * @var string $resource Code ressource
     * @var string $startDate Date de début
     * @var string $endDate Date de fin
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return \Cegid\Api\Model\CegidMtsProjectServiceProjectLineDto[]|\Psr\Http\Message\ResponseInterface
     *
     * @throws Exception\UnexpectedStatusCodeException
     */
    public function v1FolderIdProjectsGetServicesFromResource(string $folderId, array $queryParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new Endpoint\V1FolderIdProjectsGetServicesFromResource($folderId, $queryParameters), $fetch);
    }

    /**
     * @param string $folderId        Identifiant de dossier
     * @param array  $queryParameters {
     *
     * @var string $resource Code ressource
     * @var string $expenseDate Date du frais
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return \Cegid\Api\Model\CegidMtsProjectProjectDataDto[]|\Psr\Http\Message\ResponseInterface
     *
     * @throws Exception\UnexpectedStatusCodeException
     */
    public function v1FolderIdProjectsGetProjectFromTask(string $folderId, array $queryParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new Endpoint\V1FolderIdProjectsGetProjectFromTask($folderId, $queryParameters), $fetch);
    }

    /**
     * @param string $folderId        Identifiant de dossier
     * @param array  $queryParameters {
     *
     * @var string $resource Code ressource
     * @var string $expenseDate Date du frais
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return \Cegid\Api\Model\CegidMtsProjectProjectDataDto[]|\Psr\Http\Message\ResponseInterface
     *
     * @throws Exception\UnexpectedStatusCodeException
     */
    public function v1FolderIdProjectsGetThirdProjectFromContributor(string $folderId, array $queryParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new Endpoint\V1FolderIdProjectsGetThirdProjectFromContributor($folderId, $queryParameters), $fetch);
    }

    /**
     * @param string $folderId        Identifiant de dossier
     * @param array  $queryParameters {
     *
     * @var string $resource Code ressource
     * @var string $expenseDate Date du frais
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return \Cegid\Api\Model\CegidMtsProjectProjectDataDto[]|\Psr\Http\Message\ResponseInterface
     *
     * @throws Exception\UnexpectedStatusCodeException
     */
    public function v1FolderIdProjectsGetThirdProjectFromResponsable(string $folderId, array $queryParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new Endpoint\V1FolderIdProjectsGetThirdProjectFromResponsable($folderId, $queryParameters), $fetch);
    }

    /**
     * @param string $folderId Identifiant de dossier
     * @param string $fetch    Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return Model\SystemWebODataPageResultCegidMtsResourceResourceBaseDtoReader|\Psr\Http\Message\ResponseInterface
     *
     * @throws Exception\UnexpectedStatusCodeException
     */
    public function v1FolderIdResourcesList(string $folderId, string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new Endpoint\V1FolderIdResourcesList($folderId), $fetch);
    }

    /**
     * @param string $folderId Identifiant de dossier
     * @param string $fetch    Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return Model\CegidMtsResourceResourceBaseDto|\Psr\Http\Message\ResponseInterface
     *
     * @throws Exception\UnexpectedStatusCodeException
     */
    public function v1FolderIdResourcesGetNew(string $folderId, string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new Endpoint\V1FolderIdResourcesGetNew($folderId), $fetch);
    }

    /**
     * @param string $folderId        Identifiant de dossier
     * @param array  $queryParameters {
     *
     * @var string $resource Code ressource
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     *
     * @throws Exception\UnexpectedStatusCodeException
     */
    public function v1FolderIdResourcesDelete(string $folderId, array $queryParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new Endpoint\V1FolderIdResourcesDelete($folderId, $queryParameters), $fetch);
    }

    /**
     * @param string $folderId        Identifiant de dossier
     * @param array  $queryParameters {
     *
     * @var string $resource Code ressource
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return Model\CegidMtsResourceResourceBaseDto|\Psr\Http\Message\ResponseInterface
     *
     * @throws Exception\UnexpectedStatusCodeException
     */
    public function v1FolderIdResourcesRetrieve(string $folderId, array $queryParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new Endpoint\V1FolderIdResourcesRetrieve($folderId, $queryParameters), $fetch);
    }

    /**
     * @param string                                $folderId Identifiant de dossier
     * @param Model\CegidMtsResourceResourceBaseDto $resource Code ressource
     * @param string                                $fetch    Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return Model\CegidMtsResourceResourceBaseDto|\Psr\Http\Message\ResponseInterface
     *
     * @throws Exception\UnexpectedStatusCodeException
     */
    public function v1FolderIdResourcesCreate(string $folderId, Model\CegidMtsResourceResourceBaseDto $resource, string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new Endpoint\V1FolderIdResourcesCreate($folderId, $resource), $fetch);
    }

    /**
     * @param string                                $folderId Identifiant de dossier
     * @param Model\CegidMtsResourceResourceBaseDto $resource Code ressource
     * @param string                                $fetch    Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return Model\CegidMtsResourceResourceKey|\Psr\Http\Message\ResponseInterface
     *
     * @throws Exception\UnexpectedStatusCodeException
     */
    public function v1FolderIdResourcesUpdate(string $folderId, Model\CegidMtsResourceResourceBaseDto $resource, string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new Endpoint\V1FolderIdResourcesUpdate($folderId, $resource), $fetch);
    }

    /**
     * @param string $folderId Identifiant de dossier
     * @param string $fetch    Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return Model\CegidMtsFrameworkServicesAccessRights|\Psr\Http\Message\ResponseInterface
     *
     * @throws Exception\UnexpectedStatusCodeException
     */
    public function v1FolderIdResourcesGetAccessRights(string $folderId, string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new Endpoint\V1FolderIdResourcesGetAccessRights($folderId), $fetch);
    }

    /**
     * @param string $folderId Identifiant de dossier
     * @param string $fetch    Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return Model\SystemWebODataPageResultCegidMtsSalesOrderSalesOrderDtoReader|\Psr\Http\Message\ResponseInterface
     *
     * @throws Exception\UnexpectedStatusCodeException
     */
    public function v1FolderIdSalesOrdersList(string $folderId, string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new Endpoint\V1FolderIdSalesOrdersList($folderId), $fetch);
    }

    /**
     * @param int    $number       Numéro
     * @param string $documentStub Souche
     * @param string $folderId     Identifiant de dossier
     * @param string $fetch        Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return Model\CegidMtsSalesOrderSalesOrderDto|\Psr\Http\Message\ResponseInterface
     *
     * @throws Exception\UnexpectedStatusCodeException
     */
    public function v1FolderIdSalesOrdersRead(int $number, string $documentStub, string $folderId, string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new Endpoint\V1FolderIdSalesOrdersRead($number, $documentStub, $folderId), $fetch);
    }

    /**
     * @param string $folderId Identifiant de dossier
     * @param string $fetch    Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return Model\CegidMtsSalesOrderSalesOrderKey|\Psr\Http\Message\ResponseInterface
     *
     * @throws Exception\UnexpectedStatusCodeException
     */
    public function v1FolderIdSalesOrdersCreate(string $folderId, Model\CegidMtsSalesOrderSalesOrderDtoC $salesOrderData, string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new Endpoint\V1FolderIdSalesOrdersCreate($folderId, $salesOrderData), $fetch);
    }

    /**
     * @param string $folderId Identifiant de dossier
     * @param string $fetch    Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return Model\SystemWebODataPageResultCegidMtsThirdPartyEntitiesV1SalesRepresentativeDtoReader|\Psr\Http\Message\ResponseInterface
     *
     * @throws Exception\UnexpectedStatusCodeException
     */
    public function v1FolderIdSalesRepresentativesList(string $folderId, string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new Endpoint\V1FolderIdSalesRepresentativesList($folderId), $fetch);
    }

    /**
     * @param string $folderId Identifiant de dossier
     * @param string $rawXml   xml contenant une liste d'opérations
     * @param string $fetch    Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return Model\CegidMtsTechnicalBasesModelsSmartServiceResult|\Psr\Http\Message\ResponseInterface
     *
     * @throws Exception\UnexpectedStatusCodeException
     */
    public function v1FolderIdSmartServiceExecute(string $folderId, string $rawXml, string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new Endpoint\V1FolderIdSmartServiceExecute($folderId, $rawXml), $fetch);
    }

    /**
     * @param string $folderId Identifiant de dossier
     * @param string $rawXml   xml contenant une liste d'opérations
     * @param string $fetch    Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return Model\CegidMtsTechnicalBasesModelsSmartServiceAsyncResult|\Psr\Http\Message\ResponseInterface
     *
     * @throws Exception\UnexpectedStatusCodeException
     */
    public function v1FolderIdSmartServiceBeginExecute(string $folderId, string $rawXml, string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new Endpoint\V1FolderIdSmartServiceBeginExecute($folderId, $rawXml), $fetch);
    }

    /**
     * @param string $folderId Identifiant de dossier
     * @param string $fetch    Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return Model\CegidMtsTechnicalBasesModelsSmartServiceAsyncResult|\Psr\Http\Message\ResponseInterface
     *
     * @throws Exception\UnexpectedStatusCodeException
     */
    public function v1FolderIdSmartServiceEndExecute(string $folderId, Model\CegidMtsTechnicalBasesModelsSmartServiceAsyncResult $asyncResult, string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new Endpoint\V1FolderIdSmartServiceEndExecute($folderId, $asyncResult), $fetch);
    }

    /**
     * @param string                                         $folderId        Identifiant de dossier
     * @param Model\CegidMtsStockModelsManualInputParameters $inputParameters Paramètres métiers pour la création du mouvement manuel d'entrée
     * @param string                                         $fetch           Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     *
     * @throws Exception\UnexpectedStatusCodeException
     */
    public function v1FolderIdStockMovementsCreateManualInput(string $folderId, Model\CegidMtsStockModelsManualInputParameters $inputParameters, string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new Endpoint\V1FolderIdStockMovementsCreateManualInput($folderId, $inputParameters), $fetch);
    }

    /**
     * @param string                                          $folderId         Identifiant de dossier
     * @param Model\CegidMtsStockModelsManualOutputParameters $outputParameters Paramètres métiers pour la création du mouvement manuel de sortie
     * @param string                                          $fetch            Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     *
     * @throws Exception\UnexpectedStatusCodeException
     */
    public function v1FolderIdStockMovementsCreateManualOutput(string $folderId, Model\CegidMtsStockModelsManualOutputParameters $outputParameters, string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new Endpoint\V1FolderIdStockMovementsCreateManualOutput($folderId, $outputParameters), $fetch);
    }

    /**
     * @param string $folderId        Identifiant de dossier
     * @param array  $queryParameters {
     *
     * @var string $warehouse Dépôt
     * @var string $product Article
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return Model\CegidMtsStockModelsStockAvailabilityResult|\Psr\Http\Message\ResponseInterface
     *
     * @throws Exception\UnexpectedStatusCodeException
     */
    public function v1FolderIdStockUtilitiesGetAvailability(string $folderId, array $queryParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new Endpoint\V1FolderIdStockUtilitiesGetAvailability($folderId, $queryParameters), $fetch);
    }

    /**
     * @param string $folderId        Identifiant de dossier
     * @param array  $queryParameters {
     *
     * @var string $warehouse Dépôt
     * @var string $product Article
     * @var string $projectedDate Date de la projection
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     *
     * @throws Exception\UnexpectedStatusCodeException
     */
    public function v1FolderIdStockUtilitiesGetProjectedQuantity(string $folderId, array $queryParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new Endpoint\V1FolderIdStockUtilitiesGetProjectedQuantity($folderId, $queryParameters), $fetch);
    }

    /**
     * @param string $folderId        Identifiant de dossier
     * @param array  $queryParameters {
     *
     * @var string $warehouse Dépôt
     * @var string $product Article
     * @var float  $quantity Quantité seuil
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     *
     * @throws Exception\UnexpectedStatusCodeException
     */
    public function v1FolderIdStockUtilitiesGetProjectedDate(string $folderId, array $queryParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new Endpoint\V1FolderIdStockUtilitiesGetProjectedDate($folderId, $queryParameters), $fetch);
    }

    /**
     * @param string                                        $folderId        Identifiant de dossier
     * @param Model\CegidMtsStockModelsStockBlockParameters $blockParameters Paramètres métiers pour le blocage d'un stock. Les champs typés object dans model ne sont pas modifiables
     * @param string                                        $fetch           Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     *
     * @throws Exception\UnexpectedStatusCodeException
     */
    public function v1FolderIdStockUtilitiesBlock(string $folderId, Model\CegidMtsStockModelsStockBlockParameters $blockParameters, string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new Endpoint\V1FolderIdStockUtilitiesBlock($folderId, $blockParameters), $fetch);
    }

    /**
     * @param string                                          $folderId          Identifiant de dossier
     * @param Model\CegidMtsStockModelsStockUnblockParameters $unblockParameters Paramètres métiers pour le déblocage d'un stock. Les champs typés object dans model ne sont pas modifiables
     * @param string                                          $fetch             Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     *
     * @throws Exception\UnexpectedStatusCodeException
     */
    public function v1FolderIdStockUtilitiesUnblock(string $folderId, Model\CegidMtsStockModelsStockUnblockParameters $unblockParameters, string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new Endpoint\V1FolderIdStockUtilitiesUnblock($folderId, $unblockParameters), $fetch);
    }

    /**
     * @param string                                            $folderId                 Identifiant de dossier
     * @param Model\CegidMtsStockModelsChangeLocationParameters $changeLocationParameters Paramètres métiers pour le changement d'emplacement de stock. Les champs typés object dans model ne sont pas modifiables
     * @param string                                            $fetch                    Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     *
     * @throws Exception\UnexpectedStatusCodeException
     */
    public function v1FolderIdStockUtilitiesChangeLocation(string $folderId, Model\CegidMtsStockModelsChangeLocationParameters $changeLocationParameters, string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new Endpoint\V1FolderIdStockUtilitiesChangeLocation($folderId, $changeLocationParameters), $fetch);
    }

    /**
     * @param string                                             $folderId             Identifiant de dossier
     * @param string                                             $customer             Client
     * @param Model\CegidMtsStockModelsStockAllocationParameters $allocationParameters Liste des détails de stock à affecter + quantité
     * @param string                                             $fetch                Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     *
     * @throws Exception\UnexpectedStatusCodeException
     */
    public function v1FolderIdStockUtilitiesCustomerAllocation(string $folderId, string $customer, Model\CegidMtsStockModelsStockAllocationParameters $allocationParameters, string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new Endpoint\V1FolderIdStockUtilitiesCustomerAllocation($folderId, $customer, $allocationParameters), $fetch);
    }

    /**
     * @param string                                             $folderId             Identifiant de dossier
     * @param string                                             $workType             Code de nature de travail
     * @param int                                                $productionOrder      Numéro d'ordre de production
     * @param Model\CegidMtsStockModelsStockAllocationParameters $allocationParameters Liste des détails de stock à affecter + quantité
     * @param string                                             $fetch                Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     *
     * @throws Exception\UnexpectedStatusCodeException
     */
    public function v1FolderIdStockUtilitiesProductionOrderAllocation(string $folderId, string $workType, int $productionOrder, Model\CegidMtsStockModelsStockAllocationParameters $allocationParameters, string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new Endpoint\V1FolderIdStockUtilitiesProductionOrderAllocation($folderId, $workType, $productionOrder, $allocationParameters), $fetch);
    }

    /**
     * @param string                                             $folderId             Identifiant de dossier
     * @param string                                             $workType             Code de nature de travail
     * @param int                                                $productionOrder      Numéro d'ordre de production
     * @param string                                             $phase                Code de la phase
     * @param Model\CegidMtsStockModelsStockAllocationParameters $allocationParameters Liste des détails de stock à affecter + quantité
     * @param string                                             $fetch                Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     *
     * @throws Exception\UnexpectedStatusCodeException
     */
    public function v1FolderIdStockUtilitiesProductionOrderPhaseAllocation(string $folderId, string $workType, int $productionOrder, string $phase, Model\CegidMtsStockModelsStockAllocationParameters $allocationParameters, string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new Endpoint\V1FolderIdStockUtilitiesProductionOrderPhaseAllocation($folderId, $workType, $productionOrder, $phase, $allocationParameters), $fetch);
    }

    /**
     * @param string                                             $folderId             Identifiant de dossier
     * @param string                                             $workType             Code de nature de travail
     * @param int                                                $productionOrder      Numéro d'ordre de production
     * @param string                                             $phase                Code de la phase
     * @param int                                                $nomenclatureLink     Numéro de lien de nomenclature
     * @param Model\CegidMtsStockModelsStockAllocationParameters $allocationParameters Liste des détails de stock à affecter + quantité
     * @param string                                             $fetch                Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     *
     * @throws Exception\UnexpectedStatusCodeException
     */
    public function v1FolderIdStockUtilitiesProductionOrderNeedAllocation(string $folderId, string $workType, int $productionOrder, string $phase, int $nomenclatureLink, Model\CegidMtsStockModelsStockAllocationParameters $allocationParameters, string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new Endpoint\V1FolderIdStockUtilitiesProductionOrderNeedAllocation($folderId, $workType, $productionOrder, $phase, $nomenclatureLink, $allocationParameters), $fetch);
    }

    /**
     * @param string                                             $folderId             Identifiant de dossier
     * @param string                                             $project              Code Affaire
     * @param Model\CegidMtsStockModelsStockAllocationParameters $allocationParameters Liste des détails de stock à affecter + quantité
     * @param string                                             $fetch                Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     *
     * @throws Exception\UnexpectedStatusCodeException
     */
    public function v1FolderIdStockUtilitiesProjectAllocation(string $folderId, string $project, Model\CegidMtsStockModelsStockAllocationParameters $allocationParameters, string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new Endpoint\V1FolderIdStockUtilitiesProjectAllocation($folderId, $project, $allocationParameters), $fetch);
    }

    /**
     * @param string                                                  $folderId              Identifiant de dossier
     * @param int                                                     $orderId               Numéro de commande client
     * @param Model\CegidMtsStockModelsStockAllocationOrderParameters $affectationParameters Liste des détails de stock à affecter + quantité. Les champs typés object dans model ne sont pas modifiables
     * @param array                                                   $queryParameters       {
     *
     * @var string $stub Code souche
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     *
     * @throws Exception\UnexpectedStatusCodeException
     */
    public function v1FolderIdStockUtilitiesOrderAllocation(string $folderId, int $orderId, Model\CegidMtsStockModelsStockAllocationOrderParameters $affectationParameters, array $queryParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new Endpoint\V1FolderIdStockUtilitiesOrderAllocation($folderId, $orderId, $affectationParameters, $queryParameters), $fetch);
    }

    /**
     * @param string                                                      $folderId              Identifiant de dossier
     * @param int                                                         $orderId               Numéro de commande client
     * @param int                                                         $lineNumber            Numéro de ligne de pièce (Identifiant unique)
     * @param Model\CegidMtsStockModelsStockAllocationOrderLineParameters $affectationParameters Liste des détails de stock à affecter + quantité. Les champs typés object dans model ne sont pas modifiables
     * @param array                                                       $queryParameters       {
     *
     * @var string $stub Code souche
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     *
     * @throws Exception\UnexpectedStatusCodeException
     */
    public function v1FolderIdStockUtilitiesOrderLineAllocation(string $folderId, int $orderId, int $lineNumber, Model\CegidMtsStockModelsStockAllocationOrderLineParameters $affectationParameters, array $queryParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new Endpoint\V1FolderIdStockUtilitiesOrderLineAllocation($folderId, $orderId, $lineNumber, $affectationParameters, $queryParameters), $fetch);
    }

    /**
     * @param string                                                  $folderId              Identifiant de dossier
     * @param int                                                     $orderId               Numéro de commande client
     * @param Model\CegidMtsStockModelsStockAllocationOrderParameters $affectationParameters Liste des détails de stock à affecter + quantité. Les champs typés object dans model ne sont pas modifiables
     * @param array                                                   $queryParameters       {
     *
     * @var string $stub Code souche
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     *
     * @throws Exception\UnexpectedStatusCodeException
     */
    public function v1FolderIdStockUtilitiesSampleOrderAllocation(string $folderId, int $orderId, Model\CegidMtsStockModelsStockAllocationOrderParameters $affectationParameters, array $queryParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new Endpoint\V1FolderIdStockUtilitiesSampleOrderAllocation($folderId, $orderId, $affectationParameters, $queryParameters), $fetch);
    }

    /**
     * @param string                                                      $folderId              Identifiant de dossier
     * @param int                                                         $orderId               Numéro de commande client
     * @param int                                                         $lineNumber            Numéro de ligne de pièce (Identifiant unique)
     * @param Model\CegidMtsStockModelsStockAllocationOrderLineParameters $affectationParameters Liste des détails de stock à affecter + quantité. Les champs typés object dans model ne sont pas modifiables
     * @param array                                                       $queryParameters       {
     *
     * @var string $stub Code souche
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     *
     * @throws Exception\UnexpectedStatusCodeException
     */
    public function v1FolderIdStockUtilitiesSampleOrderLineAllocation(string $folderId, int $orderId, int $lineNumber, Model\CegidMtsStockModelsStockAllocationOrderLineParameters $affectationParameters, array $queryParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new Endpoint\V1FolderIdStockUtilitiesSampleOrderLineAllocation($folderId, $orderId, $lineNumber, $affectationParameters, $queryParameters), $fetch);
    }

    /**
     * @param string                                                  $folderId                  Identifiant de dossier
     * @param Model\CegidMtsStockModelsClearStockAllocationParameters $clearAllocationParameters Paramètres métiers pour la désaffectation de stock
     * @param string                                                  $fetch                     Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     *
     * @throws Exception\UnexpectedStatusCodeException
     */
    public function v1FolderIdStockUtilitiesClearStockAllocation(string $folderId, Model\CegidMtsStockModelsClearStockAllocationParameters $clearAllocationParameters, string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new Endpoint\V1FolderIdStockUtilitiesClearStockAllocation($folderId, $clearAllocationParameters), $fetch);
    }

    /**
     * @param string                                         $folderId              Identifiant de dossier
     * @param Model\CegidMtsStockModelsChangeBrandParameters $changeBrandParameters Paramètres métiers pour le changement de marque. Les champs typés object dans model ne sont pas modifiables
     * @param string                                         $fetch                 Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     *
     * @throws Exception\UnexpectedStatusCodeException
     */
    public function v1FolderIdStockUtilitiesChangeBrand(string $folderId, Model\CegidMtsStockModelsChangeBrandParameters $changeBrandParameters, string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new Endpoint\V1FolderIdStockUtilitiesChangeBrand($folderId, $changeBrandParameters), $fetch);
    }

    /**
     * @param string                                                $folderId                     Identifiant de dossier
     * @param Model\CegidMtsStockModelsChangeQualityLevelParameters $changeQualityLevelParameters Paramètres métiers pour le changement de choix qualité. Les champs typés object dans model ne sont pas modifiables
     * @param string                                                $fetch                        Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     *
     * @throws Exception\UnexpectedStatusCodeException
     */
    public function v1FolderIdStockUtilitiesChangeQualityLevel(string $folderId, Model\CegidMtsStockModelsChangeQualityLevelParameters $changeQualityLevelParameters, string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new Endpoint\V1FolderIdStockUtilitiesChangeQualityLevel($folderId, $changeQualityLevelParameters), $fetch);
    }

    /**
     * @param string $folderId        Identifiant de dossier
     * @param array  $queryParameters {
     *
     * @var string $motive Motif du mouvement
     * @var string $product Article
     * @var string $internalBatchNumber Lot interne
     * @var string $comment Bloc-note
     * @var string $dateMovement Date du mouvement
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     *
     * @throws Exception\UnexpectedStatusCodeException
     */
    public function v1FolderIdStockUtilitiesLockInternalBatchNumber(string $folderId, array $queryParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new Endpoint\V1FolderIdStockUtilitiesLockInternalBatchNumber($folderId, $queryParameters), $fetch);
    }

    /**
     * @param string $folderId        Identifiant de dossier
     * @param array  $queryParameters {
     *
     * @var string $motive Motif du mouvement
     * @var string $product Article
     * @var string $internalBatchNumber Lot interne
     * @var string $comment Bloc-note
     * @var string $dateMovement Date du mouvement
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     *
     * @throws Exception\UnexpectedStatusCodeException
     */
    public function v1FolderIdStockUtilitiesUnlockInternalBatchNumber(string $folderId, array $queryParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new Endpoint\V1FolderIdStockUtilitiesUnlockInternalBatchNumber($folderId, $queryParameters), $fetch);
    }

    /**
     * @param string $folderId        Identifiant de dossier
     * @param array  $queryParameters {
     *
     * @var string $customerId Code client
     * @var string $specialTariff Condition spéciale
     * @var string $productId Code article
     * @var float  $quantity Quantité d'articles (Si non renseigné => 1)
     * @var string $date Date du tarif (Si non renseigné => Date du jour)
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return Model\CegidMtsTariffModelsTariffSearchResult|\Psr\Http\Message\ResponseInterface
     *
     * @throws Exception\UnexpectedStatusCodeException
     */
    public function v1FolderIdTariffsSearchTariffSales(string $folderId, array $queryParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new Endpoint\V1FolderIdTariffsSearchTariffSales($folderId, $queryParameters), $fetch);
    }

    /**
     * @param string $folderId        Identifiant de dossier
     * @param array  $queryParameters {
     *
     * @var string $providerId Code fournisseur
     * @var string $specialTariff Condition spéciale
     * @var string $productId Code article
     * @var float  $quantity Quantité d'articles (Si non renseigné => 1)
     * @var string $date Date du tarif (Si non renseigné => Date du jour)
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return Model\CegidMtsTariffModelsTariffSearchResult|\Psr\Http\Message\ResponseInterface
     *
     * @throws Exception\UnexpectedStatusCodeException
     */
    public function v1FolderIdTariffsSearchTariffPurchases(string $folderId, array $queryParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new Endpoint\V1FolderIdTariffsSearchTariffPurchases($folderId, $queryParameters), $fetch);
    }

    /**
     * @param string $folderId        Identifiant de dossier
     * @param array  $queryParameters {
     *
     * @var bool   $singleFolder Mono-dossier
     * @var string $thirdPartyId Code tiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return Model\CegidMtsThirdPartyOutstandingOutstandingData|\Psr\Http\Message\ResponseInterface
     *
     * @throws Exception\UnexpectedStatusCodeException
     */
    public function v1FolderIdThirdPartiesOutstandingLoadAmounts(string $folderId, array $queryParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new Endpoint\V1FolderIdThirdPartiesOutstandingLoadAmounts($folderId, $queryParameters), $fetch);
    }

    /**
     * @param string $folderId Identifiant de dossier
     * @param string $fetch    Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return Model\CegidMtsWebRestfulApiAreasUserControllersV1UserData|\Psr\Http\Message\ResponseInterface
     *
     * @throws Exception\UnexpectedStatusCodeException
     */
    public function v1FolderIdUsersGetCurrentUserData(string $folderId, string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new Endpoint\V1FolderIdUsersGetCurrentUserData($folderId), $fetch);
    }

    /**
     * @param string                                                     $folderId  Identifiant de dossier
     * @param Model\CegidMtsWebRestfulApiAreasUserControllersV1UserModel $userModel Utilisateur
     * @param string                                                     $fetch     Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return Model\CegidSprintCommonServicesModelsCommonServiceResultDto|\Psr\Http\Message\ResponseInterface
     *
     * @throws Exception\UnexpectedStatusCodeException
     */
    public function v1FolderIdUsersUpdate(string $folderId, Model\CegidMtsWebRestfulApiAreasUserControllersV1UserModel $userModel, string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new Endpoint\V1FolderIdUsersUpdate($folderId, $userModel), $fetch);
    }

    /**
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return \Psr\Http\Message\ResponseInterface|null
     *
     * @throws Exception\UnexpectedStatusCodeException
     */
    public function v1UsersGetAvailableFolders(string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new Endpoint\V1UsersGetAvailableFolders(), $fetch);
    }

    public static function create($httpClient = null, array $additionalPlugins = [], array $additionalNormalizers = [])
    {
        if (null === $httpClient) {
            $httpClient = \Http\Discovery\Psr18ClientDiscovery::find();
            $plugins = [];
            if (count($additionalPlugins) > 0) {
                $plugins = array_merge($plugins, $additionalPlugins);
            }
            $httpClient = new \Http\Client\Common\PluginClient($httpClient, $plugins);
        }
        $requestFactory = \Http\Discovery\Psr17FactoryDiscovery::findRequestFactory();
        $streamFactory = \Http\Discovery\Psr17FactoryDiscovery::findStreamFactory();
        $normalizers = [new \Symfony\Component\Serializer\Normalizer\ArrayDenormalizer(), new Normalizer\JaneObjectNormalizer()];
        if (count($additionalNormalizers) > 0) {
            $normalizers = array_merge($normalizers, $additionalNormalizers);
        }
        $serializer = new \Symfony\Component\Serializer\Serializer($normalizers, [new \Symfony\Component\Serializer\Encoder\JsonEncoder(new \Symfony\Component\Serializer\Encoder\JsonEncode(), new \Symfony\Component\Serializer\Encoder\JsonDecode(['json_decode_associative' => true]))]);

        return new static($httpClient, $requestFactory, $serializer, $streamFactory);
    }
}
